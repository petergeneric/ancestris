
name = Demografie

 
info = <h1><center>Demografie</center></h1> \n\
 <p>Toont de leeftijdsverdeling van alle personen in een Gedcom bestand.  \n\
 Er worden grafieken getoond voor verschillende soorten gebeurtenissen. \n\
 </p>  \n\
 <center><img src="ReportDemographySample.gif"></center> \n\
 <h2>Toelichtingen op enkele van de grafieken</h2> \n\
 <ul> \n\
   <li><strong>leeftijd</strong> \n\
   De leeftijd waarop personen overleden. Normaal gesproken is dit een vlieger \
   met een brede staart wegens hoge kindersterfte.<br /> \n\
   </li><li><strong>De leeftijd wanneer een ouder overleed</strong> \n\
   De basis van de vlieger is doorgaans breder voor vrouwen.  \n\
   Zij stierven vaak bij de geboorte van het kind,  \n\
   of bij de geboorte van een jonger broetje of zusje. \n\
   </li> \n\
 </ul> \n\
 <h2>De exacte details</h2> \n\
 <p><a href="ReportDemography.java">ReportDemography.java</a> \n\
 is de meest betrouwbare bron om te achterhalen wat er precies geteld wordt. \n\
 Per grafiek staat er zoiets als:</p> \n\
 <pre>  new ...Analyzer (..., ..., translate(...)) &#123; \n\
  <br />    addFact (entiteit) &#123; \n\
  <br />     ... \n\
  <br />     addAge (persoon, gebeurtenis); \n\
  <br />   } \n\
  <br /> }</pre><p> \n\
 <em>translate</em> leest de tekst voor de tab en Y-as uit \
 <a href="ReportDemography.properties">ReportDemography.properties</a>.<br /> \n\
 <em>addFact</em> wordt per entiteit uit het GedCom bestand aangeroepen.<br /> \n\
 De <em>entiteit</em> is een familie of persoon.<br /> \n\
 <em>addAge</em> en zijn varianten voegen daadwerkelijk iets toe aan een grafiek.<br /> \n\
 De <em>persoon</em> is \u00f2f een lid van de familie, \u00f2f de entiteit zelf als dit een persoon is, \n\
 \u00f2f een naaste verwant van de pesoonsentiteit.<br /> \n\
 </p><p> \n\
 Merk op dat bij het berekenen van de leeftijd van een kind \
 veelal niet bekeken wordt of het al overleden is.</p> \n\
 <h2>Grafieken toevoegen</h2> \n\
 <p>U hoeft alleen een geschikt analyzer te kopieren en aan te passen. \n\
 Compileren kan met een van de hulpraporten. De nieuwe versie wordt pas actief  \n\
 na herstarten van het hele programma, of gebruik de knop om raport klassen opnieuw te laden.  \n\
 </p><p><em>try...catch</em> zorgt ervoor dat de entiteit of gebeurtenissen  \n\
 overgeslagen worden als benodige feiten ontbreken. Zonder dat zou het hele raport mislukken. \n\
 Soms is een enekele grote catch afdoende. Soms zijn er meerdere nodig  \n\
 (genest of na elkaar) opdat er geen gebeurtenissen onnodig overgeslagen worden. \n\
 </p><p>Voorbeelden om andere data te pakken te krijgen:</p> \n\
 <pre>  PropertyDate date = (PropertyDate)indi.getProperty(new TagPath("INDI:NATU:DATE"));</pre> \n\
 <p>Bekijk het bewerkingsoverzicht in GedCom mode om een TagPath samen te stellen.  \n\
 </p><p>Familieverbanden volgen:</p> \n\
 <pre>  Indi[] x = indi.getOlderSiblings();</pre> \n\
 <pre>  Indi[] x = indi.getYoungerSiblings();</pre> \n\
 <pre>  Indi[] x = indi.getBialogicalFather();</pre> \n\
 <pre>  Indi[] x = indi.getBialogicalMother();</pre> \n\
 <pre>  Indi[] x = indi.getSiblings(true); // include me or not</pre> \n\
 <pre>  Indi[] x = fam.getChildren();</pre> \n\
 <pre>  Indi[] x = fam.getChildren(true); // sorted or not</pre> \n\
 <pre>  Indi[] x = fam.getPartners();</pre> \n\
 <pre>  Indi   x = fam.getHusband();</pre> \n\
 <pre>  Indi   x = fam.getWife();</pre> \n\
 <pre>  Indi   x = fam.getOtherSpouse(indi); \n\
 <pre>  Fam[]  x = indi.getFamiliesWhereChild();</pre>  \n\
 <pre>  Fam[]  x = indi.getFamiliesWhereSpouse();</pre> \n\
 <pre>  Fam    x = indi.getFamilyWhereBiologicalChild();</pre> 

title = Bevolkingspiramiden voor {0}
ageGroupSize = Grootte van een leeftijdsgroep :
men      = Mannen
women    = Vrouwen
fathers  = Vaders
mothers  = Moeders
ageAtChildsBirth  = leeftijd bij de geboorte van een kind
ageAtFirstMariage = leeftijd bij het eerste huwelijk
ageAtParentsDeath = leeftijd wanneer een ouder overleed
ageOfYoungestChildLeftBehind = leeftijd jonste bij overlijden van een ouder
ageAtDivorce = leeftijd bij scheiding
ageOfOldestWhenYoungestWasBorn = leeftijd van oudste bij geboorte jongste
ageOfYoungestOrphan = leeftijd jongste bij overlijden 2e ouder
yearsSinceDeathOfSpouse = jaren dat een partner langer leefde
