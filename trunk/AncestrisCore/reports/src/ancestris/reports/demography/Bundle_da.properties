
name = Demografi

info  = <h1><center>Alderspyramider</center></h1> \
 <p>Viser demografiske diagrammer for alle personer i en gedcomfil. \
 Hvert diagram viser data for en anden type begivenhed. \
 </p> \
 <p> \
 <center><img src="ReportDemographySample.gif"></center> \
 </p> \
 <h2>Bem\u00c3\u00a6rkninger til nogle af diagrammerne</h2> \
 <ul> \
   <li><strong>Alder</strong> \
   Alder ved personens d\u00c3\u00b8d. \
   Normalt vil det v\u00c3\u00a6re en omvendt pyramide (bortset fra en  \
   stor basis grundet h\u00c3\u00b8j b\u00c3\u00b8rned\u00c3\u00b8delighed).</li> \
   <li><strong>Alder da for\u00c3\u00a6ldre d\u00c3\u00b8de</strong> \
   Denne pyramide er normalt bredere i bunden p\u00c3\u00a5 kvindesiden, da m\u00c3\u00b8dre d\u00c3\u00b8de ved f\u00c3\u00b8dslen \
   eller ved f\u00c3\u00b8dslen af en yngre bror eller s\u00c3\u00b8ster.</li> \
 </ul> \
 <h2>Matematiske detaljer</h2> \
 <p><a href="ReportDemography.java">ReportDemography.java</a> \
 er den mest p\u00c3\u00a5lidelige kilde til at finde ud af, hvad der pr\u00c3\u00a6cist t\u00c3\u00a6lles. \
 Med diagram findes noget i retning af:</p> \
 <pre>  new ...Analyzer (..., ..., translate(...)) &#123; \
  <br />    addFact (enhed) &#123; \
  <br />     ... \
  <br />     addAge (person, begivenhed); \ 
  <br />   } \
  <br /> }</pre><p> \
 <em>translate</em> henter m\u00c3\u00a6rket for fanen og Y-aksen fra \
 <a href="ReportDemography.properties">ReportDemography.properties</a>.<br /> \
 <em>addFact</em> udf\u00c3\u00b8res for hver enhed.<br /> \
 <em>Enheden</em> er en familie eller person.<br /> \
 <em>addAge</em> og dets varianter t\u00c3\u00a6lle reelt noget.<br /> \
 <em>Personen</em> er enten et medlem af familien, \
 eller enheden, hvis det er en person, eller en n\u00c3\u00a6r sl\u00c3\u00a6gtning til enheden. \
 </p> \
 <p>Bem\u00c3\u00a6rk at n\u00c3\u00a5r et barns alder beregnes, ignoreres dets eventuelle d\u00c3\u00b8d pt.</p> \
 <h2>Tilf\u00c3\u00b8j endnu et diagram</h2> \
 <p>Kopier og juster en analyzer, der ligner det, du \u00c3\u00b8nsker. \
 Brug den passende v\u00c3\u00a6rkt\u00c3\u00b8js-rapport til at compilere og genindl\u00c3\u00a6se rapport-klasserne. \
 Den nye version er f\u00c3\u00b8rst aktiv, n\u00c3\u00a5r hele programmet er genstartet,  \
 eller brug knappen Genindl\u00c3\u00a6s rapportklasser. \
 </p> \
 <p>Bem\u00c3\u00a6rk at <em>pr\u00c3\u00b8v...fang</em> springer over enheder eller begivenheder  \
 hvis de n\u00c3\u00b8dvendige egenskaber eller datoer ikke er til r\u00c3\u00a5dighed, ellers ville rapporten g\u00c3\u00a5 ned. \
 Nogle gange er en stor catch nok. For at undg\u00c3\u00a5 un\u00c3\u00b8dige skips, \
 har du m\u00c3\u00a5ske brug for flere catches: indeni og/eller efter hinanden.    \
 </p> \
 <p>Eksempel til at finde en anden type date:</p> \
 <pre>  PropertyDate date = (PropertyDate)indi.getProperty(new TagPath("INDI:NATU:DATE"));</pre> \
 <p>Se edit-visning i GedCom-modus for at f\u00c3\u00a5 en TagPath.  \
 </p> \
 <p>Methoder til f\u00c3\u00b8lgende forhold</p> \
 <pre>  Indi[] x = indi.getOlderSiblings();</pre> \
 <pre>  Indi[] x = indi.getYoungerSiblings();</pre> \
 <pre>  Indi[] x = indi.getBialogicalFather();</pre> \
 <pre>  Indi[] x = indi.getBialogicalMother();</pre> \
 <pre>  Indi[] x = indi.getSiblings(true); // medtag mig eller ej</pre> \
 <pre>  Indi[] x = fam.getChildren();</pre> \
 <pre>  Indi[] x = fam.getChildren(true); // sorteret eller ej</pre> \
 <pre>  Indi[] x = fam.getPartners();</pre> \
 <pre>  Indi   x = fam.getHusband();</pre> \
 <pre>  Indi   x = fam.getWife();</pre> \
 <pre>  Indi   x = fam.getOtherSpouse(indi); \
 <pre>  Fam[]  x = indi.getFamiliesWhereChild();</pre>  \
 <pre>  Fam[]  x = indi.getFamiliesWhereSpouse();</pre> \
 <pre>  Fam    x = indi.getFamilyWhereBiologicalChild();</pre> 


title = Alderspyramide for {0}
ageGroupSize = St\u00c3\u00b8rrelse af aldersgruppe :
men      = M\u00c3\u00a6nd
women    = Kvinder
fathers  = F\u00c3\u00a6dre
mothers  = M\u00c3\u00b8dre
ageAtChildsBirth  = alder ved et barns f\u00c3\u00b8dsel
ageAtFirstMariage = alder ved f\u00c3\u00b8rste vielse
ageAtParentsDeath = alder ved en for\u00c3\u00a6ldres d\u00c3\u00b8d
ageOfYoungestChildLeftBehind = yngste barns alder ved en for\u00c3\u00a6ldres d\u00c3\u00b8d
ageAtDivorce = alder ved skilsmisse
ageOfOldestWhenYoungestWasBorn = den \u00c3\u00a6ldstes alder ved den yngstes f\u00c3\u00b8dsel
ageOfYoungestOrphan = den yngstes alder ved den 2. for\u00c3\u00a6ldres d\u00c3\u00b8d
yearsSinceDeathOfSpouse = \u00c3\u00a5r som en af partnerne lever l\u00c3\u00a6ngere
