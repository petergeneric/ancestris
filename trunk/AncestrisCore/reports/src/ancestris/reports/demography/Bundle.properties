# Ancestris - http://www.ancestris.org
# 
# Copyright 2021 Ancestris
# 
# Author: Fr\u00e9d\u00e9ric Lapeyre (frederic@ancestris.org).
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# Message strings for the ReportDemography Report
#
# Languages supported :
#     - Danish - 2017/08/26 by Lars Helbo
#     - Dutch
#     - English (default)
#     - French
#     - German
#     - Latvian - 2017/12/14 - M\u00c4\u0081rti\u00c5\u0086\u00c5\u00a1 An\u00c5\u00a1mits
#     - Polish - 2017/01/12 by Bogumi\u00c5\u0082 Cieniek
#     - Swedish
#
# ---------------------------------------------------------------------
# ====>  IMPORTANT : This file must be saved with UTF-8 encoding schema
# ---------------------------------------------------------------------
#

# Last updated: 


#NOI18N
author   = Nils Meier, Jo Pol
#NOI18N
version  = 2.0
#NOI18N
updated  = 14-10-2008
#NOI18N
category = chart

name    = Age pyramid graph

info    = <h1><center>Age pyramid</center></h1> \n\
 <p>Shows demographic charts for all the individuals in a Gedcom file. \n\
 Each chart displays data for a different type of event. \n\
 </p> \n\
 <p> \n\
 <center><img src="ReportDemographySample.gif"></center> \n\
 </p> \n\
 <h2>Remarks for some of the charts</h2> \n\
 <ul> \n\
   <li><strong>Age</strong> \n\
   The age when individuals deceased. \n\
   Normally that should be an inverted pyramid (aside from a  \n\
   large base because of high infant mortality).</li> \n\
   <li><strong>Age when parent died</strong> \n\
   Usualy the pyramid is wider at the bottom for women because they died at birth \
   or when giving birth to a younger brother or sister.</li> \n\
 </ul> \n\
 <h2>The mathematical details</h2> \n\
 <p><a href="ReportDemography.java">ReportDemography.java</a> \n\
 is the most reliable source to find out exactly what is counted. \n\
 Per chart you will find something like:</p> \n\
 <pre>  new ...Analyzer (..., ..., translate(...)) &#123; \n\
  <br />    addFact (entity) &#123; \n\
  <br />     ... \n\
  <br />     addAge (individual, event); \n\
  <br />   } \n\
  <br /> }</pre><p> \n\
 <em>translate</em> gets the label for the tab and Y-axis from \
 <a href="ReportDemography.properties">ReportDemography.properties</a>.<br /> \n\
 <em>addFact</em> is executed per entity.<br /> \n\
 The <em>entity</em> is a family or individual.<br /> \n\
 <em>addAge</em> and its variants actually count something.<br /> \n\
 The <em>individual</em> is either a member of the family, \n\
 or the entity if it is an individual, or a close relative of the entity. \n\
 </p><p> \n\
 Note that when a child's age is computed, its eventual death is currently ignored.</p> \n\
 <h2>Add another chart</h2><p> \n\
 Just duplicate and adjust an analyzer that comes close to your wishes. \n\
 Use the appropriate utility report to compile and reload the report classes. \n\
 The new version will become active after restarting the whole application,  \n\
 or use the button to reload report classes. \n\
 </p><p>  \n\
 Note that <em>try...catch</em> skips entities or events  \n\
 in case required properties or dates are not available, otherwise the report would crash. \n\
 Sometimes one big catch is enough. To avoid unnecessary skips, \n\
 you might need more catches: nested and/or one after the other.    \n\
 </p><p>Example to get another type of date:</p> \n\
 <pre>  PropertyDate date = (PropertyDate)indi.getProperty(new TagPath("INDI:NATU:DATE"));</pre> \n\
 <p>Examine the edit view in GedCom mode to assemble a TagPath.  \n\
 </p><p>Methods to follow relations</p> \n\
 <pre>  Indi[] x = indi.getOlderSiblings();</pre> \n\
 <pre>  Indi[] x = indi.getYoungerSiblings();</pre> \n\
 <pre>  Indi[] x = indi.getBialogicalFather();</pre> \n\
 <pre>  Indi[] x = indi.getBialogicalMother();</pre> \n\
 <pre>  Indi[] x = indi.getSiblings(true); // include me or not</pre> \n\
 <pre>  Indi[] x = fam.getChildren();</pre> \n\
 <pre>  Indi[] x = fam.getChildren(true); // sorted or not</pre> \n\
 <pre>  Indi[] x = fam.getPartners();</pre> \n\
 <pre>  Indi   x = fam.getHusband();</pre> \n\
 <pre>  Indi   x = fam.getWife();</pre> \n\
 <pre>  Indi   x = fam.getOtherSpouse(indi); \n\
 <pre>  Fam[]  x = indi.getFamiliesWhereChild();</pre>  \n\
 <pre>  Fam[]  x = indi.getFamiliesWhereSpouse();</pre> \n\
 <pre>  Fam    x = indi.getFamilyWhereBiologicalChild();</pre> 


title    = Demographic Pyramid for {0}
ageGroupSize    = Size of Age Groups :
men         = Men
women       = Women
fathers     = Fathers
mothers     = Mothers
ageAtChildsBirth     = age when a child was born
ageAtFirstMariage    = age when married for the first time
ageAtParentsDeath    = age when a parent died
ageOfYoungestChildLeftBehind    = age of youngest child when a parent died
ageAtDivorce    = age at divorce
ageOfOldestWhenYoungestWasBorn    = age of the oldest when the youngest was born
ageOfYoungestOrphan    = age of youngest when second parent died
yearsSinceDeathOfSpouse    = years that a spouse is outlived
