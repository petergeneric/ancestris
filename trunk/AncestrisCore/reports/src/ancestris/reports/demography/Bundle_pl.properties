
name = Demografia


info = <h1><center>Piramidy demograficzne</center></h1> \
 <p>Pokazuje wykres demograficzny dla wszystkich os\u00F3b z pliku GEDCOM. \
 Ka\u017Cdy wykres pokazuje dane dla r\u00F3\u017Cnych zdarze\u0144.</p> \
 <p><center><img src="ReportDemographySample.gif"></center></p> \
 <h2>Remarks for some of the charts</h2> \
 <ul> \
   <li><strong>Wiek</strong> \
   Wiek os\u00F3b zmar\u0142ych. \
   Zwykle powinna to by\u0107 odwr\u00F3cona piramida (na odwr\u00F3d w przypadku do \
   wysokiej \u015Bmiertelno\u015Bci niemowl\u0105t).</li> \
   <li><strong>Wiek, kiedy umiera rodzic</strong> \
   Zazwyczaj piramida jest szersza u do\u0142u dla kobiet, poniewa\u017C umiera\u0142y \
   podczas porodu lub po urodzeniu m\u0142odszego brata lub siostry.</li> \
 </ul> \
 <h2>Dane matematyczne</h2> \
 <p><a href="ReportDemography.java">ReportDemography.java</a> \
 jest najbardziej wiarygodnym \u017Ar\u00F3d\u0142em, aby dowiedzie\u0107 co by\u0142o liczone. \
 Dla wykresu znajdziesz co\u015B takiego:</p> \
 <pre>  new ...Analyzer (..., ..., translate(...)) &#123; \
  <br />    addFact (entity) &#123; \
  <br />     ... \
  <br />     addAge (individual, event); \
  <br />   } \
  <br /> }</pre><p> \
 <em>translate</em> pobiera etykiet\u0119 dla zak\u0142adki i osi Y z \
 <a href="ReportDemography.properties">ReportDemography.properties</a>.<br /> \
 <em>addFact</em> jest wykonywane dla ka\u017Cdego wpisu.<br /> \
 <em>entity</em> jest rodzin\u0105 osoby.<br /> \
 <em>addAge</em> i jego odmiany co\u015B zliczaj\u0105.<br /> \
 <em>individual</em> jest albo cz\u0142onkiem rodziny, \
 albo wpisem, je\u017Celi jest osob\u0105 fizyczn\u0105, lub bliskim krewnym wpisu.</p> \
 <p>Zauwa\u017C, \u017Ce kiedy wiek dziecka jest obliczany, jego ewentualny zgon jest ignorowany.</p> \
 <h2>Dodaj kolejny wykres</h2> \
 <p>Po prostu zduplikuj i ustaw analiz\u0119 w spos\u00F3b w jaki chcesz. \
 U\u017Cyj odpowiednich narz\u0119dzi raportu do stworzenia klas raportu. \
 Nowa wersja b\u0119dzie aktywna po restarcie ca\u0142ej aplikacji,  \
 lub u\u017Cyj przycisku do prze\u0142adowania klas raportu.</p> \
 <p>Prosz\u0119 zauwa\u017Cy\u0107, \u017Ce <em>try...catch</em> pomija wpisy lub zdarzenia  \
 w przypadku, gdy wymagane w\u0142a\u015Bciwo\u015Bci lub daty nie s\u0105 dost\u0119pne, w przeciwnym razie raport nie powstanie. \
 Czasami jedno wielkie przechwycenie wystarczy. Aby unikn\u0105\u0107 niepotrzebnych przeskok\u00F3w, \
 mo\u017Ce trzeba wi\u0119cej przechwyce\u0144: zagnie\u017Cd\u017Cone i/lub jeden po drugim.    \
 </p><p>Przyk\u0142ad aby uzyska\u0107 inny typ daty:</p> \
 <pre>  PropertyDate date = (PropertyDate)indi.getProperty(new TagPath("INDI:NATU:DATE"));</pre> \
 <p>Zbadaj widok edycji w trybie GEDCOM aby zebra\u0107 TagPath. \
 </p><p>Metody \u015Bledzenia relacji</p> \
 <pre>  Indi[] x = indi.getOlderSiblings();</pre> \
 <pre>  Indi[] x = indi.getYoungerSiblings();</pre> \
 <pre>  Indi[] x = indi.getBialogicalFather();</pre> \
 <pre>  Indi[] x = indi.getBialogicalMother();</pre> \
 <pre>  Indi[] x = indi.getSiblings(true); // include me or not</pre> \
 <pre>  Indi[] x = fam.getChildren();</pre> \
 <pre>  Indi[] x = fam.getChildren(true); // sorted or not</pre> \
 <pre>  Indi[] x = fam.getPartners();</pre> \
 <pre>  Indi   x = fam.getHusband();</pre> \
 <pre>  Indi   x = fam.getWife();</pre> \
 <pre>  Indi   x = fam.getOtherSpouse(indi); \
 <pre>  Fam[]  x = indi.getFamiliesWhereChild();</pre>  \
 <pre>  Fam[]  x = indi.getFamiliesWhereSpouse();</pre> \
 <pre>  Fam    x = indi.getFamilyWhereBiologicalChild();</pre> 

title = Piramida demograficzna dla {0}
ageGroupSize = Rozmiar grup wiekowych:
men      = M\u0119\u017Cczyzna
women    = Kobieta
fathers  = Ojcowie
mothers  = Matki
ageAtChildsBirth  = wiek, kiedy urodzi\u0142o si\u0119 dziecko
ageAtFirstMariage = wiek, kiedy o\u017Ceni\u0142 si\u0119 po raz pierwszy
ageAtParentsDeath = wiek, kiedy rodzic zmar\u0142
ageOfYoungestChildLeftBehind = wiek najm\u0142odszego dziecka, kiedy rodzic zmar\u0142
ageAtDivorce = wiek w momencie rozwodu
ageOfOldestWhenYoungestWasBorn = wiek najstarszego, kiedy urodzi\u0142 si\u0119 najm\u0142odszy
ageOfYoungestOrphan = wiek najm\u0142odszego, kiedy drugi rodzic zmar\u0142
yearsSinceDeathOfSpouse = lata, kt\u00F3re ma\u0142\u017Conek prze\u017Cy\u0142
