/*
 * Ancestris - http://www.ancestris.org
 * 
 * Copyright 2020 Ancestris
 * 
 * Author: Frédéric Lapeyre (frederic@ancestris.org).
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
package ancestris.modules.gedcom.genids;

import genj.gedcom.Context;
import genj.gedcom.Entity;
import genj.gedcom.Gedcom;
import genj.util.Registry;
import java.awt.Color;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.openide.util.NbBundle;

/**
 *
 * @author frederic
 */
public class GenIDPanel extends javax.swing.JPanel {

    private Context context;
    private Registry registry = null;
    private Settings settings = new Settings();    
    private JComponent[] cats = null;
    private JComponent[] singles = null;
    
    private boolean validChange = false, validFrom = false, validTo = false;

    /**
     * Creates new form GenIDPanel
     */
    public GenIDPanel(Context context) {
        this.context = context;
        registry = context.getGedcom().getRegistry();
        
        initComponents();

        jCheckBoxIndi.setText(Gedcom.getName(Gedcom.INDI));
        jCheckBoxFam.setText(Gedcom.getName(Gedcom.FAM));
        jCheckBoxNote.setText(Gedcom.getName(Gedcom.NOTE));
        jCheckBoxObje.setText(Gedcom.getName(Gedcom.OBJE));
        jCheckBoxSour.setText(Gedcom.getName(Gedcom.SOUR));
        jCheckBoxRepo.setText(Gedcom.getName(Gedcom.REPO));
        jCheckBoxSubm.setText(Gedcom.getName(Gedcom.SUBM));

        cats = new JComponent[]{jCheckBoxIndi, jCheckBoxFam, jCheckBoxObje, jCheckBoxNote, jCheckBoxSour, jCheckBoxSubm, jCheckBoxRepo, jCheckBoxAllCat, 
                                jLabelLetterTitle, jLabelLetterContent, jLabelPrefix, jTextFieldPrefix, jLabelLen, jTextFieldLen, jLabelSuffix, jTextFieldSuffix };
        singles = new JComponent[]{jLabelIDFrom, jTextFieldIDFrom, jButtonCID, jLabelFromName, jLabelIDTo, jTextFieldIDTo, jLabelToStatus};

        jLabelFromName.setText("");
        jLabelToStatus.setText("");

        jTextFieldIDFrom.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                updateFromEntity();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateFromEntity();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                updateFromEntity();
            }
            public void updateFromEntity() {
                String str = jTextFieldIDFrom.getText().trim();
                Entity ent = context.getGedcom().getEntity(str);
                validFrom = ent != null;
                jLabelFromName.setText(validFrom ? ent.toString(false) : NbBundle.getMessage(GenIDPanel.class, "Msg_UnknownEntity"));
                jLabelFromName.setForeground(validFrom ? Color.BLACK : Color.RED);
                updateValidityFlag();
            }

        });

        jTextFieldIDTo.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                updateToStatus();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateToStatus();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                updateToStatus();
            }
            public void updateToStatus() {
                Entity ent = context.getGedcom().getEntity(jTextFieldIDTo.getText());
                validTo = ent == null;
                jLabelToStatus.setText(NbBundle.getMessage(GenIDPanel.class, validTo ? "Msg_Available" : "Msg_NotAvailable"));
                jLabelToStatus.setForeground(validTo ? Color.BLACK : Color.RED);
                updateValidityFlag();
            }
        });
        
        loadPreferences();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jRadioButtonCategory = new javax.swing.JRadioButton();
        jCheckBoxIndi = new javax.swing.JCheckBox();
        jCheckBoxFam = new javax.swing.JCheckBox();
        jCheckBoxObje = new javax.swing.JCheckBox();
        jCheckBoxNote = new javax.swing.JCheckBox();
        jCheckBoxSour = new javax.swing.JCheckBox();
        jCheckBoxRepo = new javax.swing.JCheckBox();
        jCheckBoxSubm = new javax.swing.JCheckBox();
        jCheckBoxAllCat = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabelLetterTitle = new javax.swing.JLabel();
        jLabelLetterContent = new javax.swing.JLabel();
        jLabelPrefix = new javax.swing.JLabel();
        jTextFieldPrefix = new javax.swing.JTextField();
        jLabelLen = new javax.swing.JLabel();
        jTextFieldLen = new javax.swing.JTextField();
        jLabelSuffix = new javax.swing.JLabel();
        jTextFieldSuffix = new javax.swing.JTextField();
        jRadioButtonSingle = new javax.swing.JRadioButton();
        jLabelIDFrom = new javax.swing.JLabel();
        jTextFieldIDFrom = new javax.swing.JTextField();
        jLabelFromName = new javax.swing.JLabel();
        jLabelIDTo = new javax.swing.JLabel();
        jTextFieldIDTo = new javax.swing.JTextField();
        jLabelToStatus = new javax.swing.JLabel();
        jButtonCID = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(400, 200));
        setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Bitstream Vera Sans", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jLabel1.text")); // NOI18N

        buttonGroup1.add(jRadioButtonCategory);
        org.openide.awt.Mnemonics.setLocalizedText(jRadioButtonCategory, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jRadioButtonCategory.text")); // NOI18N
        jRadioButtonCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCategoryActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxIndi, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jCheckBoxIndi.text")); // NOI18N
        jCheckBoxIndi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxIndiActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxFam, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jCheckBoxFam.text")); // NOI18N
        jCheckBoxFam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFamActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxObje, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jCheckBoxObje.text")); // NOI18N
        jCheckBoxObje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxObjeActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxNote, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jCheckBoxNote.text")); // NOI18N
        jCheckBoxNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxNoteActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxSour, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jCheckBoxSour.text")); // NOI18N
        jCheckBoxSour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSourActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxRepo, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jCheckBoxRepo.text")); // NOI18N
        jCheckBoxRepo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxRepoActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxSubm, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jCheckBoxSubm.text")); // NOI18N
        jCheckBoxSubm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSubmActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxAllCat, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jCheckBoxAllCat.text")); // NOI18N
        jCheckBoxAllCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAllCatActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabelLetterTitle, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jLabelLetterTitle.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelLetterContent, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jLabelLetterContent.text")); // NOI18N
        jLabelLetterContent.setToolTipText(org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jLabelLetterContent.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelPrefix, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jLabelPrefix.text")); // NOI18N

        jTextFieldPrefix.setText(org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jTextFieldPrefix.text")); // NOI18N
        jTextFieldPrefix.setToolTipText(org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jTextFieldPrefix.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelLen, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jLabelLen.text")); // NOI18N

        jTextFieldLen.setText(org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jTextFieldLen.text")); // NOI18N
        jTextFieldLen.setToolTipText(org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jTextFieldLen.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelSuffix, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jLabelSuffix.text")); // NOI18N

        jTextFieldSuffix.setText(org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jTextFieldSuffix.text")); // NOI18N
        jTextFieldSuffix.setToolTipText(org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jTextFieldSuffix.toolTipText")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelLetterContent)
                    .addComponent(jLabelLetterTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelPrefix)
                    .addComponent(jTextFieldPrefix, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelLen)
                    .addComponent(jTextFieldLen, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelSuffix)
                    .addComponent(jTextFieldSuffix, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPrefix)
                    .addComponent(jLabelSuffix)
                    .addComponent(jLabelLen)
                    .addComponent(jLabelLetterTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSuffix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLetterContent))
                .addContainerGap())
        );

        buttonGroup1.add(jRadioButtonSingle);
        org.openide.awt.Mnemonics.setLocalizedText(jRadioButtonSingle, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jRadioButtonSingle.text")); // NOI18N
        jRadioButtonSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSingleActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabelIDFrom, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jLabelIDFrom.text")); // NOI18N

        jTextFieldIDFrom.setText(org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jTextFieldIDFrom.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelFromName, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jLabelFromName.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelIDTo, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jLabelIDTo.text")); // NOI18N

        jTextFieldIDTo.setText(org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jTextFieldIDTo.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelToStatus, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jLabelToStatus.text")); // NOI18N

        jButtonCID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/gedcom/genids/current.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButtonCID, org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jButtonCID.text")); // NOI18N
        jButtonCID.setToolTipText(org.openide.util.NbBundle.getMessage(GenIDPanel.class, "GenIDPanel.jButtonCID.toolTipText")); // NOI18N
        jButtonCID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jRadioButtonCategory))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonSingle)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelIDFrom)
                                            .addComponent(jLabelIDTo))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFieldIDFrom)
                                            .addComponent(jTextFieldIDTo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelToStatus)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButtonCID, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabelFromName))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(127, 127, 127)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBoxObje)
                                            .addComponent(jCheckBoxNote)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBoxIndi)
                                            .addComponent(jCheckBoxFam))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxSour)
                                    .addComponent(jCheckBoxRepo))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxAllCat)
                                    .addComponent(jCheckBoxSubm))))
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonCategory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxIndi)
                    .addComponent(jCheckBoxObje)
                    .addComponent(jCheckBoxSubm)
                    .addComponent(jCheckBoxSour))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxFam)
                    .addComponent(jCheckBoxNote)
                    .addComponent(jCheckBoxRepo)
                    .addComponent(jCheckBoxAllCat))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonSingle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIDFrom)
                    .addComponent(jTextFieldIDFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelFromName)
                    .addComponent(jButtonCID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIDTo)
                    .addComponent(jTextFieldIDTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelToStatus))
                .addGap(17, 17, 17))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCategoryActionPerformed
        enableCat(true);
    }//GEN-LAST:event_jRadioButtonCategoryActionPerformed

    private void jRadioButtonSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSingleActionPerformed
        enableCat(false);
    }//GEN-LAST:event_jRadioButtonSingleActionPerformed

    private void jCheckBoxAllCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAllCatActionPerformed
        for (int i = 0; i < 7; i++) {
            ((JCheckBox) cats[i]).setSelected(jCheckBoxAllCat.isSelected());
        }
    }//GEN-LAST:event_jCheckBoxAllCatActionPerformed

    private void jCheckBoxIndiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxIndiActionPerformed
        checkAllCat();
    }//GEN-LAST:event_jCheckBoxIndiActionPerformed

    private void jCheckBoxFamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFamActionPerformed
        checkAllCat();
    }//GEN-LAST:event_jCheckBoxFamActionPerformed

    private void jCheckBoxObjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxObjeActionPerformed
        checkAllCat();
    }//GEN-LAST:event_jCheckBoxObjeActionPerformed

    private void jCheckBoxNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxNoteActionPerformed
        checkAllCat();
    }//GEN-LAST:event_jCheckBoxNoteActionPerformed

    private void jCheckBoxSourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSourActionPerformed
        checkAllCat();
    }//GEN-LAST:event_jCheckBoxSourActionPerformed

    private void jCheckBoxRepoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxRepoActionPerformed
        checkAllCat();
    }//GEN-LAST:event_jCheckBoxRepoActionPerformed

    private void jCheckBoxSubmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSubmActionPerformed
        checkAllCat();
    }//GEN-LAST:event_jCheckBoxSubmActionPerformed

    private void jButtonCIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCIDActionPerformed
        setCurrentEntityID();
    }//GEN-LAST:event_jButtonCIDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonCID;
    private javax.swing.JCheckBox jCheckBoxAllCat;
    private javax.swing.JCheckBox jCheckBoxFam;
    private javax.swing.JCheckBox jCheckBoxIndi;
    private javax.swing.JCheckBox jCheckBoxNote;
    private javax.swing.JCheckBox jCheckBoxObje;
    private javax.swing.JCheckBox jCheckBoxRepo;
    private javax.swing.JCheckBox jCheckBoxSour;
    private javax.swing.JCheckBox jCheckBoxSubm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelFromName;
    private javax.swing.JLabel jLabelIDFrom;
    private javax.swing.JLabel jLabelIDTo;
    private javax.swing.JLabel jLabelLen;
    private javax.swing.JLabel jLabelLetterContent;
    private javax.swing.JLabel jLabelLetterTitle;
    private javax.swing.JLabel jLabelPrefix;
    private javax.swing.JLabel jLabelSuffix;
    private javax.swing.JLabel jLabelToStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonCategory;
    private javax.swing.JRadioButton jRadioButtonSingle;
    private javax.swing.JTextField jTextFieldIDFrom;
    private javax.swing.JTextField jTextFieldIDTo;
    private javax.swing.JTextField jTextFieldLen;
    private javax.swing.JTextField jTextFieldPrefix;
    private javax.swing.JTextField jTextFieldSuffix;
    // End of variables declaration//GEN-END:variables

    private void checkAllCat() {
        boolean all = true;
        for (int i = 0; i < 7; i++) {
            all &= ((JCheckBox) cats[i]).isSelected();
        }
        jCheckBoxAllCat.setSelected(all);
    }

    private void enableCat(boolean b) {
        for (JComponent c : cats) {
            c.setEnabled(b);
        }
        for (JComponent c : singles) {
            c.setEnabled(!b);
        }
    }
    
    private void updateValidityFlag() {
        validChange = validFrom & validTo;
    }
    
    public boolean getValidity() {
        return validChange;
    }

    private void loadPreferences() {
        boolean catIsON = registry.get("GenIDCategoryON", true);
        jRadioButtonCategory.setSelected(catIsON);
        jRadioButtonSingle.setSelected(!catIsON);
        enableCat(catIsON);
        for (int i = 0; i < 8; i++) {
            ((JCheckBox) cats[i]).setSelected(registry.get("GenIDCategory"+i, i==0));
        }
        jTextFieldPrefix.setText(registry.get("GenIDCategoryPrefix", ""));
        jTextFieldLen.setText(registry.get("GenIDCategoryLen", ""));
        jTextFieldSuffix.setText(registry.get("GenIDCategorySuffix", ""));
        jTextFieldIDFrom.setText(registry.get("GenIDSingleFrom", ""));
        jTextFieldIDTo.setText(registry.get("GenIDSingleTo", ""));
    }

    public void savePreferences() {
        registry.put("GenIDCategoryON", jRadioButtonCategory.isSelected());
        settings.isCat = jRadioButtonCategory.isSelected();
        for (int i = 0; i < 8; i++) {
            registry.put("GenIDCategory"+i, ((JCheckBox) cats[i]).isSelected());
            if (i<7) {
                settings.entsTags[i] = ((JCheckBox) cats[i]).isSelected() ? Gedcom.ENTITIES[i] : "";  // requires check boxes to be in the same order as gedcom.Entities.
            }
        }
        registry.put("GenIDCategoryPrefix", jTextFieldPrefix.getText().trim());
        registry.put("GenIDCategoryLen", jTextFieldLen.getText().trim());
        registry.put("GenIDCategorySuffix", jTextFieldSuffix.getText().trim());
        registry.put("GenIDSingleFrom", jTextFieldIDFrom.getText().trim());
        registry.put("GenIDSingleTo", jTextFieldIDTo.getText().trim());

        settings.prefix = jTextFieldPrefix.getText().trim();
        settings.suffix = jTextFieldSuffix.getText().trim();
        String str = jTextFieldLen.getText().replaceAll("[^0-9]", "");
        settings.len = str.isEmpty() ? 0 : Integer.parseInt(str);
        settings.IDFrom = jTextFieldIDFrom.getText().trim();
        settings.IDTo = jTextFieldIDTo.getText().trim();
    }

    public Settings getSettings() {
        return settings;
    }

    private void setCurrentEntityID() {
        jTextFieldIDFrom.setText(context.getEntity().getId());
    }

    
    public static class Settings {
        
        public boolean isCat = true;
        public String[] entsTags = new String[7];
        public String prefix = "";
        public int len = 0;
        public String suffix = "";
        public String IDFrom = "";
        public String IDTo = "";

    }
    
    
    
}
