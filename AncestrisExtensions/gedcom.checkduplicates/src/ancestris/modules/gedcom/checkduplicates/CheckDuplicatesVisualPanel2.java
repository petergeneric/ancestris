package ancestris.modules.gedcom.checkduplicates;

import static ancestris.modules.gedcom.checkduplicates.Bundle.CheckDuplicatesVisualPanel2_title;
import genj.gedcom.Gedcom;
import java.util.ArrayList;
import javax.swing.JPanel;
import org.openide.util.NbBundle;

@NbBundle.Messages("CheckDuplicatesVisualPanel2.title=Entities selection")
public final class CheckDuplicatesVisualPanel2 extends JPanel {

    private ArrayList<String> selectedEntities = new ArrayList<String>() {

        {
            add(Gedcom.INDI);
        }
    };

    /**
     * Creates new form CheckDuplicatesVisualPanel2
     */
    public CheckDuplicatesVisualPanel2() {
        initComponents();
    }

    @Override
    public String getName() {
        return CheckDuplicatesVisualPanel2_title();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        individualsCheckBox = new javax.swing.JCheckBox();
        familiesCheckBox = new javax.swing.JCheckBox();
        submittersCheckBox = new javax.swing.JCheckBox();
        repositoresCheckBox = new javax.swing.JCheckBox();
        sourcesCheckBox = new javax.swing.JCheckBox();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(CheckDuplicatesVisualPanel2.class, "CheckDuplicatesVisualPanel2.jPanel1.border.title"), javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.white)); // NOI18N

        individualsCheckBox.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(individualsCheckBox, org.openide.util.NbBundle.getMessage(CheckDuplicatesVisualPanel2.class, "CheckDuplicatesVisualPanel2.individualsCheckBox.text")); // NOI18N
        individualsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                individualsCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(familiesCheckBox, org.openide.util.NbBundle.getMessage(CheckDuplicatesVisualPanel2.class, "CheckDuplicatesVisualPanel2.familiesCheckBox.text")); // NOI18N
        familiesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                familiesCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(submittersCheckBox, org.openide.util.NbBundle.getMessage(CheckDuplicatesVisualPanel2.class, "CheckDuplicatesVisualPanel2.submittersCheckBox.text")); // NOI18N
        submittersCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submittersCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(repositoresCheckBox, org.openide.util.NbBundle.getMessage(CheckDuplicatesVisualPanel2.class, "CheckDuplicatesVisualPanel2.repositoresCheckBox.text")); // NOI18N
        repositoresCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repositoresCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(sourcesCheckBox, org.openide.util.NbBundle.getMessage(CheckDuplicatesVisualPanel2.class, "CheckDuplicatesVisualPanel2.sourcesCheckBox.text")); // NOI18N
        sourcesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourcesCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(individualsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(familiesCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submittersCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sourcesCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(repositoresCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(individualsCheckBox)
                    .addComponent(familiesCheckBox)
                    .addComponent(submittersCheckBox)
                    .addComponent(sourcesCheckBox)
                    .addComponent(repositoresCheckBox))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(223, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void individualsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_individualsCheckBoxActionPerformed
        if (individualsCheckBox.isSelected()) {
            getSelectedEntities().add(Gedcom.INDI);
        } else {
            getSelectedEntities().remove(Gedcom.INDI);
        }
    }//GEN-LAST:event_individualsCheckBoxActionPerformed

    private void familiesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_familiesCheckBoxActionPerformed
        if (familiesCheckBox.isSelected()) {
            getSelectedEntities().add(Gedcom.FAM);
        } else {
            getSelectedEntities().remove(Gedcom.FAM);
        }
    }//GEN-LAST:event_familiesCheckBoxActionPerformed

    private void submittersCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submittersCheckBoxActionPerformed
        if (sourcesCheckBox.isSelected()) {
            getSelectedEntities().add(Gedcom.SUBM);
        } else {
            getSelectedEntities().remove(Gedcom.SUBM);
        }
    }//GEN-LAST:event_submittersCheckBoxActionPerformed

    private void sourcesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourcesCheckBoxActionPerformed
        if (sourcesCheckBox.isSelected()) {
            getSelectedEntities().add(Gedcom.SOUR);
        } else {
            getSelectedEntities().remove(Gedcom.SOUR);
        }
    }//GEN-LAST:event_sourcesCheckBoxActionPerformed

    private void repositoresCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repositoresCheckBoxActionPerformed
        if (repositoresCheckBox.isSelected()) {
            getSelectedEntities().add(Gedcom.REPO);
        } else {
            getSelectedEntities().remove(Gedcom.REPO);
        }
    }//GEN-LAST:event_repositoresCheckBoxActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox familiesCheckBox;
    private javax.swing.JCheckBox individualsCheckBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox repositoresCheckBox;
    private javax.swing.JCheckBox sourcesCheckBox;
    private javax.swing.JCheckBox submittersCheckBox;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the selectedEntities
     */
    public ArrayList<String> getSelectedEntities() {
        return selectedEntities;
    }
}
