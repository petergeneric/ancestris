package ancestris.modules.editors.genealogyeditor.panels;

import ancestris.modules.editors.genealogyeditor.models.MultiMediaObjectCitationsTableModel;
import ancestris.util.swing.DialogManager;
import genj.gedcom.*;
import java.io.File;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;

/**
 *
 * @author dominique
 */
public class MultimediaObjectCitationsListPanel extends javax.swing.JPanel {

    private Property mRoot;
    private String mGedcomVersion = "";
    private MultiMediaObjectCitationsTableModel multiMediaObjectCitationsTableModel = new MultiMediaObjectCitationsTableModel();

    /**
     * Creates new form MultimediaObjectsListPanel
     */
    public MultimediaObjectCitationsListPanel() {
        initComponents();
        multiMediaObjectCitationsTable.setID(MultimediaObjectCitationsListPanel.class.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        galleryToolBar = new javax.swing.JToolBar();
        addMMObjectButton = new javax.swing.JButton();
        deleteMMObjectButton2 = new javax.swing.JButton();
        multiMediaObjectCitationsScrollPane = new javax.swing.JScrollPane();
        multiMediaObjectCitationsTable = new ancestris.modules.editors.genealogyeditor.table.EditorTable();

        galleryToolBar.setFloatable(false);
        galleryToolBar.setRollover(true);

        addMMObjectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit_add.png"))); // NOI18N
        addMMObjectButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("MultimediaObjectCitationsListPanel.addMMObjectButton.toolTipText"), new Object[] {})); // NOI18N
        addMMObjectButton.setFocusable(false);
        addMMObjectButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addMMObjectButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addMMObjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMMObjectButtonActionPerformed(evt);
            }
        });
        galleryToolBar.add(addMMObjectButton);

        deleteMMObjectButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit_delete.png"))); // NOI18N
        deleteMMObjectButton2.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("MultimediaObjectCitationsListPanel.deleteMMObjectButton2.toolTipText"), new Object[] {})); // NOI18N
        deleteMMObjectButton2.setFocusable(false);
        deleteMMObjectButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteMMObjectButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteMMObjectButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMMObjectButton2ActionPerformed(evt);
            }
        });
        galleryToolBar.add(deleteMMObjectButton2);

        multiMediaObjectCitationsTable.setModel(multiMediaObjectCitationsTableModel);
        multiMediaObjectCitationsScrollPane.setViewportView(multiMediaObjectCitationsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(galleryToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
            .addComponent(multiMediaObjectCitationsScrollPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(galleryToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(multiMediaObjectCitationsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addMMObjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMMObjectButtonActionPerformed
        FileNameExtensionFilter imageFileFilter = new FileNameExtensionFilter(NbBundle.getMessage(MultimediaObjectCitationsListPanel.class, "MultimediaObjectCitationsListPanel.fileType"), "jpeg");
        JFileChooser imageFileChooser = new JFileChooser();

        imageFileChooser.setFileFilter(imageFileFilter);
        imageFileChooser.setAcceptAllFileFilterUsed(true);

        if (imageFileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            final File imageFile = imageFileChooser.getSelectedFile();
            try {
                mRoot.getGedcom().doUnitOfWork(new UnitOfWork() {

                    @Override
                    public void perform(Gedcom gedcom) throws GedcomException {
                        if (mGedcomVersion.equals("5.5.1")) {
                            Media media = (Media) mRoot.getGedcom().createEntity("OBJE");
                            media.addFile(imageFile, imageFile.getName());
                            mRoot.addMedia(media);
                            multiMediaObjectCitationsTableModel.add(media);
                        } else {
                            Property propertyMedia = mRoot.addProperty("OBJE", "");
                            propertyMedia.addFile(imageFile, imageFile.getName());
                        }
                    }
                }); // end of doUnitOfWork
            } catch (GedcomException ex) {
            }
        }
    }//GEN-LAST:event_addMMObjectButtonActionPerformed

    private void deleteMMObjectButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMMObjectButton2ActionPerformed
        final int rowIndex = multiMediaObjectCitationsTable.convertRowIndexToModel(multiMediaObjectCitationsTable.getSelectedRow());
        Gedcom gedcom = mRoot.getGedcom();

        if (rowIndex != -1) {
            final Property multiMediaObjectRef = multiMediaObjectCitationsTableModel.getValueAt(rowIndex);
            Property file = multiMediaObjectRef.getProperty("FILE", true);
            String objectName;
            if (file != null && file instanceof PropertyFile) {
                objectName = ((PropertyFile) file).getFile().getAbsolutePath();
            } else {
                objectName =  "";
            }
            DialogManager createYesNo = DialogManager.createYesNo(
                    NbBundle.getMessage(
                    EventEditorPanel.class, "MultimediaObjectCitationsListPanel.deleteObjectConfirmation.title",
                    objectName),
                    NbBundle.getMessage(
                    EventEditorPanel.class, "MultimediaObjectCitationsListPanel.deleteObjectConfirmation.text",
                    objectName,
                    mRoot));
            if (createYesNo.show() == DialogManager.YES_OPTION) {
                try {
                    gedcom.doUnitOfWork(new UnitOfWork() {

                        @Override
                        public void perform(Gedcom gedcom) throws GedcomException {
                            mRoot.delProperty(multiMediaObjectRef);
                        }
                    }); // end of doUnitOfWork

                    multiMediaObjectCitationsTableModel.remove(rowIndex);
                } catch (GedcomException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
    }//GEN-LAST:event_deleteMMObjectButton2ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMMObjectButton;
    private javax.swing.JButton deleteMMObjectButton2;
    private javax.swing.JToolBar galleryToolBar;
    private javax.swing.JScrollPane multiMediaObjectCitationsScrollPane;
    private ancestris.modules.editors.genealogyeditor.table.EditorTable multiMediaObjectCitationsTable;
    // End of variables declaration//GEN-END:variables

    public void set(Property root, List<Property> multiMediasList) {
        mGedcomVersion = root.getGedcom().getGrammar().getVersion();
        this.mRoot = root;
        multiMediaObjectCitationsTableModel.addAll(multiMediasList);
    }
}
