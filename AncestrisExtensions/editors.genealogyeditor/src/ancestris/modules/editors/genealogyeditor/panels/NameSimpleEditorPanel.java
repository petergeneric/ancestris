package ancestris.modules.editors.genealogyeditor.panels;

import ancestris.modules.editors.genealogyeditor.models.NameTypeComboBoxModel;
import genj.gedcom.*;
import java.util.ArrayList;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import org.openide.util.Exceptions;

/**
 *
 * @author dominique
 */
public class NameSimpleEditorPanel extends javax.swing.JPanel {

    private NameTypeComboBoxModel nameTypeComboBoxModelModel = new NameTypeComboBoxModel();
    private Indi root;
    private PropertyName name;
    private boolean modified;

    /**
     * Creates new form NameSimpleEditorPanel
     */
    public NameSimpleEditorPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameTypeLabel = new javax.swing.JLabel();
        nameTypeComboBox = new javax.swing.JComboBox<String>();
        FirstNameLabel = new javax.swing.JLabel();
        firstNamePrefixTextField = new javax.swing.JTextField();
        firstNameTextField = new javax.swing.JTextField();
        familyNameLabel = new javax.swing.JLabel();
        familyNamePrefixTextField = new javax.swing.JTextField();
        familyNameTextField = new javax.swing.JTextField();
        firstNameSuffixTextField = new javax.swing.JTextField();

        nameTypeLabel.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.nameTypeLabel.text"), new Object[] {})); // NOI18N

        nameTypeComboBox.setEditable(true);
        nameTypeComboBox.setModel(nameTypeComboBoxModelModel);

        FirstNameLabel.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.FirstNameLabel.text"), new Object[] {})); // NOI18N

        firstNamePrefixTextField.setColumns(8);
        firstNamePrefixTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        firstNamePrefixTextField.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.firstNamePrefixTextField.text"), new Object[] {})); // NOI18N
        firstNamePrefixTextField.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.firstNamePrefixTextField.toolTipText"), new Object[] {})); // NOI18N

        firstNameTextField.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.firstNameTextField.text"), new Object[] {})); // NOI18N
        firstNameTextField.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.firstNameTextField.toolTipText"), new Object[] {})); // NOI18N

        familyNameLabel.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.familyNameLabel.text"), new Object[] {})); // NOI18N

        familyNamePrefixTextField.setColumns(8);
        familyNamePrefixTextField.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.familyNamePrefixTextField.text"), new Object[] {})); // NOI18N
        familyNamePrefixTextField.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.familyNamePrefixTextField.toolTipText"), new Object[] {})); // NOI18N

        familyNameTextField.setColumns(16);
        familyNameTextField.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.familyNameTextField.text"), new Object[] {})); // NOI18N

        firstNameSuffixTextField.setColumns(8);
        firstNameSuffixTextField.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.firstNameSuffixTextField.text"), new Object[] {})); // NOI18N
        firstNameSuffixTextField.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("NameSimpleEditorPanel.firstNameSuffixTextField.toolTipText"), new Object[] {})); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(FirstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(familyNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNamePrefixTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(familyNamePrefixTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(familyNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstNameSuffixTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(firstNameTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(nameTypeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameTypeComboBox, 0, 1, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTypeLabel))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNamePrefixTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FirstNameLabel))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(firstNameSuffixTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(familyNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(familyNamePrefixTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(familyNameLabel))))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JLabel familyNameLabel;
    private javax.swing.JTextField familyNamePrefixTextField;
    private javax.swing.JTextField familyNameTextField;
    private javax.swing.JTextField firstNamePrefixTextField;
    private javax.swing.JTextField firstNameSuffixTextField;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JComboBox<String> nameTypeComboBox;
    private javax.swing.JLabel nameTypeLabel;
    // End of variables declaration//GEN-END:variables

    public void set(Indi root, PropertyName name) {
        this.root = root;
        this.name = name;

        ArrayList<String> firstNames = new ArrayList<String>();
        ArrayList<String> lastNames = new ArrayList<String>();

        for (Indi indi : root.getGedcom().getIndis()) {
            firstNames.add(indi.getFirstName());
            lastNames.add(indi.getLastName());
        }

        AutoCompleteDecorator.decorate(firstNameTextField, firstNames, false);
        AutoCompleteDecorator.decorate(familyNameTextField, lastNames, false);

        Property nameType = name.getProperty("TYPE");
        if (nameType != null) {
            nameTypeComboBox.setSelectedItem(nameType.getValue());
        } else {
            nameTypeComboBox.setSelectedIndex(1);
        }

        Property namePrefix = name.getProperty("NPFX");
        firstNamePrefixTextField.setText(namePrefix != null ? namePrefix.getValue() : "");

        Property givenName = name.getProperty("GIVN");
        if (givenName != null) {
            firstNameTextField.setText(givenName.getValue());
        } else {
            firstNameTextField.setText(name.getFirstName());
        }

        Property firstNameSuffix = name.getProperty("NSFX");
        firstNameSuffixTextField.setText(firstNameSuffix != null ? firstNameSuffix.getValue() : "");

        Property familyNamePrefix = name.getProperty("SPFX");
        familyNamePrefixTextField.setText(familyNamePrefix != null ? familyNamePrefix.getValue() : "");

        Property familyName = name.getProperty("SURN");
        if (familyName != null) {
            familyNameTextField.setText(familyName.getValue());
        } else {
            familyNameTextField.setText(name.getLastName());
        }
    }

    public void commit() {
        try {
            root.getGedcom().doUnitOfWork(new UnitOfWork() {

                @Override
                public void perform(Gedcom gedcom) throws GedcomException {
                    if (name == null) {
                        name = (PropertyName) root.addProperty("NAME", "");
                    }
                    name.setName(
                            firstNamePrefixTextField.getText().trim(),
                            firstNameTextField.getText().trim(),
                            firstNameSuffixTextField.getText().trim(),
                            familyNameTextField.getText().trim(),
                            familyNamePrefixTextField.getText().trim(),
                            false);
                }
            }); // end of doUnitOfWork
        } catch (GedcomException ex) {
            Exceptions.printStackTrace(ex);
        }
    }
}
