package ancestris.modules.editors.genealogyeditor.panels;

import ancestris.modules.editors.genealogyeditor.models.EventsTypeComboBoxModelModel;
import ancestris.modules.editors.genealogyeditor.models.MultiMediaObjectsTableModel;
import ancestris.modules.editors.genealogyeditor.models.NotesTableModel;
import ancestris.modules.editors.genealogyeditor.models.SourcesTableModel;
import ancestris.modules.gedcom.utilities.PropertyTag2Name;
import ancestris.util.swing.DialogManager;
import genj.gedcom.*;
import genj.util.swing.DateWidget;
import java.util.ArrayList;
import java.util.List;
import org.openide.DialogDescriptor;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;

/**
 *
 * @author dominique
 */
public class EventEditorPanel extends javax.swing.JPanel {

    private PropertyEvent event;
    private SourcesTableModel sourcesTableModel = new SourcesTableModel();
    private NotesTableModel notesTableModel = new NotesTableModel();
    private EventsTypeComboBoxModelModel eventsTypeComboBoxModelModel = new EventsTypeComboBoxModelModel();
    private MultiMediaObjectsTableModel multiMediaObjectsTableModel = new MultiMediaObjectsTableModel();

    /**
     * Creates new form EventEditorPanel
     */
    public EventEditorPanel() {
        initComponents();
        eventIdLabel.setVisible(false);
        eventIDTextField.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        eventTypeLabel = new javax.swing.JLabel();
        eventTypeComboBox = new javax.swing.JComboBox<String>();
        dateLabel = new javax.swing.JLabel();
        eventIdLabel = new javax.swing.JLabel();
        eventIDTextField = new javax.swing.JTextField();
        eventDescriptionLabel = new javax.swing.JLabel();
        eventPlaceLabel = new javax.swing.JLabel();
        eventPlaceTextField = new javax.swing.JTextField();
        addPlaceButton = new javax.swing.JButton();
        editPlaceButton = new javax.swing.JButton();
        removePlaceButton = new javax.swing.JButton();
        dateWidgetPanel = new DateWidget();
        jScrollPane2 = new javax.swing.JScrollPane();
        eventDescriptionTextArea = new javax.swing.JTextArea();
        eventInformationTabbedPane = new javax.swing.JTabbedPane();
        sourcesPanel = new javax.swing.JPanel();
        notesToolBar = new javax.swing.JToolBar();
        addSourceButton = new javax.swing.JButton();
        editSourceButton = new javax.swing.JButton();
        removeSourceButton = new javax.swing.JButton();
        sourcesScrollPane = new javax.swing.JScrollPane();
        sourcesTable = new javax.swing.JTable();
        notesPanel = new javax.swing.JPanel();
        notesToolBar1 = new javax.swing.JToolBar();
        addNoteButton = new javax.swing.JButton();
        editNoteButton = new javax.swing.JButton();
        removeNoteButton = new javax.swing.JButton();
        notesScrollPane = new javax.swing.JScrollPane();
        notesTable = new javax.swing.JTable();
        galleryPanel = new javax.swing.JPanel();
        GalleryToolBar = new javax.swing.JToolBar();
        addMMObjectButton = new javax.swing.JButton();
        editMMObjectButton2 = new javax.swing.JButton();
        removeMMObjectButton2 = new javax.swing.JButton();
        GalleryScrollPane = new javax.swing.JScrollPane();
        MMObjectsTable = new javax.swing.JTable();

        eventTypeLabel.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.eventTypeLabel.text"), new Object[] {})); // NOI18N

        eventTypeComboBox.setModel(eventsTypeComboBoxModelModel);
        eventTypeComboBox.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.eventTypeComboBox.toolTipText"), new Object[] {})); // NOI18N

        dateLabel.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.dateLabel.text"), new Object[] {})); // NOI18N

        eventIdLabel.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.eventIdLabel.text"), new Object[] {})); // NOI18N

        eventIDTextField.setColumns(8);
        eventIDTextField.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.eventIDTextField.text"), new Object[] {})); // NOI18N
        eventIDTextField.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.eventIDTextField.toolTipText"), new Object[] {})); // NOI18N

        eventDescriptionLabel.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.eventDescriptionLabel.text"), new Object[] {})); // NOI18N

        eventPlaceLabel.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.eventPlaceLabel.text"), new Object[] {})); // NOI18N

        eventPlaceTextField.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.eventPlaceTextField.text"), new Object[] {})); // NOI18N
        eventPlaceTextField.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.eventPlaceTextField.toolTipText"), new Object[] {})); // NOI18N

        addPlaceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit_add.png"))); // NOI18N
        addPlaceButton.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.addPlaceButton.text"), new Object[] {})); // NOI18N
        addPlaceButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.addPlaceButton.toolTipText"), new Object[] {})); // NOI18N
        addPlaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlaceButtonActionPerformed(evt);
            }
        });

        editPlaceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit.png"))); // NOI18N
        editPlaceButton.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.editPlaceButton.text"), new Object[] {})); // NOI18N
        editPlaceButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.editPlaceButton.toolTipText"), new Object[] {})); // NOI18N
        editPlaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPlaceButtonActionPerformed(evt);
            }
        });

        removePlaceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit_delete.png"))); // NOI18N
        removePlaceButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.removePlaceButton.toolTipText"), new Object[] {})); // NOI18N
        removePlaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePlaceButtonActionPerformed(evt);
            }
        });

        dateWidgetPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        dateWidgetPanel.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.dateWidgetPanel.toolTipText"), new Object[] {})); // NOI18N
        dateWidgetPanel.setOpaque(false);
        dateWidgetPanel.setLayout(new javax.swing.BoxLayout(dateWidgetPanel, javax.swing.BoxLayout.LINE_AXIS));

        eventDescriptionTextArea.setColumns(20);
        eventDescriptionTextArea.setRows(5);
        eventDescriptionTextArea.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.eventDescriptionTextArea.toolTipText"), new Object[] {})); // NOI18N
        eventDescriptionTextArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(eventDescriptionTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eventTypeLabel)
                            .addComponent(eventIdLabel)
                            .addComponent(eventPlaceLabel))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(eventDescriptionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eventIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventPlaceTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPlaceButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editPlaceButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removePlaceButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(eventTypeComboBox, 0, 1, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateWidgetPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eventIdLabel)
                            .addComponent(eventIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eventTypeLabel)
                            .addComponent(eventTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateLabel)))
                    .addComponent(dateWidgetPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventDescriptionLabel)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPlaceButton)
                    .addComponent(editPlaceButton)
                    .addComponent(removePlaceButton)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(eventPlaceLabel)
                        .addComponent(eventPlaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        notesToolBar.setFloatable(false);
        notesToolBar.setRollover(true);

        addSourceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit_add.png"))); // NOI18N
        addSourceButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.addSourceButton.toolTipText"), new Object[] {})); // NOI18N
        addSourceButton.setFocusable(false);
        addSourceButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addSourceButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        notesToolBar.add(addSourceButton);

        editSourceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit.png"))); // NOI18N
        editSourceButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.editSourceButton.toolTipText"), new Object[] {})); // NOI18N
        editSourceButton.setFocusable(false);
        editSourceButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editSourceButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        notesToolBar.add(editSourceButton);

        removeSourceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit_delete.png"))); // NOI18N
        removeSourceButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.removeSourceButton.toolTipText"), new Object[] {})); // NOI18N
        removeSourceButton.setFocusable(false);
        removeSourceButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeSourceButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        notesToolBar.add(removeSourceButton);

        sourcesTable.setModel(sourcesTableModel);
        sourcesScrollPane.setViewportView(sourcesTable);

        javax.swing.GroupLayout sourcesPanelLayout = new javax.swing.GroupLayout(sourcesPanel);
        sourcesPanel.setLayout(sourcesPanelLayout);
        sourcesPanelLayout.setHorizontalGroup(
            sourcesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(notesToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sourcesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE)
        );
        sourcesPanelLayout.setVerticalGroup(
            sourcesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sourcesPanelLayout.createSequentialGroup()
                .addComponent(notesToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sourcesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
        );

        eventInformationTabbedPane.addTab(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.sourcesPanel.TabConstraints.tabTitle"), new Object[] {}), new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/Source.png")), sourcesPanel); // NOI18N

        notesToolBar1.setFloatable(false);
        notesToolBar1.setRollover(true);

        addNoteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit_add.png"))); // NOI18N
        addNoteButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.addNoteButton.toolTipText"), new Object[] {})); // NOI18N
        addNoteButton.setFocusable(false);
        addNoteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addNoteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        notesToolBar1.add(addNoteButton);

        editNoteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit.png"))); // NOI18N
        editNoteButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.editNoteButton.toolTipText"), new Object[] {})); // NOI18N
        editNoteButton.setFocusable(false);
        editNoteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editNoteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        notesToolBar1.add(editNoteButton);

        removeNoteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit_delete.png"))); // NOI18N
        removeNoteButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.removeNoteButton.toolTipText"), new Object[] {})); // NOI18N
        removeNoteButton.setFocusable(false);
        removeNoteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeNoteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        notesToolBar1.add(removeNoteButton);

        notesTable.setModel(notesTableModel);
        notesScrollPane.setViewportView(notesTable);

        javax.swing.GroupLayout notesPanelLayout = new javax.swing.GroupLayout(notesPanel);
        notesPanel.setLayout(notesPanelLayout);
        notesPanelLayout.setHorizontalGroup(
            notesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(notesToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(notesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE)
        );
        notesPanelLayout.setVerticalGroup(
            notesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notesPanelLayout.createSequentialGroup()
                .addComponent(notesToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
        );

        eventInformationTabbedPane.addTab(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.notesPanel.TabConstraints.tabTitle"), new Object[] {}), new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/Note.png")), notesPanel); // NOI18N

        GalleryToolBar.setFloatable(false);
        GalleryToolBar.setRollover(true);

        addMMObjectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit_add.png"))); // NOI18N
        addMMObjectButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.addMMObjectButton.toolTipText"), new Object[] {})); // NOI18N
        addMMObjectButton.setFocusable(false);
        addMMObjectButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addMMObjectButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GalleryToolBar.add(addMMObjectButton);

        editMMObjectButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit.png"))); // NOI18N
        editMMObjectButton2.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.editMMObjectButton2.toolTipText"), new Object[] {})); // NOI18N
        editMMObjectButton2.setFocusable(false);
        editMMObjectButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editMMObjectButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GalleryToolBar.add(editMMObjectButton2);

        removeMMObjectButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/edit_delete.png"))); // NOI18N
        removeMMObjectButton2.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.removeMMObjectButton2.toolTipText"), new Object[] {})); // NOI18N
        removeMMObjectButton2.setFocusable(false);
        removeMMObjectButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeMMObjectButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GalleryToolBar.add(removeMMObjectButton2);

        MMObjectsTable.setModel(multiMediaObjectsTableModel);
        GalleryScrollPane.setViewportView(MMObjectsTable);

        javax.swing.GroupLayout galleryPanelLayout = new javax.swing.GroupLayout(galleryPanel);
        galleryPanel.setLayout(galleryPanelLayout);
        galleryPanelLayout.setHorizontalGroup(
            galleryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(GalleryToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(GalleryScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE)
        );
        galleryPanelLayout.setVerticalGroup(
            galleryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(galleryPanelLayout.createSequentialGroup()
                .addComponent(GalleryToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GalleryScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
        );

        eventInformationTabbedPane.addTab(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("EventEditorPanel.galleryPanel.TabConstraints.tabTitle"), new Object[] {}), new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/Media.png")), galleryPanel); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(eventInformationTabbedPane)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventInformationTabbedPane)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void editPlaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPlaceButtonActionPerformed
        PlaceEditorPanel placeEditorPanel = new PlaceEditorPanel();
        PropertyPlace place = (PropertyPlace) event.getProperty(PropertyPlace.TAG);
        placeEditorPanel.setPlace(place);
        DialogManager.ADialog placeEditorDialog = new DialogManager.ADialog(
                NbBundle.getMessage(PlaceEditorPanel.class, "PlaceEditorPanel.title"),
                placeEditorPanel);
        placeEditorDialog.setDialogId(PlaceEditorPanel.class.getName());
        if (placeEditorDialog.show() == DialogDescriptor.OK_OPTION) {
            place.setValue(placeEditorPanel.getPlace().getValue());
        }
    }//GEN-LAST:event_editPlaceButtonActionPerformed

    private void addPlaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlaceButtonActionPerformed
        final PlaceEditorPanel placeEditorPanel = new PlaceEditorPanel();
        placeEditorPanel.setPlace(new PropertyPlace("PLAC"));

        DialogManager.ADialog placeEditorDialog = new DialogManager.ADialog(
                NbBundle.getMessage(PlaceEditorPanel.class, "PlaceEditorPanel.title"),
                placeEditorPanel);
        placeEditorDialog.setDialogId(EventEditorPanel.class.getName());

        if (placeEditorDialog.show() == DialogDescriptor.OK_OPTION) {
            try {
                event.getGedcom().doUnitOfWork(new UnitOfWork() {

                    @Override
                    public void perform(Gedcom gedcom) throws GedcomException {
                        event.copyProperties(placeEditorPanel.getPlace(), true);
                    }
                }); // end of doUnitOfWork
                update();
            } catch (GedcomException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }//GEN-LAST:event_addPlaceButtonActionPerformed

    private void removePlaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePlaceButtonActionPerformed
        try {
            event.getGedcom().doUnitOfWork(new UnitOfWork() {

                @Override
                public void perform(Gedcom gedcom) throws GedcomException {
                    event.delProperties(PropertyPlace.TAG);
                }
            }); // end of doUnitOfWork
            update();
        } catch (GedcomException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_removePlaceButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane GalleryScrollPane;
    private javax.swing.JToolBar GalleryToolBar;
    private javax.swing.JTable MMObjectsTable;
    private javax.swing.JButton addMMObjectButton;
    private javax.swing.JButton addNoteButton;
    private javax.swing.JButton addPlaceButton;
    private javax.swing.JButton addSourceButton;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JPanel dateWidgetPanel;
    private javax.swing.JButton editMMObjectButton2;
    private javax.swing.JButton editNoteButton;
    private javax.swing.JButton editPlaceButton;
    private javax.swing.JButton editSourceButton;
    private javax.swing.JLabel eventDescriptionLabel;
    private javax.swing.JTextArea eventDescriptionTextArea;
    private javax.swing.JTextField eventIDTextField;
    private javax.swing.JLabel eventIdLabel;
    private javax.swing.JTabbedPane eventInformationTabbedPane;
    private javax.swing.JLabel eventPlaceLabel;
    private javax.swing.JTextField eventPlaceTextField;
    private javax.swing.JComboBox<String> eventTypeComboBox;
    private javax.swing.JLabel eventTypeLabel;
    private javax.swing.JPanel galleryPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel notesPanel;
    private javax.swing.JScrollPane notesScrollPane;
    private javax.swing.JTable notesTable;
    private javax.swing.JToolBar notesToolBar;
    private javax.swing.JToolBar notesToolBar1;
    private javax.swing.JButton removeMMObjectButton2;
    private javax.swing.JButton removeNoteButton;
    private javax.swing.JButton removePlaceButton;
    private javax.swing.JButton removeSourceButton;
    private javax.swing.JPanel sourcesPanel;
    private javax.swing.JScrollPane sourcesScrollPane;
    private javax.swing.JTable sourcesTable;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the event
     */
    public PropertyEvent getEvent() {
        return event;
    }

    /**
     * @param event the event to set
     */
    public void setEvent(PropertyEvent event) {
        this.event = event;
        update();
    }

    private void update() {
        eventTypeComboBox.setSelectedItem(PropertyTag2Name.getTagName(event.getTag()));
        eventDescriptionTextArea.setText(event.getDisplayValue());

        PropertyPlace place = (PropertyPlace) event.getProperty(PropertyPlace.TAG);
        if (place != null) {
            addPlaceButton.setVisible(false);
            editPlaceButton.setVisible(true);
            removePlaceButton.setVisible(true);
            eventPlaceTextField.setText(place.format("all"));
        } else {
            addPlaceButton.setVisible(true);
            editPlaceButton.setVisible(false);
            removePlaceButton.setVisible(false);
            eventPlaceTextField.setText("");
        }

        PropertyDate date = (PropertyDate) event.getProperty("DATE");
        if (date != null) {
            ((DateWidget) dateWidgetPanel).setValue(date.getStart());
        }

        List<Source> sourcesList = new ArrayList<Source>();
        for (PropertySource sourceRef : event.getProperties(PropertySource.class)) {
            sourcesList.add((Source) sourceRef.getTargetEntity());
        }
        sourcesTableModel.update(sourcesList);

        List<Note> notesList = new ArrayList<Note>();
        for (PropertyNote noteRef : event.getProperties(PropertyNote.class)) {
            notesList.add((Note) noteRef.getTargetEntity());
        }
        notesTableModel.update(notesList);

        List<Media> mediasList = new ArrayList<Media>();
        for (PropertyMedia mediaRef : event.getProperties(PropertyMedia.class)) {
            mediasList.add((Media) mediaRef.getTargetEntity());
        }
        multiMediaObjectsTableModel.update(mediasList);
    }
}
