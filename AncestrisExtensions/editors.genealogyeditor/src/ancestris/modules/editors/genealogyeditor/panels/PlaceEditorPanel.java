package ancestris.modules.editors.genealogyeditor.panels;

import ancestris.api.place.Place;
import ancestris.modules.editors.genealogyeditor.models.EventsTableModel;
import ancestris.modules.editors.genealogyeditor.models.GeonamePlacesListModel;
import ancestris.modules.place.geonames.GeonamesPlacesList;
import ancestris.util.swing.DialogManager;
import genj.gedcom.*;
import javax.swing.JComponent;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jdesktop.swingx.JXMapKit;
import org.jdesktop.swingx.mapviewer.GeoPosition;
import org.openide.DialogDescriptor;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;

/**
 *
 * @author dominique
 */
public class PlaceEditorPanel extends javax.swing.JPanel {

    private PropertyPlace mPlace;
    String[] mPlaceFormat;
    private EventsTableModel eventsTableModel = new EventsTableModel();
    private GeonamePlacesListModel geonamePlacesListModel = new GeonamePlacesListModel();

    /**
     * Creates new form GedcomPlacesEditorPanel
     */
    public PlaceEditorPanel() {
        initComponents();
        geonamesPlacePanel.setVisible(false);
        geonamesPlacesList.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent arg0) {
                if (!arg0.getValueIsAdjusting()) {
                    Place place = geonamePlacesListModel.getPlaceAt(geonamesPlacesList.getSelectedIndex());
                    updateMap(place);
                    updatePlace(place);
                }
            }
        });
        jXMapKit1.setDataProviderCreditShown(true);
        jXMapKit1.getMainMap().setRecenterOnClickEnabled(true);
        jXMapKit1.setDefaultProvider(JXMapKit.DefaultProviders.OpenStreetMaps);
        jXMapKit1.setMiniMapVisible(false);
        jXMapKit1.getZoomSlider().setValue(5);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        placeEditorToolBar = new javax.swing.JToolBar();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        parametersButton = new javax.swing.JButton();
        gedcomPlacePanel = new javax.swing.JPanel();
        gedcomField6TextField = new javax.swing.JTextField();
        gedcomField7Label = new javax.swing.JLabel();
        gedcomField1TextField = new javax.swing.JTextField();
        gedcomField7TextField = new javax.swing.JTextField();
        gedcomField3Label = new javax.swing.JLabel();
        gedcomField5Label = new javax.swing.JLabel();
        gedcomField3TextField = new javax.swing.JTextField();
        gedcomField5TextField = new javax.swing.JTextField();
        gedcomField4Label = new javax.swing.JLabel();
        gedcomLongitudeLabel = new javax.swing.JLabel();
        gedcomField0TextField = new javax.swing.JTextField();
        gedcomLongitudeTextField = new javax.swing.JTextField();
        gedcomField2Label = new javax.swing.JLabel();
        gedcomLatitudeLabel = new javax.swing.JLabel();
        gedcomField2TextField = new javax.swing.JTextField();
        gedcomLatitudeTextField = new javax.swing.JTextField();
        gedcomField1Label = new javax.swing.JLabel();
        gedcomField4TextField = new javax.swing.JTextField();
        gedcomField0Label = new javax.swing.JLabel();
        gedcomField6Label = new javax.swing.JLabel();
        geonamesPlacePanel = new javax.swing.JPanel();
        longitudeTextField = new javax.swing.JTextField();
        field4TextField = new javax.swing.JTextField();
        field4Label = new javax.swing.JLabel();
        latitudeLabel = new javax.swing.JLabel();
        field3TextField = new javax.swing.JTextField();
        field7TextField = new javax.swing.JTextField();
        field3Label = new javax.swing.JLabel();
        longitudeLabel = new javax.swing.JLabel();
        field2TextField = new javax.swing.JTextField();
        latitudeTextField = new javax.swing.JTextField();
        field2Label = new javax.swing.JLabel();
        field5TextField = new javax.swing.JTextField();
        field1Label = new javax.swing.JLabel();
        field6Label = new javax.swing.JLabel();
        field1TextField = new javax.swing.JTextField();
        field6TextField = new javax.swing.JTextField();
        field0Label = new javax.swing.JLabel();
        field7Label = new javax.swing.JLabel();
        field0TextField = new javax.swing.JTextField();
        copyButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        field5Label = new javax.swing.JLabel();
        placeEditorTabbedPane = new javax.swing.JTabbedPane();
        mapPanel = new javax.swing.JPanel();
        MapScrollPane = new javax.swing.JScrollPane();
        jXMapKit1 = new org.jdesktop.swingx.JXMapKit();
        searchPlacePanel = new javax.swing.JPanel();
        geonamesScrollPane = new javax.swing.JScrollPane();
        geonamesPlacesList = new javax.swing.JList<String>();
        searchPlaceTextField = new javax.swing.JTextField();
        searchPlaceButton = new javax.swing.JButton();
        placeReferencesPanel = new javax.swing.JPanel();
        placeReferenceScrollPane = new javax.swing.JScrollPane();
        placeReferencesTable = new javax.swing.JTable();

        setMinimumSize(new java.awt.Dimension(537, 414));

        placeEditorToolBar.setFloatable(false);
        placeEditorToolBar.setRollover(true);
        placeEditorToolBar.add(filler1);

        parametersButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/parameters.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(parametersButton, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.parametersButton.text"), new Object[] {})); // NOI18N
        parametersButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.parametersButton.toolTipText"), new Object[] {})); // NOI18N
        parametersButton.setFocusable(false);
        parametersButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        parametersButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        parametersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parametersButtonActionPerformed(evt);
            }
        });
        placeEditorToolBar.add(parametersButton);

        gedcomPlacePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Gedcom place"));
        gedcomPlacePanel.setPreferredSize(new java.awt.Dimension(513, 121));

        gedcomField6TextField.setColumns(16);

        gedcomField7Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField7Label, "Pays"); // NOI18N

        gedcomField1TextField.setColumns(16);

        gedcomField7TextField.setColumns(16);

        gedcomField3Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField3Label, "Code INSEE"); // NOI18N

        gedcomField5Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField5Label, "Code Postal"); // NOI18N

        gedcomField3TextField.setColumns(16);

        gedcomField5TextField.setColumns(16);

        gedcomField4Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField4Label, "Département"); // NOI18N

        gedcomLongitudeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomLongitudeLabel, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.gedcomLongitudeLabel.text"), new Object[] {})); // NOI18N

        gedcomField0TextField.setColumns(16);

        gedcomLongitudeTextField.setColumns(16);

        gedcomField2Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField2Label, "Commune"); // NOI18N

        gedcomLatitudeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomLatitudeLabel, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.gedcomLatitudeLabel.text"), new Object[] {})); // NOI18N

        gedcomField2TextField.setColumns(16);

        gedcomLatitudeTextField.setColumns(16);

        gedcomField1Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField1Label, "Paroisse"); // NOI18N

        gedcomField4TextField.setColumns(16);

        gedcomField0Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField0Label, "Lieu dit"); // NOI18N

        gedcomField6Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField6Label, "Région"); // NOI18N

        javax.swing.GroupLayout gedcomPlacePanelLayout = new javax.swing.GroupLayout(gedcomPlacePanel);
        gedcomPlacePanel.setLayout(gedcomPlacePanelLayout);
        gedcomPlacePanelLayout.setHorizontalGroup(
            gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gedcomPlacePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(gedcomField0Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gedcomField2Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gedcomLatitudeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gedcomField6Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gedcomField4Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(gedcomField6TextField)
                    .addComponent(gedcomField4TextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gedcomField2TextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gedcomField0TextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gedcomLatitudeTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(gedcomField1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gedcomField3Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gedcomField5Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gedcomField7Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gedcomLongitudeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gedcomField3TextField)
                    .addComponent(gedcomField5TextField)
                    .addComponent(gedcomField7TextField)
                    .addComponent(gedcomLongitudeTextField)
                    .addGroup(gedcomPlacePanelLayout.createSequentialGroup()
                        .addComponent(gedcomField1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        gedcomPlacePanelLayout.setVerticalGroup(
            gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gedcomPlacePanelLayout.createSequentialGroup()
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gedcomField0TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gedcomField0Label))
                    .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gedcomField1Label)
                        .addComponent(gedcomField1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gedcomPlacePanelLayout.createSequentialGroup()
                        .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gedcomField2Label)
                            .addComponent(gedcomField2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gedcomField4Label)
                            .addComponent(gedcomField4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gedcomField6Label)
                            .addComponent(gedcomField6TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gedcomLatitudeLabel)
                            .addComponent(gedcomLatitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(gedcomPlacePanelLayout.createSequentialGroup()
                        .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gedcomField3Label)
                            .addComponent(gedcomField3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gedcomField5Label)
                            .addComponent(gedcomField5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gedcomField7TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gedcomField7Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gedcomLongitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gedcomLongitudeLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        geonamesPlacePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.geonamesPlacePanel.border.title"), new Object[] {}))); // NOI18N
        geonamesPlacePanel.setPreferredSize(new java.awt.Dimension(0, 0));

        longitudeTextField.setColumns(16);

        field4TextField.setColumns(16);

        field4Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field4Label, "Admin code 2"); // NOI18N

        latitudeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(latitudeLabel, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.latitudeLabel.text"), new Object[] {})); // NOI18N

        field3TextField.setColumns(16);

        field7TextField.setColumns(16);

        field3Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field3Label, "Admin name 2"); // NOI18N

        longitudeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(longitudeLabel, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.longitudeLabel.text"), new Object[] {})); // NOI18N

        field2TextField.setColumns(16);

        latitudeTextField.setColumns(16);

        field2Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field2Label, "Admin Code 1"); // NOI18N

        field5TextField.setColumns(16);

        field1Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field1Label, "Admin name 1"); // NOI18N

        field6Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field6Label, "Admin name 3"); // NOI18N

        field1TextField.setColumns(16);

        field6TextField.setColumns(16);

        field0Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field0Label, "Commune"); // NOI18N

        field7Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field7Label, "Admin Name 4"); // NOI18N

        field0TextField.setColumns(16);

        org.openide.awt.Mnemonics.setLocalizedText(copyButton, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.copyButton.text"), new Object[] {})); // NOI18N
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.jLabel1.text"), new Object[] {})); // NOI18N

        field5Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field5Label, "Admincode 3"); // NOI18N

        javax.swing.GroupLayout geonamesPlacePanelLayout = new javax.swing.GroupLayout(geonamesPlacePanel);
        geonamesPlacePanel.setLayout(geonamesPlacePanelLayout);
        geonamesPlacePanelLayout.setHorizontalGroup(
            geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(geonamesPlacePanelLayout.createSequentialGroup()
                .addGroup(geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(field0Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field1Label, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(field4Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field5Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(latitudeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(geonamesPlacePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(copyButton))
                    .addGroup(geonamesPlacePanelLayout.createSequentialGroup()
                        .addGroup(geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(field5TextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field4TextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field1TextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field0TextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(latitudeTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(field7Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(field6Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(field3Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(field2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(longitudeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field6TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field7TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(longitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        geonamesPlacePanelLayout.setVerticalGroup(
            geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(geonamesPlacePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(field0TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field2Label)
                    .addComponent(field2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field0Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(field1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field3Label)
                    .addComponent(field3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field1Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(field4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field6Label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field6TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field4Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(field5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field7Label, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field7TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field5Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(latitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(longitudeLabel)
                    .addComponent(longitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(latitudeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(geonamesPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copyButton)
                    .addComponent(jLabel1)))
        );

        placeEditorTabbedPane.setBorder(null);
        placeEditorTabbedPane.setMinimumSize(new java.awt.Dimension(513, 263));
        placeEditorTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                placeEditorTabbedPaneStateChanged(evt);
            }
        });

        MapScrollPane.setViewportView(jXMapKit1);

        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MapScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1035, Short.MAX_VALUE)
                .addContainerGap())
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MapScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addContainerGap())
        );

        placeEditorTabbedPane.addTab(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.mapPanel.TabConstraints.tabTitle"), new Object[] {}), new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/map.png")), mapPanel); // NOI18N

        searchPlacePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        geonamesPlacesList.setModel(geonamePlacesListModel);
        geonamesPlacesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        geonamesScrollPane.setViewportView(geonamesPlacesList);

        searchPlaceTextField.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.searchPlaceTextField.text"), new Object[] {})); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(searchPlaceButton, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.searchPlaceButton.text"), new Object[] {})); // NOI18N
        searchPlaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPlaceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPlacePanelLayout = new javax.swing.GroupLayout(searchPlacePanel);
        searchPlacePanel.setLayout(searchPlacePanelLayout);
        searchPlacePanelLayout.setHorizontalGroup(
            searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPlacePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPlacePanelLayout.createSequentialGroup()
                        .addComponent(searchPlaceTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchPlaceButton))
                    .addComponent(geonamesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1033, Short.MAX_VALUE))
                .addContainerGap())
        );
        searchPlacePanelLayout.setVerticalGroup(
            searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPlacePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchPlaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchPlaceButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(geonamesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addContainerGap())
        );

        placeEditorTabbedPane.addTab(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.searchPlacePanel.TabConstraints.tabTitle"), new Object[] {}), new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/Place.png")), searchPlacePanel); // NOI18N

        placeReferenceScrollPane.setMinimumSize(new java.awt.Dimension(503, 218));
        placeReferenceScrollPane.setPreferredSize(new java.awt.Dimension(503, 218));

        placeReferencesTable.setModel(eventsTableModel);
        placeReferenceScrollPane.setViewportView(placeReferencesTable);

        javax.swing.GroupLayout placeReferencesPanelLayout = new javax.swing.GroupLayout(placeReferencesPanel);
        placeReferencesPanel.setLayout(placeReferencesPanelLayout);
        placeReferencesPanelLayout.setHorizontalGroup(
            placeReferencesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(placeReferencesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(placeReferenceScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1035, Short.MAX_VALUE)
                .addContainerGap())
        );
        placeReferencesPanelLayout.setVerticalGroup(
            placeReferencesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(placeReferencesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(placeReferenceScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        placeEditorTabbedPane.addTab(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.placeReferencesPanel.TabConstraints.tabTitle"), new Object[] {}), new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/association.png")), placeReferencesPanel); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(placeEditorTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(placeEditorToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gedcomPlacePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(geonamesPlacePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(placeEditorToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gedcomPlacePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(geonamesPlacePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(placeEditorTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchPlaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPlaceButtonActionPerformed
        String searchedPlace = searchPlaceTextField.getText();
        if (searchedPlace.isEmpty() == false) {
            geonamePlacesListModel.clear();
            new GeonamesPlacesList().searchPlace(searchedPlace, geonamePlacesListModel);
        }
    }//GEN-LAST:event_searchPlaceButtonActionPerformed

    private void parametersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parametersButtonActionPerformed
        GedcomPlaceFormatEditorPanel gedcomPlaceFormatEditorPanel = new GedcomPlaceFormatEditorPanel();
        gedcomPlaceFormatEditorPanel.setGedcom(mPlace.getGedcom());

        DialogManager.ADialog gedcomPlaceFormatEditorDialog = new DialogManager.ADialog(
                NbBundle.getMessage(GedcomPlaceFormatEditorPanel.class, "GedcomPlaceFormatEditorPanel.title"),
                gedcomPlaceFormatEditorPanel);
        gedcomPlaceFormatEditorDialog.setDialogId(GedcomPlaceFormatEditorPanel.class.getName());

        if (gedcomPlaceFormatEditorDialog.show() == DialogDescriptor.OK_OPTION) {
        }
    }//GEN-LAST:event_parametersButtonActionPerformed

    private void placeEditorTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_placeEditorTabbedPaneStateChanged
        if (placeEditorTabbedPane.getSelectedComponent() == searchPlacePanel) {
            geonamesPlacePanel.setVisible(true);
        } else {
            geonamesPlacePanel.setVisible(false);
        }
    }//GEN-LAST:event_placeEditorTabbedPaneStateChanged

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
        latitudeTextField.setText(latitudeTextField.getText());
        longitudeTextField.setText(longitudeTextField.getText());        
    }//GEN-LAST:event_copyButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane MapScrollPane;
    private javax.swing.JButton copyButton;
    private javax.swing.JLabel field0Label;
    private javax.swing.JTextField field0TextField;
    private javax.swing.JLabel field1Label;
    private javax.swing.JTextField field1TextField;
    private javax.swing.JLabel field2Label;
    private javax.swing.JTextField field2TextField;
    private javax.swing.JLabel field3Label;
    private javax.swing.JTextField field3TextField;
    private javax.swing.JLabel field4Label;
    private javax.swing.JTextField field4TextField;
    private javax.swing.JLabel field5Label;
    private javax.swing.JTextField field5TextField;
    private javax.swing.JLabel field6Label;
    private javax.swing.JTextField field6TextField;
    private javax.swing.JLabel field7Label;
    private javax.swing.JTextField field7TextField;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel gedcomField0Label;
    private javax.swing.JTextField gedcomField0TextField;
    private javax.swing.JLabel gedcomField1Label;
    private javax.swing.JTextField gedcomField1TextField;
    private javax.swing.JLabel gedcomField2Label;
    private javax.swing.JTextField gedcomField2TextField;
    private javax.swing.JLabel gedcomField3Label;
    private javax.swing.JTextField gedcomField3TextField;
    private javax.swing.JLabel gedcomField4Label;
    private javax.swing.JTextField gedcomField4TextField;
    private javax.swing.JLabel gedcomField5Label;
    private javax.swing.JTextField gedcomField5TextField;
    private javax.swing.JLabel gedcomField6Label;
    private javax.swing.JTextField gedcomField6TextField;
    private javax.swing.JLabel gedcomField7Label;
    private javax.swing.JTextField gedcomField7TextField;
    private javax.swing.JLabel gedcomLatitudeLabel;
    private javax.swing.JTextField gedcomLatitudeTextField;
    private javax.swing.JLabel gedcomLongitudeLabel;
    private javax.swing.JTextField gedcomLongitudeTextField;
    private javax.swing.JPanel gedcomPlacePanel;
    private javax.swing.JPanel geonamesPlacePanel;
    private javax.swing.JList<String> geonamesPlacesList;
    private javax.swing.JScrollPane geonamesScrollPane;
    private javax.swing.JLabel jLabel1;
    private org.jdesktop.swingx.JXMapKit jXMapKit1;
    private javax.swing.JLabel latitudeLabel;
    private javax.swing.JTextField latitudeTextField;
    private javax.swing.JLabel longitudeLabel;
    private javax.swing.JTextField longitudeTextField;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JButton parametersButton;
    private javax.swing.JTabbedPane placeEditorTabbedPane;
    private javax.swing.JToolBar placeEditorToolBar;
    private javax.swing.JScrollPane placeReferenceScrollPane;
    private javax.swing.JPanel placeReferencesPanel;
    private javax.swing.JTable placeReferencesTable;
    private javax.swing.JButton searchPlaceButton;
    private javax.swing.JPanel searchPlacePanel;
    private javax.swing.JTextField searchPlaceTextField;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the place
     */
    public PropertyPlace get() {
        return mPlace;
    }

    /**
     * @param place the place to set
     */
    public void set(PropertyPlace place) {
        this.mPlace = place;
        mPlaceFormat = PropertyPlace.getFormat(place.getGedcom());

        JComponent gedcomFields[][] = {
            {gedcomField0Label, gedcomField0TextField},
            {gedcomField1Label, gedcomField1TextField},
            {gedcomField2Label, gedcomField2TextField},
            {gedcomField3Label, gedcomField3TextField},
            {gedcomField4Label, gedcomField4TextField},
            {gedcomField5Label, gedcomField5TextField},
            {gedcomField6Label, gedcomField6TextField},
            {gedcomField7Label, gedcomField7TextField}
        };

        for (int index = 0; index < mPlaceFormat.length; index++) {
            gedcomFields[index][0].setVisible(true);
            ((javax.swing.JLabel) (gedcomFields[index][0])).setText(mPlaceFormat[index]);
            gedcomFields[index][1].setVisible(true);
            ((javax.swing.JTextField) (gedcomFields[index][1])).setText(mPlace.getJurisdiction(index));
        }

        for (int index = mPlaceFormat.length; index < gedcomFields.length; index++) {
            gedcomFields[index][0].setVisible(false);
            gedcomFields[index][1].setVisible(false);
        }

        Property latitude = null;
        Property longitude = null;

        if (mPlace.getGedcom().getGrammar().getVersion().equals("5.5.1")) {
            Property map = mPlace.getProperty("MAP");
            if (map != null) {
                latitude = map.getProperty("LATI");
                longitude = map.getProperty("LONG");
            }
        } else {
            Property map = mPlace.getProperty("_MAP");
            if (map != null) {
                latitude = map.getProperty("_LATI");
                longitude = map.getProperty("_LONG");
            }
        }

        if (latitude != null && longitude != null) {
            gedcomLatitudeTextField.setText(latitude.getValue());
            gedcomLongitudeTextField.setText(longitude.getValue());
            jXMapKit1.setAddressLocation(new GeoPosition(new Double(latitude.getValue()), new Double(longitude.getValue())));

        } else {
            String searchedPlace = gedcomField1TextField.getText();
            searchPlaceTextField.setText(searchedPlace);
            placeEditorTabbedPane.setSelectedComponent(searchPlacePanel);

            if (searchedPlace.isEmpty() == false) {
                new GeonamesPlacesList().searchPlace(searchedPlace, geonamePlacesListModel);
            }
        }
    }

    private void updateMap(Place place) {
        jXMapKit1.setAddressLocation(new GeoPosition(place.getLatitude(), place.getLongitude()));
    }

    private void updatePlace(Place place) {
        String[] jurisdictions = place.getJurisdictions();

        field0TextField.setText(jurisdictions[0]);
        field1TextField.setText(jurisdictions[1]);
        field2TextField.setText(jurisdictions[2]);
        field3TextField.setText(jurisdictions[3]);
        field4TextField.setText(jurisdictions[4]);
        field5TextField.setText(jurisdictions[5]);
        field6TextField.setText(jurisdictions[6]);
        field7TextField.setText(jurisdictions[7]);

        latitudeTextField.setText(place.getLatitude().toString());
        longitudeTextField.setText(place.getLongitude().toString());
    }

    public String getPlaceString() {

        String placeString = "";
        javax.swing.JTextField gedcomFields[] = {
            gedcomField0TextField, gedcomField1TextField, gedcomField2TextField,
            gedcomField3TextField, gedcomField4TextField, gedcomField5TextField,
            gedcomField6TextField, gedcomField7TextField};

        for (int index = 0; index < mPlaceFormat.length; index++) {
            if (index > 0) {
                placeString += PropertyPlace.JURISDICTION_SEPARATOR;
            }
            placeString += gedcomFields[index].getText();
        }

        return placeString;


    }

    public PropertyPlace commit() {
        try {
            mPlace.getGedcom().doUnitOfWork(new UnitOfWork() {

                @Override
                public void perform(Gedcom gedcom) throws GedcomException {
                    mPlace.setValue(getPlaceString());

                    if (!latitudeTextField.getText().isEmpty() && !longitudeTextField.getText().isEmpty()) {
                        Property map;
                        if (mPlace.getGedcom().getGrammar().getVersion().equals("5.5.1") == true) {
                            map = mPlace.getProperty("MAP");
                            if (map == null) {
                                map = mPlace.addProperty("MAP", "");
                                map.addProperty("LATI", latitudeTextField.getText());
                                map.addProperty("LONG", longitudeTextField.getText());
                            } else {
                                Property latitude = map.getProperty("LATI");
                                if (latitude == null) {
                                    map.addProperty("LATI", latitudeTextField.getText());
                                } else {
                                    latitude.setValue(latitudeTextField.getText());
                                }
                                Property longitude = map.getProperty("LONG");
                                if (longitude == null) {
                                    map.addProperty("LONG", longitudeTextField.getText());
                                } else {
                                    longitude.setValue(longitudeTextField.getText());
                                }
                            }
                        } else {
                            map = mPlace.getProperty("_MAP");
                            if (map == null) {
                                map = mPlace.addProperty("_MAP", "");
                                map.addProperty("_LATI", latitudeTextField.getText());
                                map.addProperty("_LONG", longitudeTextField.getText());
                            } else {
                                Property latitude = map.getProperty("_LATI");
                                if (latitude == null) {
                                    map.addProperty("_LATI", latitudeTextField.getText());
                                } else {
                                    latitude.setValue(latitudeTextField.getText());
                                }
                                Property longitude = map.getProperty("_LONG");
                                if (longitude == null) {
                                    map.addProperty("_LONG", longitudeTextField.getText());
                                } else {
                                    longitude.setValue(longitudeTextField.getText());
                                }
                            }
                        }
                    }
                }
            }); // end of doUnitOfWork

        } catch (GedcomException ex) {
            Exceptions.printStackTrace(ex);
            return null;
        } finally {
            return mPlace;
        }
    }
}
