package ancestris.modules.editors.genealogyeditor.panels;

import ancestris.api.place.Place;
import ancestris.modules.editors.genealogyeditor.models.EventsTableModel;
import ancestris.modules.editors.genealogyeditor.models.GeonamePlacesListModel;
import ancestris.modules.place.geonames.GeonamesPlacesList;
import ancestris.util.swing.DialogManager;
import genj.gedcom.PropertyPlace;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jdesktop.swingx.JXMapKit;
import org.jdesktop.swingx.mapviewer.GeoPosition;
import org.openide.DialogDescriptor;
import org.openide.util.NbBundle;

/**
 *
 * @author dominique
 */
public class PlaceEditorPanel extends javax.swing.JPanel {

    private PropertyPlace place;
    String[] placeFormat;
    private EventsTableModel eventsTableModel = new EventsTableModel();
    private GeonamePlacesListModel geonamePlacesListModel = new GeonamePlacesListModel();

    /**
     * Creates new form GedcomPlacesEditorPanel
     */
    public PlaceEditorPanel() {
        initComponents();

        placesList.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent arg0) {
                if (!arg0.getValueIsAdjusting()) {
                    Place place = geonamePlacesListModel.getPlaceAt(placesList.getSelectedIndex());
                    updateMap(place);
                    updatePlace(place);
                }
            }
        });
        jXMapKit1.setDataProviderCreditShown(true);
        jXMapKit1.getMainMap().setRecenterOnClickEnabled(true);
        jXMapKit1.setDefaultProvider(JXMapKit.DefaultProviders.OpenStreetMaps);
        jXMapKit1.setMiniMapVisible(false);
        jXMapKit1.getZoomSlider().setValue(5);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gedcomPlacePanel = new javax.swing.JPanel();
        gedcomField0Label = new javax.swing.JLabel();
        gedcomField0TextField = new javax.swing.JTextField();
        gedcomField1Label = new javax.swing.JLabel();
        gedcomField1TextField = new javax.swing.JTextField();
        gedcomField2Label = new javax.swing.JLabel();
        gedcomField2TextField = new javax.swing.JTextField();
        gedcomField3Label = new javax.swing.JLabel();
        gedcomField3TextField = new javax.swing.JTextField();
        gedcomField4Label = new javax.swing.JLabel();
        gedcomField4TextField = new javax.swing.JTextField();
        gedcomField5Label = new javax.swing.JLabel();
        gedcomField5TextField = new javax.swing.JTextField();
        gedcomField6Label = new javax.swing.JLabel();
        gedcomField6TextField = new javax.swing.JTextField();
        gedcomField7Label = new javax.swing.JLabel();
        gedcomField7TextField = new javax.swing.JTextField();
        gedcomLatitudeLabel = new javax.swing.JLabel();
        gedcomLatitudeTextField = new javax.swing.JTextField();
        gedcomLongitudeLabel = new javax.swing.JLabel();
        gedcomLongitudeTextField = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        mapPanel = new javax.swing.JPanel();
        MapScrollPane = new javax.swing.JScrollPane();
        jXMapKit1 = new org.jdesktop.swingx.JXMapKit();
        searchPlacePanel = new javax.swing.JPanel();
        field0Label = new javax.swing.JLabel();
        field0TextField = new javax.swing.JTextField();
        field1Label = new javax.swing.JLabel();
        field1TextField = new javax.swing.JTextField();
        field2Label = new javax.swing.JLabel();
        field2TextField = new javax.swing.JTextField();
        field3Label = new javax.swing.JLabel();
        field3TextField = new javax.swing.JTextField();
        field4Label = new javax.swing.JLabel();
        field4TextField = new javax.swing.JTextField();
        field5Label = new javax.swing.JLabel();
        field5TextField = new javax.swing.JTextField();
        field6Label = new javax.swing.JLabel();
        field6TextField = new javax.swing.JTextField();
        field7Label = new javax.swing.JLabel();
        field7TextField = new javax.swing.JTextField();
        latitudeLabel = new javax.swing.JLabel();
        latitudeTextField = new javax.swing.JTextField();
        longitudeLabel = new javax.swing.JLabel();
        longitudeTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        placesList = new javax.swing.JList();
        searchPlaceTextField = new javax.swing.JTextField();
        searchPlaceButton = new javax.swing.JButton();
        copyButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        placeReferencesPanel = new javax.swing.JPanel();
        placeReferenceScrollPane = new javax.swing.JScrollPane();
        placeReferencesTable = new javax.swing.JTable();
        placeEditorToolBar = new javax.swing.JToolBar();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        parametersButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(537, 414));

        gedcomPlacePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Gedcom place"));
        gedcomPlacePanel.setPreferredSize(new java.awt.Dimension(513, 121));

        gedcomField0Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField0Label, "Lieu dit"); // NOI18N

        gedcomField0TextField.setColumns(16);

        gedcomField1Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField1Label, "Commune"); // NOI18N

        gedcomField1TextField.setColumns(16);

        gedcomField2Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField2Label, "Paroisse"); // NOI18N

        gedcomField2TextField.setColumns(16);

        gedcomField3Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField3Label, "Code INSEE"); // NOI18N

        gedcomField3TextField.setColumns(16);

        gedcomField4Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField4Label, "Département"); // NOI18N

        gedcomField4TextField.setColumns(16);

        gedcomField5Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField5Label, "Région"); // NOI18N

        gedcomField5TextField.setColumns(16);

        gedcomField6Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField6Label, "Code Postal"); // NOI18N

        gedcomField6TextField.setColumns(16);

        gedcomField7Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomField7Label, "Pays"); // NOI18N

        gedcomField7TextField.setColumns(16);

        gedcomLatitudeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomLatitudeLabel, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.gedcomLatitudeLabel.text"), new Object[] {})); // NOI18N

        gedcomLatitudeTextField.setColumns(16);

        gedcomLongitudeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(gedcomLongitudeLabel, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.gedcomLongitudeLabel.text"), new Object[] {})); // NOI18N

        gedcomLongitudeTextField.setColumns(16);

        javax.swing.GroupLayout gedcomPlacePanelLayout = new javax.swing.GroupLayout(gedcomPlacePanel);
        gedcomPlacePanel.setLayout(gedcomPlacePanelLayout);
        gedcomPlacePanelLayout.setHorizontalGroup(
            gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gedcomPlacePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gedcomField0Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gedcomField1Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gedcomField4Label, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(gedcomField5Label, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(gedcomLatitudeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gedcomField0TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(gedcomField1TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(gedcomField4TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(gedcomField5TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(gedcomLatitudeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(gedcomField6Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gedcomField3Label, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(gedcomLongitudeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gedcomField7Label, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(gedcomField2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gedcomField2TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(gedcomField3TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(gedcomField6TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(gedcomField7TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(gedcomLongitudeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                .addContainerGap())
        );
        gedcomPlacePanelLayout.setVerticalGroup(
            gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gedcomPlacePanelLayout.createSequentialGroup()
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gedcomField0TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gedcomField0Label)
                    .addComponent(gedcomField2Label)
                    .addComponent(gedcomField2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gedcomField1Label)
                    .addComponent(gedcomField1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gedcomField3Label)
                    .addComponent(gedcomField3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gedcomField4Label)
                    .addComponent(gedcomField4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gedcomField6Label)
                    .addComponent(gedcomField6TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gedcomField5Label)
                    .addComponent(gedcomField5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gedcomField7Label)
                    .addComponent(gedcomField7TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gedcomPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gedcomLatitudeLabel)
                    .addComponent(gedcomLatitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gedcomLongitudeLabel)
                    .addComponent(gedcomLongitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setBorder(null);
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(513, 263));

        MapScrollPane.setViewportView(jXMapKit1);

        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MapScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                .addContainerGap())
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MapScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.mapPanel.TabConstraints.tabTitle"), new Object[] {}), new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/map.png")), mapPanel); // NOI18N

        searchPlacePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        field0Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field0Label, "Lieudit"); // NOI18N

        field0TextField.setColumns(16);

        field1Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field1Label, "Commune"); // NOI18N

        field1TextField.setColumns(16);

        field2Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field2Label, "Paroisse"); // NOI18N

        field2TextField.setColumns(16);

        field3Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field3Label, "Code INSEE"); // NOI18N

        field3TextField.setColumns(16);

        field4Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field4Label, "Code Postal"); // NOI18N

        field4TextField.setColumns(16);

        field5Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field5Label, "Région"); // NOI18N

        field5TextField.setColumns(16);

        field6Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field6Label, "Département"); // NOI18N

        field6TextField.setColumns(16);

        field7Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(field7Label, "Pays"); // NOI18N

        field7TextField.setColumns(16);

        latitudeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(latitudeLabel, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.latitudeLabel.text"), new Object[] {})); // NOI18N

        latitudeTextField.setColumns(16);

        longitudeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(longitudeLabel, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.longitudeLabel.text"), new Object[] {})); // NOI18N

        longitudeTextField.setColumns(16);

        placesList.setModel(geonamePlacesListModel);
        placesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(placesList);

        searchPlaceTextField.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.searchPlaceTextField.text"), new Object[] {})); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(searchPlaceButton, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.searchPlaceButton.text"), new Object[] {})); // NOI18N
        searchPlaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPlaceButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(copyButton, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.copyButton.text"), new Object[] {})); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.jLabel1.text"), new Object[] {})); // NOI18N

        javax.swing.GroupLayout searchPlacePanelLayout = new javax.swing.GroupLayout(searchPlacePanel);
        searchPlacePanel.setLayout(searchPlacePanelLayout);
        searchPlacePanelLayout.setHorizontalGroup(
            searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPlacePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPlacePanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field0Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(field1Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(field4Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(field5Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(latitudeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchPlacePanelLayout.createSequentialGroup()
                                .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(field0TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(field1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(field4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(field5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(latitudeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(field2Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(field3Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(field6Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(field7Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(longitudeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(field6TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(field3TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(field2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(field7TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(longitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPlacePanelLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(copyButton))))
                    .addGroup(searchPlacePanelLayout.createSequentialGroup()
                        .addComponent(searchPlaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchPlaceButton)))
                .addContainerGap())
        );
        searchPlacePanelLayout.setVerticalGroup(
            searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPlacePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchPlaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchPlaceButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPlacePanelLayout.createSequentialGroup()
                        .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(field0TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field2Label)
                            .addComponent(field2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field0Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(field1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field3Label)
                            .addComponent(field3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field1Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(field4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field6Label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field6TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field4Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(field5TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field7Label, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field7TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field5Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(latitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(longitudeLabel)
                            .addComponent(longitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(latitudeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPlacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(copyButton)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        jTabbedPane1.addTab(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.searchPlacePanel.TabConstraints.tabTitle"), new Object[] {}), new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/Place.png")), searchPlacePanel); // NOI18N

        placeReferenceScrollPane.setMinimumSize(new java.awt.Dimension(503, 218));
        placeReferenceScrollPane.setPreferredSize(new java.awt.Dimension(503, 218));

        placeReferencesTable.setModel(eventsTableModel);
        placeReferenceScrollPane.setViewportView(placeReferencesTable);

        javax.swing.GroupLayout placeReferencesPanelLayout = new javax.swing.GroupLayout(placeReferencesPanel);
        placeReferencesPanel.setLayout(placeReferencesPanelLayout);
        placeReferencesPanelLayout.setHorizontalGroup(
            placeReferencesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(placeReferencesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(placeReferenceScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                .addContainerGap())
        );
        placeReferencesPanelLayout.setVerticalGroup(
            placeReferencesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(placeReferencesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(placeReferenceScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.placeReferencesPanel.TabConstraints.tabTitle"), new Object[] {}), new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/Association.png")), placeReferencesPanel); // NOI18N

        placeEditorToolBar.setFloatable(false);
        placeEditorToolBar.setRollover(true);
        placeEditorToolBar.add(filler1);

        parametersButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/modules/editors/genealogyeditor/resources/parameters.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(parametersButton, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.parametersButton.text"), new Object[] {})); // NOI18N
        parametersButton.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("ancestris/modules/editors/genealogyeditor/panels/Bundle").getString("PlaceEditorPanel.parametersButton.toolTipText"), new Object[] {})); // NOI18N
        parametersButton.setFocusable(false);
        parametersButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        parametersButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        parametersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parametersButtonActionPerformed(evt);
            }
        });
        placeEditorToolBar.add(parametersButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gedcomPlacePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(placeEditorToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(placeEditorToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gedcomPlacePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchPlaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPlaceButtonActionPerformed
        String searchedPlace = searchPlaceTextField.getText();
        if (searchedPlace.isEmpty() == false) {
            geonamePlacesListModel.clear();
            List<Place> findPlaces = new GeonamesPlacesList().findPlace(searchedPlace);

            if (findPlaces != null) {
                for (Place findplace : findPlaces) {
                    geonamePlacesListModel.add(findplace);
                }
            }
        }
    }//GEN-LAST:event_searchPlaceButtonActionPerformed

    private void parametersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parametersButtonActionPerformed
        GedcomPlaceFormatEditorPanel gedcomPlaceFormatEditorPanel = new GedcomPlaceFormatEditorPanel();
        gedcomPlaceFormatEditorPanel.setGedcom(place.getGedcom());

        DialogManager.ADialog gedcomPlaceFormatEditorDialog = new DialogManager.ADialog(
                NbBundle.getMessage(GedcomPlaceFormatEditorPanel.class, "GedcomPlaceFormatEditorPanel.title"),
                gedcomPlaceFormatEditorPanel);
        gedcomPlaceFormatEditorDialog.setDialogId(GedcomPlaceFormatEditorPanel.class.getName());

        if (gedcomPlaceFormatEditorDialog.show() == DialogDescriptor.OK_OPTION) {
        }

    }//GEN-LAST:event_parametersButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane MapScrollPane;
    private javax.swing.JButton copyButton;
    private javax.swing.JLabel field0Label;
    private javax.swing.JTextField field0TextField;
    private javax.swing.JLabel field1Label;
    private javax.swing.JTextField field1TextField;
    private javax.swing.JLabel field2Label;
    private javax.swing.JTextField field2TextField;
    private javax.swing.JLabel field3Label;
    private javax.swing.JTextField field3TextField;
    private javax.swing.JLabel field4Label;
    private javax.swing.JTextField field4TextField;
    private javax.swing.JLabel field5Label;
    private javax.swing.JTextField field5TextField;
    private javax.swing.JLabel field6Label;
    private javax.swing.JTextField field6TextField;
    private javax.swing.JLabel field7Label;
    private javax.swing.JTextField field7TextField;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel gedcomField0Label;
    private javax.swing.JTextField gedcomField0TextField;
    private javax.swing.JLabel gedcomField1Label;
    private javax.swing.JTextField gedcomField1TextField;
    private javax.swing.JLabel gedcomField2Label;
    private javax.swing.JTextField gedcomField2TextField;
    private javax.swing.JLabel gedcomField3Label;
    private javax.swing.JTextField gedcomField3TextField;
    private javax.swing.JLabel gedcomField4Label;
    private javax.swing.JTextField gedcomField4TextField;
    private javax.swing.JLabel gedcomField5Label;
    private javax.swing.JTextField gedcomField5TextField;
    private javax.swing.JLabel gedcomField6Label;
    private javax.swing.JTextField gedcomField6TextField;
    private javax.swing.JLabel gedcomField7Label;
    private javax.swing.JTextField gedcomField7TextField;
    private javax.swing.JLabel gedcomLatitudeLabel;
    private javax.swing.JTextField gedcomLatitudeTextField;
    private javax.swing.JLabel gedcomLongitudeLabel;
    private javax.swing.JTextField gedcomLongitudeTextField;
    private javax.swing.JPanel gedcomPlacePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.jdesktop.swingx.JXMapKit jXMapKit1;
    private javax.swing.JLabel latitudeLabel;
    private javax.swing.JTextField latitudeTextField;
    private javax.swing.JLabel longitudeLabel;
    private javax.swing.JTextField longitudeTextField;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JButton parametersButton;
    private javax.swing.JToolBar placeEditorToolBar;
    private javax.swing.JScrollPane placeReferenceScrollPane;
    private javax.swing.JPanel placeReferencesPanel;
    private javax.swing.JTable placeReferencesTable;
    private javax.swing.JList placesList;
    private javax.swing.JButton searchPlaceButton;
    private javax.swing.JPanel searchPlacePanel;
    private javax.swing.JTextField searchPlaceTextField;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the place
     */
    public PropertyPlace get() {
        return place;
    }

    /**
     * @param place the place to set
     */
    public void set(PropertyPlace place) {
        this.place = place;
        placeFormat = PropertyPlace.getFormat(place.getGedcom());
        updatePanels();
        updateGedcomPlace();
    }

    private void updatePanels() {
        if (placeFormat.length > 0) {
            gedcomField0Label.setVisible(true);
            gedcomField0Label.setText(placeFormat[0]);
            gedcomField0TextField.setVisible(true);
            gedcomField0TextField.setText("");

            field0Label.setVisible(true);
            field0Label.setText(placeFormat[0]);
            field0TextField.setVisible(true);
            field0TextField.setText("");
        } else {
            gedcomField0Label.setVisible(false);
            gedcomField0TextField.setVisible(false);

            field0Label.setVisible(false);
            field0TextField.setVisible(false);
        }

        if (placeFormat.length > 1) {
            gedcomField1Label.setVisible(true);
            gedcomField1Label.setText(placeFormat[1]);
            gedcomField1TextField.setVisible(true);
            gedcomField1TextField.setText("");

            field1Label.setVisible(true);
            field1Label.setText(placeFormat[1]);
            field1TextField.setVisible(true);
            field1TextField.setText("");
        } else {
            gedcomField1Label.setVisible(false);
            gedcomField1TextField.setVisible(false);

            field1Label.setVisible(false);
            field1TextField.setVisible(false);
        }

        if (placeFormat.length > 2) {
            gedcomField2Label.setVisible(true);
            gedcomField2Label.setText(placeFormat[2]);
            gedcomField2TextField.setVisible(true);
            gedcomField2TextField.setText("");

            field2Label.setVisible(true);
            field2Label.setText(placeFormat[2]);
            field2TextField.setVisible(true);
            field2TextField.setText("");
        } else {
            gedcomField2Label.setVisible(false);
            gedcomField2TextField.setVisible(false);

            field2Label.setVisible(false);
            field2TextField.setVisible(false);
        }

        if (placeFormat.length > 3) {
            gedcomField3Label.setVisible(true);
            gedcomField3Label.setText(placeFormat[3]);
            gedcomField3TextField.setVisible(true);
            gedcomField3TextField.setText("");

            field3Label.setVisible(true);
            field3Label.setText(placeFormat[3]);
            field3TextField.setVisible(true);
            field3TextField.setText("");
        } else {
            gedcomField3Label.setVisible(false);
            gedcomField3TextField.setVisible(false);

            field3Label.setVisible(false);
            field3TextField.setVisible(false);
        }

        if (placeFormat.length > 4) {
            gedcomField4Label.setVisible(true);
            gedcomField4Label.setText(placeFormat[4]);
            gedcomField4TextField.setVisible(true);
            gedcomField4TextField.setText("");

            field4Label.setVisible(true);
            field4Label.setText(placeFormat[4]);
            field4TextField.setVisible(true);
            field4TextField.setText("");
        } else {
            gedcomField4Label.setVisible(false);
            gedcomField4TextField.setVisible(false);

            field4Label.setVisible(false);
            field4TextField.setVisible(false);
        }

        if (placeFormat.length > 5) {
            gedcomField5Label.setVisible(true);
            gedcomField5Label.setText(placeFormat[5]);
            gedcomField5TextField.setVisible(true);
            gedcomField5TextField.setText("");

            field5Label.setVisible(true);
            field5Label.setText(placeFormat[5]);
            field5TextField.setVisible(true);
            field5TextField.setText("");
        } else {
            gedcomField5Label.setVisible(false);
            gedcomField5TextField.setVisible(false);

            field5Label.setVisible(false);
            field5TextField.setVisible(false);
        }

        if (placeFormat.length > 6) {
            gedcomField6Label.setVisible(true);
            gedcomField6Label.setText(placeFormat[6]);
            gedcomField6TextField.setVisible(true);
            gedcomField6TextField.setText("");

            field6Label.setVisible(true);
            field6Label.setText(placeFormat[6]);
            field6TextField.setVisible(true);
            field6TextField.setText("");
        } else {
            gedcomField6Label.setVisible(false);
            gedcomField6TextField.setVisible(false);

            field6Label.setVisible(false);
            field6TextField.setVisible(false);
        }

        if (placeFormat.length > 7) {
            gedcomField7Label.setVisible(true);
            gedcomField7Label.setText(placeFormat[7]);
            gedcomField7TextField.setVisible(true);
            gedcomField7TextField.setText("");

            field7Label.setVisible(true);
            field7Label.setText(placeFormat[7]);
            field7TextField.setVisible(true);
            field7TextField.setText("");
        } else {
            gedcomField7Label.setVisible(false);
            gedcomField7TextField.setVisible(false);

            field7Label.setVisible(false);
            field7TextField.setVisible(false);
        }
    }

    private void updateGedcomPlace() {

        if (placeFormat.length > 0) {
            gedcomField0TextField.setText(place.getJurisdiction(0));
        }

        if (placeFormat.length > 1) {
            gedcomField1TextField.setText(place.getJurisdiction(1));
        }

        if (placeFormat.length > 2) {
            gedcomField2TextField.setText(place.getJurisdiction(2));
        }

        if (placeFormat.length > 3) {
            gedcomField3TextField.setText(place.getJurisdiction(3));
        }

        if (placeFormat.length > 4) {
            gedcomField4TextField.setText(place.getJurisdiction(4));
        }

        if (placeFormat.length > 5) {
            gedcomField5TextField.setText(place.getJurisdiction(5));
        }

        if (placeFormat.length > 6) {
            gedcomField6TextField.setText(place.getJurisdiction(6));
        }

        if (placeFormat.length > 7) {
            gedcomField7TextField.setText(place.getJurisdiction(7));
        }
    }

    private void updateMap(Place place) {
        jXMapKit1.setAddressLocation(new GeoPosition(place.getLatitude(), place.getLongitude()));
    }

    private void updatePlace(Place place) {
        String[] jurisdictions = place.getJurisdictions();

        if (placeFormat.length > 0) {
            field0TextField.setText(jurisdictions.length > 0 ? jurisdictions[0] : "");
        }

        if (placeFormat.length > 1) {
            field1TextField.setText(jurisdictions.length > 1 ? jurisdictions[1] : "");
        }

        if (placeFormat.length > 2) {
            field2TextField.setText(jurisdictions.length > 2 ? jurisdictions[2] : "");
        }

        if (placeFormat.length > 3) {
            field3TextField.setText(jurisdictions.length > 3 ? jurisdictions[3] : "");
        }

        if (placeFormat.length > 4) {
            field4TextField.setText(jurisdictions.length > 4 ? jurisdictions[4] : "");
        }

        if (placeFormat.length > 5) {
            field5Label.setText(placeFormat[5]);
        }

        if (placeFormat.length > 6) {
            field6TextField.setText(jurisdictions.length > 6 ? jurisdictions[6] : "");
        }

        if (placeFormat.length > 7) {
            field7TextField.setText(jurisdictions.length > 7 ? jurisdictions[7] : "");
        }

        latitudeTextField.setText(place.getLatitude().toString());
        longitudeTextField.setText(place.getLongitude().toString());
    }

    public String getPlaceString() {
        String placeString = "";

        if (placeFormat.length > 0) {
            placeString = field0TextField.getText();
        }

        if (placeFormat.length > 1) {
            placeString += PropertyPlace.JURISDICTION_SEPARATOR;
            placeString += field1TextField.getText();
        }

        if (placeFormat.length > 2) {
            placeString += PropertyPlace.JURISDICTION_SEPARATOR;
            placeString += field2TextField.getText();
        }

        if (placeFormat.length > 3) {
            placeString += PropertyPlace.JURISDICTION_SEPARATOR;
            placeString += field4TextField.getText();
        }

        if (placeFormat.length > 4) {
            placeString += PropertyPlace.JURISDICTION_SEPARATOR;
            placeString += field3TextField.getText();
        }

        if (placeFormat.length > 5) {
            placeString += PropertyPlace.JURISDICTION_SEPARATOR;
            placeString += field6TextField.getText();
        }

        if (placeFormat.length > 6) {
            placeString += PropertyPlace.JURISDICTION_SEPARATOR;
            placeString += field5TextField.getText();
        }

        if (placeFormat.length > 7) {
            placeString += PropertyPlace.JURISDICTION_SEPARATOR;
            placeString += field7TextField.getText();
        }

        return placeString;
    }

    public void commit() {
    }
}
