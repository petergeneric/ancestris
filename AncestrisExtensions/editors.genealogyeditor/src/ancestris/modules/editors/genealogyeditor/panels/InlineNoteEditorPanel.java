package ancestris.modules.editors.genealogyeditor.panels;

import genj.gedcom.*;
import org.openide.util.Exceptions;

/**
 *
 * @author dominique
 * 
 * NOTE [<SUBMITTER_TEXT> | <NULL>]
 * +1 [CONC|CONT] <SUBMITTER_TEXT>
 */
public class InlineNoteEditorPanel extends javax.swing.JPanel {

    private Property mNote;

    /**
     * Creates new form NoteEditorPanel
     */
    public InlineNoteEditorPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        noteTextScrollPane = new javax.swing.JScrollPane();
        noteTextTextArea = new javax.swing.JTextArea();

        noteTextTextArea.setColumns(20);
        noteTextTextArea.setRows(5);
        noteTextScrollPane.setViewportView(noteTextTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(noteTextScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(noteTextScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane noteTextScrollPane;
    private javax.swing.JTextArea noteTextTextArea;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the note
     */
    public Property get() {
        return mNote;
    }

    /**
     * @param note the note to set
     * 
     * @<XREF:NOTE>@ NOTE <SUBMITTER_TEXT>
     * +1 [CONC|CONT] <SUBMITTER_TEXT>
     * +1 REFN <USER_REFERENCE_NUMBER>
     * +2 TYPE <USER_REFERENCE_TYPE>
     * +1 RIN <AUTOMATED_RECORD_ID>
     * +1 <<SOURCE_CITATION>>
     * +1 <<CHANGE_DATE>>
     */
    public void set(Property note) {
        this.mNote = note;
        noteTextTextArea.setText(note.getValue() != null ? note.getValue() : "");
    }

    public Property commit() {
        try {
            mNote.getGedcom().doUnitOfWork(new UnitOfWork() {

                @Override
                public void perform(Gedcom gedcom) throws GedcomException {
                    mNote.setValue(noteTextTextArea.getText());
                }
            }); // end of doUnitOfWork
        } catch (GedcomException ex) {
            Exceptions.printStackTrace(ex);
            return null;
        } finally {
            return mNote;
        }
    }
}
