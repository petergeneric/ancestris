/*
 * ReleveOptionsPanel.java
 *
 * Created on 1 avr. 2012, 10:25:12
 */

package ancestris.modules.releve;

import ancestris.app.TreeTopComponent;
import ancestris.core.pluginservice.AncestrisPlugin;
import ancestris.modules.releve.dnd.TreeViewDropTarget;
import ancestris.modules.releve.editor.StandaloneEditor;
import genj.tree.TreeView;
import org.openide.util.NbPreferences;

/**
 *
 * @author Michel
 */
public class ReleveOptionsPanel extends javax.swing.JPanel  {

    
    /** Creates new form ConfigPanel */
    public ReleveOptionsPanel() {
        initComponents();
       


    }

    void load() {
        copyFreeComment.setSelected( Boolean.parseBoolean(NbPreferences.forModule(ReleveTopComponent.class).get("FreeCommentEnabled", "true")));
        jCheckBoxDuplicateRecord.setSelected( Boolean.parseBoolean(NbPreferences.forModule(ReleveTopComponent.class).get("DuplicateRecordControlEnabled", "true")));
        jCheckBoxNewValueControl.setSelected( Boolean.parseBoolean(NbPreferences.forModule(ReleveTopComponent.class).get("ValueControlEnabled", "true")));
        jCheckBoxGedcomCompletion.setSelected( Boolean.parseBoolean(NbPreferences.forModule(ReleveTopComponent.class).get("GedcomCompletionEnabled", "true")));
        jCheckBoxBrowser.setSelected(Boolean.parseBoolean(NbPreferences.forModule(ReleveTopComponent.class).get("ImgageBrowserVisible", "false")));
    }

    void store() {
        NbPreferences.forModule(ReleveTopComponent.class).put("FreeCommentEnabled", String.valueOf(copyFreeComment.isSelected()));
        NbPreferences.forModule(ReleveTopComponent.class).put("DuplicateRecordControlEnabled", String.valueOf(jCheckBoxDuplicateRecord.isSelected()));
        NbPreferences.forModule(ReleveTopComponent.class).put("ValueControlEnabled", String.valueOf(jCheckBoxNewValueControl.isSelected()));
        NbPreferences.forModule(ReleveTopComponent.class).put("GedcomCompletionEnabled", String.valueOf(jCheckBoxGedcomCompletion.isSelected()));
        NbPreferences.forModule(ReleveTopComponent.class).put("ImgageBrowserVisible", String.valueOf(jCheckBoxBrowser.isSelected()));

        // je notifie les composants pour rafraichir les options
        for (ReleveTopComponent tc : AncestrisPlugin.lookupAll(ReleveTopComponent.class)) {
            tc.getDataManager().loadOptions();
        }
    }


    /**
     * active le drag and drop avec toutes les vues ouvertes
     */
    public void activateDndWithTreeView() {
       for (TreeTopComponent tc : AncestrisPlugin.lookupAll(TreeTopComponent.class)) {
            TreeView view = (TreeView) tc.getView();
            TreeViewDropTarget viewDropTarget = new TreeViewDropTarget();
            viewDropTarget.createDropTarget(view);
        }
    }

//    public boolean getCopyFreeComment() {
//        return copyFreeComment.isSelected();
//    }
//
//    public boolean getDuplicateControl() {
//        return jCheckBoxDuplicateRecord.isSelected();
//    }
//
//    public boolean getNewValueControlEnabled() {
//        return jCheckBoxNewValueControl.isSelected();
//    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        OptionsPanel = new javax.swing.JPanel();
        jCheckBoxDuplicateRecord = new javax.swing.JCheckBox();
        jCheckBoxNewValueControl = new javax.swing.JCheckBox();
        jCheckBoxGedcomCompletion = new javax.swing.JCheckBox();
        copyFreeComment = new javax.swing.JCheckBox();
        jButtonActivateDnd = new javax.swing.JButton();
        jButtonConfigEditor = new javax.swing.JButton();
        jPanelExludeCompletion = new javax.swing.JPanel();
        jButtonFirstNameCompletion = new javax.swing.JButton();
        jButtonLastNameCompletion = new javax.swing.JButton();
        jButtonOccupationCompletion = new javax.swing.JButton();
        jCheckBoxBrowser = new javax.swing.JCheckBox();
        fillerPanelHorizontal = new javax.swing.JPanel();
        fillerPanelVertical = new javax.swing.JPanel();

        setForeground(new java.awt.Color(200, 45, 45));
        setFocusTraversalPolicyProvider(true);
        setLayout(new java.awt.BorderLayout());

        jPanel2.setForeground(new java.awt.Color(200, 45, 45));
        jPanel2.setFocusTraversalPolicyProvider(true);
        jPanel2.setLayout(new java.awt.GridBagLayout());

        OptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ReleveOptionsPanel.class, "ReleveOptionsPanel.OptionsPanel.border.title"))); // NOI18N
        OptionsPanel.setLayout(new java.awt.GridBagLayout());

        jCheckBoxDuplicateRecord.setSelected(true);
        jCheckBoxDuplicateRecord.setText(org.openide.util.NbBundle.getMessage(ReleveOptionsPanel.class, "ReleveOptionsPanel.jCheckBoxDuplicateRecord.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        OptionsPanel.add(jCheckBoxDuplicateRecord, gridBagConstraints);

        jCheckBoxNewValueControl.setSelected(true);
        jCheckBoxNewValueControl.setText(org.openide.util.NbBundle.getMessage(ReleveOptionsPanel.class, "ReleveOptionsPanel.jCheckBoxNewValueControl.text")); // NOI18N
        jCheckBoxNewValueControl.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        OptionsPanel.add(jCheckBoxNewValueControl, gridBagConstraints);
        jCheckBoxNewValueControl.getAccessibleContext().setAccessibleName(""); // NOI18N

        jCheckBoxGedcomCompletion.setText(org.openide.util.NbBundle.getMessage(ReleveOptionsPanel.class, "ReleveOptionsPanel.jCheckBoxGedcomCompletion.text")); // NOI18N
        jCheckBoxGedcomCompletion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxGedcomCompletionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        OptionsPanel.add(jCheckBoxGedcomCompletion, gridBagConstraints);

        copyFreeComment.setSelected(true);
        copyFreeComment.setText(org.openide.util.NbBundle.getMessage(ReleveOptionsPanel.class, "ReleveOptionsPanel.copyFreeComment.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        OptionsPanel.add(copyFreeComment, gridBagConstraints);

        jButtonActivateDnd.setText(org.openide.util.NbBundle.getMessage(ReleveOptionsPanel.class, "ReleveOptionsPanel.jButtonActivateDnd.text")); // NOI18N
        jButtonActivateDnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActivateDndActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        OptionsPanel.add(jButtonActivateDnd, gridBagConstraints);

        jButtonConfigEditor.setText(org.openide.util.NbBundle.getMessage(ReleveOptionsPanel.class, "ReleveOptionsPanel.jButtonConfigEditor.text")); // NOI18N
        jButtonConfigEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfigEditorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        OptionsPanel.add(jButtonConfigEditor, gridBagConstraints);

        jButtonFirstNameCompletion.setText(org.openide.util.NbBundle.getMessage(ReleveOptionsPanel.class, "ReleveOptionsPanel.jButtonFirstNameCompletion.text")); // NOI18N
        jButtonFirstNameCompletion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFirstNameCompletionActionPerformed(evt);
            }
        });
        jPanelExludeCompletion.add(jButtonFirstNameCompletion);

        jButtonLastNameCompletion.setText(org.openide.util.NbBundle.getMessage(ReleveOptionsPanel.class, "ReleveOptionsPanel.jButtonLastNameCompletion.text")); // NOI18N
        jButtonLastNameCompletion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLastNameCompletionActionPerformed(evt);
            }
        });
        jPanelExludeCompletion.add(jButtonLastNameCompletion);

        jButtonOccupationCompletion.setText(org.openide.util.NbBundle.getMessage(ReleveOptionsPanel.class, "ReleveOptionsPanel.jButtonOccupationCompletion.text")); // NOI18N
        jButtonOccupationCompletion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOccupationCompletionActionPerformed(evt);
            }
        });
        jPanelExludeCompletion.add(jButtonOccupationCompletion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        OptionsPanel.add(jPanelExludeCompletion, gridBagConstraints);

        jCheckBoxBrowser.setText(org.openide.util.NbBundle.getMessage(ReleveOptionsPanel.class, "ReleveOptionsPanel.jCheckBoxBrowser.text")); // NOI18N
        jCheckBoxBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBrowserActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        OptionsPanel.add(jCheckBoxBrowser, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(OptionsPanel, gridBagConstraints);

        fillerPanelHorizontal.setEnabled(false);
        fillerPanelHorizontal.setFocusable(false);
        fillerPanelHorizontal.setRequestFocusEnabled(false);
        fillerPanelHorizontal.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(fillerPanelHorizontal, gridBagConstraints);

        fillerPanelVertical.setEnabled(false);
        fillerPanelVertical.setFocusable(false);
        fillerPanelVertical.setRequestFocusEnabled(false);
        fillerPanelVertical.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(fillerPanelVertical, gridBagConstraints);
        fillerPanelVertical.getAccessibleContext().setAccessibleName(""); // NOI18N

        jScrollPane1.setViewportView(jPanel2);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * activate DND for all Treeview components
     * @param evt
     */
    private void jCheckBoxGedcomCompletionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxGedcomCompletionActionPerformed
        // je notifie les composants pour rafraichir les options
        for (ReleveTopComponent tc : AncestrisPlugin.lookupAll(ReleveTopComponent.class)) {
                tc.getDataManager().loadOptions();
        }
    }//GEN-LAST:event_jCheckBoxGedcomCompletionActionPerformed

    /**
     * active drag-and-drop sur les vues du gedcom courant
     * @param evt
     */
    private void jButtonActivateDndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActivateDndActionPerformed
        activateDndWithTreeView();
    }//GEN-LAST:event_jButtonActivateDndActionPerformed

    private void jButtonLastNameCompletionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLastNameCompletionActionPerformed
        // TODO add your handling code here:
        ReleveCompletionDialog.showLastNameCompletionPanel();

    }//GEN-LAST:event_jButtonLastNameCompletionActionPerformed

    private void jButtonFirstNameCompletionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFirstNameCompletionActionPerformed
        ReleveCompletionDialog.showFirstNameCompletionPanel();
    }//GEN-LAST:event_jButtonFirstNameCompletionActionPerformed

    private void jButtonConfigEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfigEditorActionPerformed
        ReleveEditorConfigDialog.showEditorConfigPanel();
    }//GEN-LAST:event_jButtonConfigEditorActionPerformed

    private void jCheckBoxBrowserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBrowserActionPerformed
        // je notifie les editeurs pour rafraichir l'affichage
        for (ReleveTopComponent tc : AncestrisPlugin.lookupAll(ReleveTopComponent.class)) {
            tc.setBrowserVisible(jCheckBoxBrowser.isSelected());
        }

        // j'enregistre immediatement la nouvelle valeur pour qu'elle soit disponible pour les nouveaux editeurs
        NbPreferences.forModule(ReleveTopComponent.class).put("ImgageBrowserVisible", String.valueOf(jCheckBoxBrowser.isSelected()));

    }//GEN-LAST:event_jCheckBoxBrowserActionPerformed

    private void jButtonOccupationCompletionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOccupationCompletionActionPerformed
        ReleveCompletionDialog.showOccupationCompletionPanel();
    }//GEN-LAST:event_jButtonOccupationCompletionActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel OptionsPanel;
    private javax.swing.JCheckBox copyFreeComment;
    private javax.swing.JPanel fillerPanelHorizontal;
    private javax.swing.JPanel fillerPanelVertical;
    private javax.swing.JButton jButtonActivateDnd;
    private javax.swing.JButton jButtonConfigEditor;
    private javax.swing.JButton jButtonFirstNameCompletion;
    private javax.swing.JButton jButtonLastNameCompletion;
    private javax.swing.JButton jButtonOccupationCompletion;
    private javax.swing.JCheckBox jCheckBoxBrowser;
    private javax.swing.JCheckBox jCheckBoxDuplicateRecord;
    private javax.swing.JCheckBox jCheckBoxGedcomCompletion;
    private javax.swing.JCheckBox jCheckBoxNewValueControl;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelExludeCompletion;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    

}
