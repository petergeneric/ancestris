package ancestris.modules.releve;

import ancestris.modules.releve.model.DataManager;
import java.awt.Dimension;
import java.awt.Toolkit;
import org.openide.util.NbBundle;
import org.openide.util.NbPreferences;

/**
 * Affiche une fenetre pour configurer le le lieu du relevé (cityName etc...)
 *
 * @author Michel
 */
public class ReleveConfigDialog extends javax.swing.JDialog {

    DataManager dataManager;
    
    /**
     * affiche la fenetre de configuration du relevé
     * @param parent
     * @param dataManager
     */
    public static void show(java.awt.Frame parent, DataManager dataManager) {
        final ReleveConfigDialog dialog = new ReleveConfigDialog(parent, dataManager);
        
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {

            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                dialog.saveDialogBounds();
                dialog.setVisible(false);
                dialog.dispose();
            }
        });

        dialog.setVisible(true);
    }
    
    /**
     * Creates new form ReleveConfig
     */
    public ReleveConfigDialog(java.awt.Frame parent, DataManager dataManager) {
        super(parent, true);
        initComponents();
        setTitle(NbBundle.getMessage(ReleveConfigDialog.class, "ReleveConfig.Title"));
        this.dataManager = dataManager;
        
        cityNameEntry.setText(dataManager.getCityName());
        cityCodeEntry.setText(dataManager.getCityCode());
        countyNameEntry.setText(dataManager.getCountyName());
        stateEntry.setText(dataManager.getStateName());
        countryEntry.setText(dataManager.getCountryName());
        
        // je configure la taille de la fenetre
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        String size = NbPreferences.forModule(ReleveConfigDialog.class).get("ReleveConfigDialogSize", "400,300,0,0");
        String[] dimensions = size.split(",");
        if ( dimensions.length >= 4 ) {
            int width = Integer.parseInt(dimensions[0]);
            int height = Integer.parseInt(dimensions[1]);
            int x = Integer.parseInt(dimensions[2]);
            int y = Integer.parseInt(dimensions[3]);
            if ( width < 100 ) {
                width = 100;
            }
            if ( height < 100 ) {
                height = 100;
            }
            if ( x < 10 || x > screen.width -10) {
                x = (screen.width / 2) - (width / 2);
            }
            if ( y < 10 || y > screen.height -10) {
                y = (screen.height / 2) - (height / 2);
            }
            setBounds(x, y, width, height);
        } else {
            setBounds(screen.width / 2 -100, screen.height / 2- 100, 300, 450);
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        placePanel = new javax.swing.JPanel();
        cityNameLabel = new javax.swing.JLabel();
        cityNameEntry = new javax.swing.JTextField();
        cityCodeLabel = new javax.swing.JLabel();
        cityCodeEntry = new javax.swing.JTextField();
        countyNameLabel = new javax.swing.JLabel();
        countyNameEntry = new javax.swing.JTextField();
        stateLabel = new javax.swing.JLabel();
        stateEntry = new javax.swing.JTextField();
        countryLabel = new javax.swing.JLabel();
        countryEntry = new javax.swing.JTextField();
        jPanelButton = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        placePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ReleveConfigDialog.class, "ReleveConfigDialog.placePanel.border.title"))); // NOI18N
        placePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        placePanel.setRequestFocusEnabled(false);
        placePanel.setLayout(new java.awt.GridBagLayout());

        cityNameLabel.setText(org.openide.util.NbBundle.getMessage(ReleveConfigDialog.class, "ReleveConfigDialog.cityNameLabel.text")); // NOI18N
        cityNameLabel.setFocusable(false);
        cityNameLabel.setPreferredSize(null);
        cityNameLabel.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        placePanel.add(cityNameLabel, gridBagConstraints);

        cityNameEntry.setMinimumSize(new java.awt.Dimension(50, 20));
        cityNameEntry.setName("cityNameEntry"); // NOI18N
        cityNameEntry.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        placePanel.add(cityNameEntry, gridBagConstraints);

        cityCodeLabel.setText(org.openide.util.NbBundle.getMessage(ReleveConfigDialog.class, "ReleveConfigDialog.cityCodeLabel.text")); // NOI18N
        cityCodeLabel.setFocusable(false);
        cityCodeLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        placePanel.add(cityCodeLabel, gridBagConstraints);

        cityCodeEntry.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        placePanel.add(cityCodeEntry, gridBagConstraints);

        countyNameLabel.setText(org.openide.util.NbBundle.getMessage(ReleveConfigDialog.class, "ReleveConfigDialog.countyNameLabel.text")); // NOI18N
        countyNameLabel.setFocusable(false);
        countyNameLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        placePanel.add(countyNameLabel, gridBagConstraints);

        countyNameEntry.setMinimumSize(new java.awt.Dimension(50, 20));
        countyNameEntry.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        placePanel.add(countyNameEntry, gridBagConstraints);

        stateLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        stateLabel.setText(org.openide.util.NbBundle.getMessage(ReleveConfigDialog.class, "ReleveConfigDialog.stateLabel.text")); // NOI18N
        stateLabel.setFocusable(false);
        stateLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        stateLabel.setPreferredSize(null);
        stateLabel.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        placePanel.add(stateLabel, gridBagConstraints);

        stateEntry.setMinimumSize(new java.awt.Dimension(50, 20));
        stateEntry.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        placePanel.add(stateEntry, gridBagConstraints);

        countryLabel.setText(org.openide.util.NbBundle.getMessage(ReleveConfigDialog.class, "ReleveConfigDialog.countryLabel.text")); // NOI18N
        countryLabel.setFocusable(false);
        countryLabel.setPreferredSize(null);
        countryLabel.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        placePanel.add(countryLabel, gridBagConstraints);

        countryEntry.setMinimumSize(new java.awt.Dimension(50, 20));
        countryEntry.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        placePanel.add(countryEntry, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(placePanel, gridBagConstraints);

        jButtonOk.setText(org.openide.util.NbBundle.getMessage(ReleveConfigDialog.class, "ReleveConfigDialog.jButtonOk.text")); // NOI18N
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });
        jPanelButton.add(jButtonOk);

        jButtonCancel.setText(org.openide.util.NbBundle.getMessage(ReleveConfigDialog.class, "ReleveConfigDialog.jButtonCancel.text")); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jPanelButton.add(jButtonCancel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanelButton, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * enregistre les modifications et ferme la fenetre
     * @param evt 
     */
    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        // j'enregistre les nouvelles valeurs dans dataManager
        dataManager.setPlace(
                cityNameEntry.getText().trim(),
                cityCodeEntry.getText().trim(),
                countyNameEntry.getText().trim(),
                stateEntry.getText().trim(),
                countryEntry.getText().trim()
            );
        saveDialogBounds();
        dispose();
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        saveDialogBounds();
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
     * e
     */
    private void saveDialogBounds() {

        // j'enregistre la taille dans les preferences
        String size;
        size = String.valueOf((int)getBounds().getWidth()) + ","
                + String.valueOf((int)getBounds().getHeight()) + ","
                + String.valueOf(getBounds().getLocation().x + ","
                + String.valueOf(getBounds().getLocation().y));

        NbPreferences.forModule(ReleveConfigDialog.class).put("ReleveConfigDialogSize", size);

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cityCodeEntry;
    private javax.swing.JLabel cityCodeLabel;
    private javax.swing.JTextField cityNameEntry;
    private javax.swing.JLabel cityNameLabel;
    private javax.swing.JTextField countryEntry;
    private javax.swing.JLabel countryLabel;
    private javax.swing.JTextField countyNameEntry;
    private javax.swing.JLabel countyNameLabel;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JPanel jPanelButton;
    private javax.swing.JPanel placePanel;
    private javax.swing.JTextField stateEntry;
    private javax.swing.JLabel stateLabel;
    // End of variables declaration//GEN-END:variables
}
