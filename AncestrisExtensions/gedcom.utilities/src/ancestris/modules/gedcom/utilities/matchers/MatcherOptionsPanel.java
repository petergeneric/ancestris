/*
 * Ancestris - http://www.ancestris.org
 * 
 * Copyright 2017 Ancestris
 * 
 * Author: Frédéric Lapeyre (frederic@ancestris.org).
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
package ancestris.modules.gedcom.utilities.matchers;

import genj.gedcom.Gedcom;
import javax.swing.JPanel;

/**
 *
 * @author frederic
 */
public class MatcherOptionsPanel extends javax.swing.JPanel {

    private String entityTag = "";
    private JPanel entityPanel;
    
    /**
     * Creates new form CriteriaPanel
     */
    public MatcherOptionsPanel(String tag) {
        entityTag = tag;
        initComponents();
        if (entityTag.equals(Gedcom.INDI)) {
            entityPanel = new IndiMatcherOptionsPanel();
        } else if (entityTag.equals(Gedcom.FAM)) {
            entityPanel = new FamMatcherOptionsPanel();
        } else if (entityTag.equals(Gedcom.SUBM)) {
            entityPanel = new SubmitterMatcherOptionsPanel();
        } else if (entityTag.equals(Gedcom.REPO)) {
            entityPanel = new RepositoryMatcherOptionsPanel();
        } else if (entityTag.equals(Gedcom.SOUR)) {
            entityPanel = new SourceMatcherOptionsPanel();
        } else if (entityTag.equals(Gedcom.NOTE)) {
            entityPanel = new NoteMatcherOptionsPanel();
        } else if (entityTag.equals(Gedcom.OBJE)) {
            entityPanel = new MediaMatcherOptionsPanel();
        }
        jScrollPane1.setViewportView(entityPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(MatcherOptionsPanel.class, "MatcherOptionsPanel.jLabel1.text", Gedcom.getName(entityTag)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public MatcherOptions getMatcherOptions() {
        if (entityTag.equals(Gedcom.INDI)) {
            return ((IndiMatcherOptionsPanel) entityPanel).getSelectedOptions();
        } else if (entityTag.equals(Gedcom.FAM)) {
            return ((FamMatcherOptionsPanel) entityPanel).getSelectedOptions();
        } else if (entityTag.equals(Gedcom.SUBM)) {
            return ((SubmitterMatcherOptionsPanel) entityPanel).getSelectedOptions();
        } else if (entityTag.equals(Gedcom.REPO)) {
            return ((RepositoryMatcherOptionsPanel) entityPanel).getSelectedOptions();
        } else if (entityTag.equals(Gedcom.SOUR)) {
            return ((SourceMatcherOptionsPanel) entityPanel).getSelectedOptions();
        } else if (entityTag.equals(Gedcom.OBJE)) {
            return ((MediaMatcherOptionsPanel) entityPanel).getSelectedOptions();
        } else if (entityTag.equals(Gedcom.NOTE)) {
            return ((NoteMatcherOptionsPanel) entityPanel).getSelectedOptions();
        }
        return null;
    }
}
