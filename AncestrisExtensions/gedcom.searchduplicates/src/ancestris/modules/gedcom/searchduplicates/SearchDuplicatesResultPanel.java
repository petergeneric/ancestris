package ancestris.modules.gedcom.searchduplicates;

import static ancestris.modules.gedcom.searchduplicates.Bundle.CheckDuplicatesResultPanel_duplicateIndexLabel_text;
import ancestris.modules.gedcom.utilities.matchers.PotentialMatch;
import genj.gedcom.Entity;
import java.awt.BorderLayout;
import java.awt.Dialog;
import java.util.LinkedList;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.util.NbBundle;
import org.openide.util.NbBundle.Messages;

/**
 *
 * @author lemovice
 */
@Messages("CheckDuplicatesResultPanel.duplicateIndexLabel.text=<html>Duplicate <font color=red>{0}</font> of {1} estimate matching <font color=blue>{2}</font>%<html>")
public class SearchDuplicatesResultPanel extends javax.swing.JPanel {

    LinkedList<PotentialMatch<? extends Entity>> matchesLinkedList;
    int linkedListIndex;
    EntityDiffPanel entityDiffPanel = new EntityDiffPanel();

    /**
     * Creates new form SearchDuplicatesResultPanel
     */
    public SearchDuplicatesResultPanel(LinkedList<PotentialMatch<? extends Entity>> matchesLinkedList) {
        initComponents();
        this.matchesLinkedList = matchesLinkedList;
        this.linkedListIndex = 0;
        if (matchesLinkedList.size() > 0) {
            PotentialMatch<? extends Entity> potentialMatch = matchesLinkedList.get(linkedListIndex);
            Entity left = potentialMatch.getLeft();
            Entity right = potentialMatch.getRight();

            entityDiffPanel.setEntities(left, right);
            duplicateIndexLabel.setText(CheckDuplicatesResultPanel_duplicateIndexLabel_text((linkedListIndex + 1), matchesLinkedList.size(), potentialMatch.getCertainty()));
            if (linkedListIndex < matchesLinkedList.size() - 1) {
                nextButton.setEnabled(true);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        duplicateIndexLabel = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        mergeButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(720, 438));
        setOpaque(false);
        setRequestFocusEnabled(false);
        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());
        jPanel1.add(entityDiffPanel, BorderLayout.CENTER);
        jScrollPane1.setViewportView(jPanel1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        nextButton.setText(org.openide.util.NbBundle.getMessage(SearchDuplicatesResultPanel.class, "SearchDuplicatesResultPanel.nextButton.text")); // NOI18N
        nextButton.setEnabled(false);
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        previousButton.setText(org.openide.util.NbBundle.getMessage(SearchDuplicatesResultPanel.class, "SearchDuplicatesResultPanel.previousButton.text")); // NOI18N
        previousButton.setEnabled(false);
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        mergeButton.setText(org.openide.util.NbBundle.getMessage(SearchDuplicatesResultPanel.class, "SearchDuplicatesResultPanel.mergeButton.text")); // NOI18N
        mergeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(duplicateIndexLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(previousButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mergeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextButton)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousButton)
                    .addComponent(mergeButton)
                    .addComponent(nextButton)
                    .addComponent(duplicateIndexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        add(jPanel3, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void mergeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeButtonActionPerformed
        PotentialMatch<? extends Entity> potentialMatch = matchesLinkedList.get(linkedListIndex);
        MergeEntityPanel mergeEntityPanel = new MergeEntityPanel(potentialMatch.getLeft(), potentialMatch.getRight());
        DialogDescriptor mergeEntityPanelDescriptor = new DialogDescriptor(
                mergeEntityPanel,
                NbBundle.getMessage(SearchDuplicatesPlugin.class, "CheckDuplicatePanelDescriptor.title"),
                true,
                new Object[]{DialogDescriptor.OK_OPTION, DialogDescriptor.CANCEL_OPTION},
                DialogDescriptor.OK_OPTION,
                DialogDescriptor.DEFAULT_ALIGN,
                null,
                null);

        Dialog dialog = DialogDisplayer.getDefault().createDialog(mergeEntityPanelDescriptor);
        dialog.setVisible(true);
        dialog.setModal(false);
        dialog.toFront();
        if (mergeEntityPanelDescriptor.getValue().equals(DialogDescriptor.OK_OPTION)) {
            matchesLinkedList.remove(linkedListIndex);
            if (matchesLinkedList.size() > 0) {
                if (linkedListIndex < matchesLinkedList.size() - 1) {
                    potentialMatch = matchesLinkedList.get(linkedListIndex);
                    Entity left = potentialMatch.getLeft();
                    Entity right = potentialMatch.getRight();
                    entityDiffPanel.setEntities(left, right);
                    duplicateIndexLabel.setText(CheckDuplicatesResultPanel_duplicateIndexLabel_text((linkedListIndex + 1), matchesLinkedList.size(), potentialMatch.getCertainty()));
                } else {
                    linkedListIndex = matchesLinkedList.size() - 1;

                    potentialMatch = matchesLinkedList.get(linkedListIndex);
                    Entity left = potentialMatch.getLeft();
                    Entity right = potentialMatch.getRight();

                    entityDiffPanel.setEntities(left, right);
                    duplicateIndexLabel.setText(CheckDuplicatesResultPanel_duplicateIndexLabel_text((linkedListIndex + 1), matchesLinkedList.size(), potentialMatch.getCertainty()));

                    nextButton.setEnabled(false);

                    if (linkedListIndex <= 0) {
                        previousButton.setEnabled(false);
                    }
                }
            } else {
                entityDiffPanel.setEntities(null, null);

                duplicateIndexLabel.setText("");

                mergeButton.setEnabled(false);
            }
        }
    }//GEN-LAST:event_mergeButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        linkedListIndex -= 1;
        PotentialMatch<? extends Entity> potentialMatch = matchesLinkedList.get(linkedListIndex);
        Entity left = potentialMatch.getLeft();
        Entity right = potentialMatch.getRight();

        entityDiffPanel.setEntities(left, right);
        duplicateIndexLabel.setText(CheckDuplicatesResultPanel_duplicateIndexLabel_text((linkedListIndex + 1), matchesLinkedList.size(), potentialMatch.getCertainty()));
        if (linkedListIndex <= 0) {
            previousButton.setEnabled(false);
        }
        if (linkedListIndex < matchesLinkedList.size() - 1) {
            nextButton.setEnabled(true);
        }
    }//GEN-LAST:event_previousButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        linkedListIndex += 1;
        PotentialMatch<? extends Entity> potentialMatch = matchesLinkedList.get(linkedListIndex);
        Entity left = potentialMatch.getLeft();
        Entity right = potentialMatch.getRight();

        entityDiffPanel.setEntities(left, right);
        duplicateIndexLabel.setText(CheckDuplicatesResultPanel_duplicateIndexLabel_text((linkedListIndex + 1), matchesLinkedList.size(), potentialMatch.getCertainty()));

        if (linkedListIndex >= matchesLinkedList.size() - 1) {
            nextButton.setEnabled(false);
        }
        if (linkedListIndex > 0) {
            previousButton.setEnabled(true);
        }
    }//GEN-LAST:event_nextButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel duplicateIndexLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mergeButton;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton previousButton;
    // End of variables declaration//GEN-END:variables
}
