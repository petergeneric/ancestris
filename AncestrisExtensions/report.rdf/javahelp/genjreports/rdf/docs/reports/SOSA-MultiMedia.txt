###############################################
#
# Multi media objects for ancestors
# an optional filter turns the list into a check for saved certificates.
#
# _SOSA properties must have been generated before conversion.
#       Method 2 sorts properly:
#       1) View - lists and reports - tool box
#              choose tool to run: generation of sosa numbers
#       2) Tools - gedcom - regenerate sosa numbers
#       
#
###############################################
SELECT 
  (str(?id) as ?ID)
  ?sosa
  ?name 
  ?event 
  ?file
{
  ### shared by all the union parts

  ?a p:id    ?id; 
     p:NAME  [rdfs:label ?name];
     p:_SOSA [rdfs:label ?sosa].   

  ### just ancestors, not their decendants
  
  FILTER ( ! fn:contains(?sosa,"-") )

  ### objects at top level and at certain event types
  {
    ?a p:OBJE ?o. 
    ?o p:FILE [rdfs:label ?file].
    LET (?event := '-')
  } UNION {
    ?a p:BIRT ?e.
    OPTIONAL {
      ?e p:OBJE ?o. 
      ?o p:FILE [rdfs:label ?file].
    }
    LET (?event := 'birth')
  } UNION {
    ?a p:DEAT ?e.
    OPTIONAL {
      ?e p:OBJE ?o. 
      ?o p:FILE [rdfs:label ?file].
    }
    LET (?event := 'death')
  } UNION {
    ?a p:FAMS ?f.
    OPTIONAL {
      ?f p:OBJE ?o. 
      ?o p:FILE [rdfs:label ?file].
    }
    LET (?event := 'family')
  } UNION {
    ?a p:FAMS ?f.
    ?f p:MARR ?m. 
    OPTIONAL {
      ?m p:OBJE ?o. 
      ?o p:FILE [rdfs:label ?file].
    }
    LET (?event := 'mariage')
  }

  ### prevent duplicates in case GIVN and SURN are stored separately

  FILTER( fn:contains(?name,'/')  )

  ### OPTIONAL: are events backed by a saved certificate?

  #FILTER( !bound(?file) || fn:contains(?file,'/familysearch/') )
}
ORDER BY ?sosa ?event