package ancestris.modules.gedcom.gedcomvalidate;

import java.util.prefs.Preferences;
import org.openide.util.NbPreferences;

final class GedcomValidateOptionsPanel extends javax.swing.JPanel {

    private final GedcomValidateOptionsPanelController controller;

    GedcomValidateOptionsPanel(GedcomValidateOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        isExtramaritalValidCheckBox = new javax.swing.JCheckBox();
        maxLifeLabel = new javax.swing.JLabel();
        isOrderDiscretionaryCheckBox = new javax.swing.JCheckBox();
        isUnderscoreValidCheckBox = new javax.swing.JCheckBox();
        isRelaxedPlaceFormatCheckBox = new javax.swing.JCheckBox();
        isPrivateValueValidCheckBox = new javax.swing.JCheckBox();
        isEmptyValueValidCheckBox = new javax.swing.JCheckBox();
        isFileNotFoundValidCheckBox = new javax.swing.JCheckBox();
        maxAgeBAPMLabel = new javax.swing.JLabel();
        minAgeMARRLabel = new javax.swing.JLabel();
        minAgeFatherLabel = new javax.swing.JLabel();
        minAgeMotherLabel = new javax.swing.JLabel();
        maxAgeMotherLabel = new javax.swing.JLabel();
        minAgeRETILabel = new javax.swing.JLabel();
        maxLifeFormattedTextField = new javax.swing.JFormattedTextField();
        maxAgeBAPMFormattedTextField = new javax.swing.JFormattedTextField();
        minAgeMARRFormattedTextField = new javax.swing.JFormattedTextField();
        minAgeFatherFormattedTextField = new javax.swing.JFormattedTextField();
        minAgeMotherFormattedTextField = new javax.swing.JFormattedTextField();
        maxAgeMotherFormattedTextField = new javax.swing.JFormattedTextField();
        minAgeRETIFormattedTextField = new javax.swing.JFormattedTextField();
        isSameSexFamValid = new javax.swing.JCheckBox();
        yearRangeLabel = new javax.swing.JLabel();
        minYear = new javax.swing.JFormattedTextField();
        maxYear = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(isExtramaritalValidCheckBox, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "isExtramaritalValid")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(maxLifeLabel, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "maxLife")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(isOrderDiscretionaryCheckBox, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "isOrderDiscretionary")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(isUnderscoreValidCheckBox, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "isUnderscoreValid")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(isRelaxedPlaceFormatCheckBox, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "isRelaxedPlaceFormat")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(isPrivateValueValidCheckBox, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "isPrivateValueValid")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(isEmptyValueValidCheckBox, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "isEmptyValueValid")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(isFileNotFoundValidCheckBox, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "isFileNotFoundValid")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(maxAgeBAPMLabel, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "maxAgeBAPM")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(minAgeMARRLabel, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "minAgeMARR")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(minAgeFatherLabel, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "minAgeFather")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(minAgeMotherLabel, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "minAgeMother")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(maxAgeMotherLabel, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "maxAgeMother")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(minAgeRETILabel, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "minAgeRETI")); // NOI18N

        maxLifeFormattedTextField.setColumns(3);
        maxLifeFormattedTextField.setText("000");

        maxAgeBAPMFormattedTextField.setColumns(3);
        maxAgeBAPMFormattedTextField.setText("000");

        minAgeMARRFormattedTextField.setText("000");

        minAgeFatherFormattedTextField.setColumns(3);
        minAgeFatherFormattedTextField.setText("000");

        minAgeMotherFormattedTextField.setColumns(3);
        minAgeMotherFormattedTextField.setText("000");

        maxAgeMotherFormattedTextField.setColumns(3);
        maxAgeMotherFormattedTextField.setText("000");

        minAgeRETIFormattedTextField.setColumns(3);
        minAgeRETIFormattedTextField.setText("000");

        org.openide.awt.Mnemonics.setLocalizedText(isSameSexFamValid, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "GedcomValidateOptionsPanel.isSameSexFamValid.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(yearRangeLabel, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "GedcomValidateOptionsPanel.yearRangeLabel.text")); // NOI18N

        minYear.setColumns(3);
        minYear.setText(org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "GedcomValidateOptionsPanel.minYear.text")); // NOI18N

        maxYear.setColumns(3);
        maxYear.setText(org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "GedcomValidateOptionsPanel.maxYear.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(GedcomValidateOptionsPanel.class, "GedcomValidateOptionsPanel.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(isFileNotFoundValidCheckBox)
                    .addComponent(isEmptyValueValidCheckBox)
                    .addComponent(isPrivateValueValidCheckBox)
                    .addComponent(isRelaxedPlaceFormatCheckBox)
                    .addComponent(isUnderscoreValidCheckBox)
                    .addComponent(isOrderDiscretionaryCheckBox)
                    .addComponent(isExtramaritalValidCheckBox)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(maxLifeFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxLifeLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(minAgeFatherFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minAgeFatherLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(minAgeMotherFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minAgeMotherLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(maxAgeMotherFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxAgeMotherLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(minAgeRETIFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minAgeRETILabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(maxAgeBAPMFormattedTextField)
                            .addComponent(minAgeMARRFormattedTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxAgeBAPMLabel)
                            .addComponent(minAgeMARRLabel)))
                    .addComponent(isSameSexFamValid)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(yearRangeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isExtramaritalValidCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(isSameSexFamValid)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxLifeFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxLifeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(isOrderDiscretionaryCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(isUnderscoreValidCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(isRelaxedPlaceFormatCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(isPrivateValueValidCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(isEmptyValueValidCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(isFileNotFoundValidCheckBox)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxAgeBAPMFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxAgeBAPMLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minAgeMARRLabel)
                    .addComponent(minAgeMARRFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minAgeFatherLabel)
                    .addComponent(minAgeFatherFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minAgeMotherLabel)
                    .addComponent(minAgeMotherFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxAgeMotherLabel)
                    .addComponent(maxAgeMotherFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minAgeRETILabel)
                    .addComponent(minAgeRETIFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearRangeLabel)
                    .addComponent(minYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        Preferences modulePreferences = NbPreferences.forModule(GedcomValidate.class);
        isEmptyValueValidCheckBox.setSelected(modulePreferences.getBoolean("isEmptyValueValid", true));
        isExtramaritalValidCheckBox.setSelected(modulePreferences.getBoolean("isExtramaritalValid", true));
        isFileNotFoundValidCheckBox.setSelected(modulePreferences.getBoolean("isFileNotFoundValid", true));
        isOrderDiscretionaryCheckBox.setSelected(modulePreferences.getBoolean("isOrderDiscretionary", true));
        isPrivateValueValidCheckBox.setSelected(modulePreferences.getBoolean("isPrivateValueValid", true));
        isRelaxedPlaceFormatCheckBox.setSelected(modulePreferences.getBoolean("isRelaxedPlaceFormat", false));
        isUnderscoreValidCheckBox.setSelected(modulePreferences.getBoolean("isUnderscoreValid", true));
        isSameSexFamValid.setSelected(modulePreferences.getBoolean("isSameSexFamValid", false));
        maxAgeBAPMFormattedTextField.setValue(modulePreferences.getInt("maxAgeBAPM", 120));
        maxAgeMotherFormattedTextField.setValue(modulePreferences.getInt("maxAgeMother", 48));
        maxLifeFormattedTextField.setValue(modulePreferences.getInt("maxLife", 120));
        minAgeFatherFormattedTextField.setValue(modulePreferences.getInt("minAgeFather", 14));
        minAgeMARRFormattedTextField.setValue(modulePreferences.getInt("minAgeMARR", 12));
        minAgeMotherFormattedTextField.setValue(modulePreferences.getInt("minAgeMother", 10));
        minAgeRETIFormattedTextField.setValue(modulePreferences.getInt("minAgeRETI", 30));
        minYear.setValue(GedcomValidateOptions.getInstance().getMinYear());
        maxYear.setValue(GedcomValidateOptions.getInstance().getMaxYear());
    }

    void store() {
        Preferences modulePreferences = NbPreferences.forModule(GedcomValidate.class);
        modulePreferences.putBoolean("isEmptyValueValid", isEmptyValueValidCheckBox.isSelected());
        modulePreferences.putBoolean("isExtramaritalValid", isExtramaritalValidCheckBox.isSelected());
        modulePreferences.putBoolean("isFileNotFoundValid", isFileNotFoundValidCheckBox.isSelected());
        modulePreferences.putBoolean("isOrderDiscretionary", isOrderDiscretionaryCheckBox.isSelected());
        modulePreferences.putBoolean("isPrivateValueValid", isPrivateValueValidCheckBox.isSelected());
        modulePreferences.putBoolean("isRelaxedPlaceFormat", isRelaxedPlaceFormatCheckBox.isSelected());
        modulePreferences.putBoolean("isUnderscoreValid", isUnderscoreValidCheckBox.isSelected());
        modulePreferences.putBoolean("isSameSexFamValid", isSameSexFamValid.isSelected());
        modulePreferences.putInt("maxAgeBAPM", (Integer) maxAgeBAPMFormattedTextField.getValue());
        modulePreferences.putInt("maxAgeMother", (Integer) maxAgeMotherFormattedTextField.getValue());
        modulePreferences.putInt("maxLife", (Integer) maxLifeFormattedTextField.getValue());
        modulePreferences.putInt("minAgeFather", (Integer) minAgeFatherFormattedTextField.getValue());
        modulePreferences.putInt("minAgeMARR", (Integer) minAgeMARRFormattedTextField.getValue());
        modulePreferences.putInt("minAgeMother", (Integer) minAgeMotherFormattedTextField.getValue());
        modulePreferences.putInt("minAgeRETI", (Integer) minAgeRETIFormattedTextField.getValue());
        GedcomValidateOptions.getInstance().setMinYear((Integer) minYear.getValue());
        GedcomValidateOptions.getInstance().setMaxYear((Integer) maxYear.getValue());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox isEmptyValueValidCheckBox;
    private javax.swing.JCheckBox isExtramaritalValidCheckBox;
    private javax.swing.JCheckBox isFileNotFoundValidCheckBox;
    private javax.swing.JCheckBox isOrderDiscretionaryCheckBox;
    private javax.swing.JCheckBox isPrivateValueValidCheckBox;
    private javax.swing.JCheckBox isRelaxedPlaceFormatCheckBox;
    private javax.swing.JCheckBox isSameSexFamValid;
    private javax.swing.JCheckBox isUnderscoreValidCheckBox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JFormattedTextField maxAgeBAPMFormattedTextField;
    private javax.swing.JLabel maxAgeBAPMLabel;
    private javax.swing.JFormattedTextField maxAgeMotherFormattedTextField;
    private javax.swing.JLabel maxAgeMotherLabel;
    private javax.swing.JFormattedTextField maxLifeFormattedTextField;
    private javax.swing.JLabel maxLifeLabel;
    private javax.swing.JFormattedTextField maxYear;
    private javax.swing.JFormattedTextField minAgeFatherFormattedTextField;
    private javax.swing.JLabel minAgeFatherLabel;
    private javax.swing.JFormattedTextField minAgeMARRFormattedTextField;
    private javax.swing.JLabel minAgeMARRLabel;
    private javax.swing.JFormattedTextField minAgeMotherFormattedTextField;
    private javax.swing.JLabel minAgeMotherLabel;
    private javax.swing.JFormattedTextField minAgeRETIFormattedTextField;
    private javax.swing.JLabel minAgeRETILabel;
    private javax.swing.JFormattedTextField minYear;
    private javax.swing.JLabel yearRangeLabel;
    // End of variables declaration//GEN-END:variables
}
