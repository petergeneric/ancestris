#
name=Grafische leeftijdpiramide
#
info=<h1><center>Leeftijdpiramide</center></h1>\n<p>Toont demografische grafieken voor alle personen in een Gedcom-bestand.\nElke grafiek geeft gegevens weer voor een ander type gebeurtenis.</p>\n<p><center><img src="ReportDemographySample.gif"></center></p>\n<h2>Toelichting bij sommige grafieken</h2>\n<ul>\n<li><strong>Leeftijd</strong> De leeftijd waarop personen zijn overleden.\n Normaal gesproken zou dat een omgekeerde piramide moeten zijn (afgezien van de grote basis vanwege hoge kindersterfte).</li>\n<li><strong>Leeftijd waarop een ouder stierf</strong>\n Meestal is de piramide onderaan breder voor vrouwen omdat ze stierven bij een geboorte of bij de geboorte van een jongere broer of zus.</li>\n</ul>\n<h2>De wiskundige details</h2>\n<p><a href="ReportDemography.java">ReportDemography.java</a> is de meest betrouwbare bron om uit te zoeken wat er precies wordt geteld.\nPer grafiek vind je zoiets als:</p>\n<pre> new ...Analyser (..., ..., translate(...)) &\#123;<br />\naddFact (entity) &\#123;<br /> ...\n<br />addAge (individual, event);<br />}\n<br /> }</pre>\n<p><em>vertaald</em> haalt het label voor het tabblad en de Y-as op van <a href="ReportDemography.properties">ReportDemography.properties</a>.<br />\n<em>addFact</em> wordt uitgevoerd per entiteit.<br />\nDe <em>entiteit</em> is een familie of een persoon.<br />\n<em>addAge</em> en zijn varianten tellen eigenlijk iets.<br />\nDe <em>persoon</em> is ofwel een familielid, of de entiteit als het een natuurlijke persoon is, of een naast familielid van de entiteit.</p>\n<p>Hou er rekening mee wanneer de leeftijd van een kind wordt berekend, het eventuele recente overlijden wordt genegeerd.</p>\n<h2>Nog een grafiek toevoegen</h2>\n<p>Dupliceer en pas de analyser aan die in de buurt komt van uw wensen. Gebruik het juiste hulpprogrammarapport om de rapportklassen te compileren en opnieuw te laden.\n De nieuwe versie wordt actief nadat de hele applicatie opnieuw is opgestart, of gebruik de knop om rapportklassen opnieuw te laden.</p>\n<p>Merk op dat <em>try...catch</em> entiteiten of gebeurtenissen overslaat in het geval dat vereiste eigenschappen of datums niet beschikbaar zijn, anders zou het rapport crashen.\nSoms is \u00e9\u00e9n grote catch al voldoende. Om onnodig overslaan te voorkomen, hebt je misschien meer catchen nodig: genest en/of een na de ander.</p>\n<p>Voorbeeld om een \u200b\u200bander type datum te krijgen:</p>\n<pre> PropertyDate date = (PropertyDate)indi.getProperty(new TagPath("INDI:NATU:DATE"));</pre>\n<p>Bekijk de bewerkingsweergave in GedCom-modus om een \u200b\u200bTagPath samen te stellen.</p>\n<p>Methoden om relaties te volgen</p>\n<pre> Indi[] x = indi.getOlderSiblings();</pre>\n<pre> Indi[] x = indi.getYoungerSiblings();</pre>\n<pre> Indi[] x = indi.getBialogicalFather();</pre>\n<pre> Indi[] x = indi.getBialogicalMother();</pre>\n<pre> Indi[] x = indi.getSiblings(true); // voeg mij toe of niet</pre>\n<pre> Indi[] x = fam.getChildren();</pre>\n<pre> Indi[] x = fam.getChildren(true); // gesorteerd of niet</pre>\n<pre> Indi[] x = fam.getPartners();</pre>\n<pre> Indi x = fam.getHusband();</pre>\n<pre> Indi x = fam.getWife();</pre>\n<pre> Indi x = fam.getOtherSpouse(indi);\n<pre> Fam[] x = indi.getFamiliesWhereChild();</pre>\n<pre> Fam[] x = indi.getFamiliesWhereSpouse();</pre>\n<pre> Fam x = indi.getFamilyWhereBiologicalChild();</pre>\n
#
title=Bevolkingspiramiden voor {0}
ageGroupSize=Grootte van een leeftijdsgroep:
men=Mannen
women=Vrouwen
fathers=Vaders
mothers=Moeders
ageAtChildsBirth=leeftijd bij de geboorte van een kind
ageAtFirstMariage=leeftijd bij het eerste huwelijk
ageAtParentsDeath=leeftijd wanneer een ouder overleed
ageOfYoungestChildLeftBehind=leeftijd van de jongste bij overlijden van een ouder
ageAtDivorce=leeftijd bij scheiding
ageOfOldestWhenYoungestWasBorn=leeftijd van oudste bij geboorte jongste
ageOfYoungestOrphan=leeftijd van de jongste bij het overlijden van de 2e ouder
yearsSinceDeathOfSpouse=jaren dat een partner langer leefde
