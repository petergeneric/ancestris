
name = Demografia


info = <h1><center>Piramidy demograficzne</center></h1> \n\
 <p>Pokazuje wykres demograficzny dla wszystkich os\u00f3b z pliku GEDCOM. \n\
 Ka\u017cdy wykres pokazuje dane dla r\u00f3\u017cnych zdarze\u0144.</p> \n\
 <p><center><img src="ReportDemographySample.gif"></center></p> \n\
 <h2>Remarks for some of the charts</h2> \n\
 <ul> \n\
   <li><strong>Wiek</strong> \n\
   Wiek os\u00f3b zmar\u0142ych. \n\
   Zwykle powinna to by\u0107 odwr\u00f3cona piramida (na odwr\u00f3d w przypadku do \
   wysokiej \u015bmiertelno\u015bci niemowl\u0105t).</li> \n\
   <li><strong>Wiek, kiedy umiera rodzic</strong> \n\
   Zazwyczaj piramida jest szersza u do\u0142u dla kobiet, poniewa\u017c umiera\u0142y \
   podczas porodu lub po urodzeniu m\u0142odszego brata lub siostry.</li> \n\
 </ul> \n\
 <h2>Dane matematyczne</h2> \n\
 <p><a href="ReportDemography.java">ReportDemography.java</a> \n\
 jest najbardziej wiarygodnym \u017ar\u00f3d\u0142em, aby dowiedzie\u0107 co by\u0142o liczone. \n\
 Dla wykresu znajdziesz co\u015b takiego:</p> \n\
 <pre>  new ...Analyzer (..., ..., translate(...)) &#123; \n\
  <br />    addFact (entity) &#123; \n\
  <br />     ... \n\
  <br />     addAge (individual, event); \n\
  <br />   } \n\
  <br /> }</pre><p> \n\
 <em>translate</em> pobiera etykiet\u0119 dla zak\u0142adki i osi Y z \
 <a href="ReportDemography.properties">ReportDemography.properties</a>.<br /> \n\
 <em>addFact</em> jest wykonywane dla ka\u017cdego wpisu.<br /> \n\
 <em>entity</em> jest rodzin\u0105 osoby.<br /> \n\
 <em>addAge</em> i jego odmiany co\u015b zliczaj\u0105.<br /> \n\
 <em>individual</em> jest albo cz\u0142onkiem rodziny, \n\
 albo wpisem, je\u017celi jest osob\u0105 fizyczn\u0105, lub bliskim krewnym wpisu.</p> \n\
 <p>Zauwa\u017c, \u017ce kiedy wiek dziecka jest obliczany, jego ewentualny zgon jest ignorowany.</p> \n\
 <h2>Dodaj kolejny wykres</h2> \n\
 <p>Po prostu zduplikuj i ustaw analiz\u0119 w spos\u00f3b w jaki chcesz. \n\
 U\u017cyj odpowiednich narz\u0119dzi raportu do stworzenia klas raportu. \n\
 Nowa wersja b\u0119dzie aktywna po restarcie ca\u0142ej aplikacji,  \n\
 lub u\u017cyj przycisku do prze\u0142adowania klas raportu.</p> \n\
 <p>Prosz\u0119 zauwa\u017cy\u0107, \u017ce <em>try...catch</em> pomija wpisy lub zdarzenia  \n\
 w przypadku, gdy wymagane w\u0142a\u015bciwo\u015bci lub daty nie s\u0105 dost\u0119pne, w przeciwnym razie raport nie powstanie. \n\
 Czasami jedno wielkie przechwycenie wystarczy. Aby unikn\u0105\u0107 niepotrzebnych przeskok\u00f3w, \n\
 mo\u017ce trzeba wi\u0119cej przechwyce\u0144: zagnie\u017cd\u017cone i/lub jeden po drugim.    \n\
 </p><p>Przyk\u0142ad aby uzyska\u0107 inny typ daty:</p> \n\
 <pre>  PropertyDate date = (PropertyDate)indi.getProperty(new TagPath("INDI:NATU:DATE"));</pre> \n\
 <p>Zbadaj widok edycji w trybie GEDCOM aby zebra\u0107 TagPath. \n\
 </p><p>Metody \u015bledzenia relacji</p> \n\
 <pre>  Indi[] x = indi.getOlderSiblings();</pre> \n\
 <pre>  Indi[] x = indi.getYoungerSiblings();</pre> \n\
 <pre>  Indi[] x = indi.getBialogicalFather();</pre> \n\
 <pre>  Indi[] x = indi.getBialogicalMother();</pre> \n\
 <pre>  Indi[] x = indi.getSiblings(true); // include me or not</pre> \n\
 <pre>  Indi[] x = fam.getChildren();</pre> \n\
 <pre>  Indi[] x = fam.getChildren(true); // sorted or not</pre> \n\
 <pre>  Indi[] x = fam.getPartners();</pre> \n\
 <pre>  Indi   x = fam.getHusband();</pre> \n\
 <pre>  Indi   x = fam.getWife();</pre> \n\
 <pre>  Indi   x = fam.getOtherSpouse(indi); \n\
 <pre>  Fam[]  x = indi.getFamiliesWhereChild();</pre>  \n\
 <pre>  Fam[]  x = indi.getFamiliesWhereSpouse();</pre> \n\
 <pre>  Fam    x = indi.getFamilyWhereBiologicalChild();</pre> 

title = Piramida demograficzna dla {0}
ageGroupSize = Rozmiar grup wiekowych:
men      = M\u0119\u017cczyzna
women    = Kobieta
fathers  = Ojcowie
mothers  = Matki
ageAtChildsBirth  = wiek, kiedy urodzi\u0142o si\u0119 dziecko
ageAtFirstMariage = wiek, kiedy o\u017ceni\u0142 si\u0119 po raz pierwszy
ageAtParentsDeath = wiek, kiedy rodzic zmar\u0142
ageOfYoungestChildLeftBehind = wiek najm\u0142odszego dziecka, kiedy rodzic zmar\u0142
ageAtDivorce = wiek w momencie rozwodu
ageOfOldestWhenYoungestWasBorn = wiek najstarszego, kiedy urodzi\u0142 si\u0119 najm\u0142odszy
ageOfYoungestOrphan = wiek najm\u0142odszego, kiedy drugi rodzic zmar\u0142
yearsSinceDeathOfSpouse = lata, kt\u00f3re ma\u0142\u017conek prze\u017cy\u0142
