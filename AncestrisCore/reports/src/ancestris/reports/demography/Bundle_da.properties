
name = Demografi

info  = <h1><center>Alderspyramider</center></h1> \n\
 <p>Viser demografiske diagrammer for alle personer i en gedcomfil. \n\
 Hvert diagram viser data for en anden type begivenhed. \n\
 </p> \n\
 <p> \n\
 <center><img src="ReportDemographySample.gif"></center> \n\
 </p> \n\
 <h2>Bem\u00e6rkninger til nogle af diagrammerne</h2> \n\
 <ul> \n\
   <li><strong>Alder</strong> \n\
   Alder ved personens d\u00f8d. \n\
   Normalt vil det v\u00e6re en omvendt pyramide (bortset fra en  \n\
   stor basis grundet h\u00f8j b\u00f8rned\u00f8delighed).</li> \n\
   <li><strong>Alder da for\u00e6ldre d\u00f8de</strong> \n\
   Denne pyramide er normalt bredere i bunden p\u00e5 kvindesiden, da m\u00f8dre d\u00f8de ved f\u00f8dslen \
   eller ved f\u00f8dslen af en yngre bror eller s\u00f8ster.</li> \n\
 </ul> \n\
 <h2>Matematiske detaljer</h2> \n\
 <p><a href="ReportDemography.java">ReportDemography.java</a> \n\
 er den mest p\u00e5lidelige kilde til at finde ud af, hvad der pr\u00e6cist t\u00e6lles. \n\
 Med diagram findes noget i retning af:</p> \n\
 <pre>  new ...Analyzer (..., ..., translate(...)) &#123; \n\
  <br />    addFact (enhed) &#123; \n\
  <br />     ... \n\
  <br />     addAge (person, begivenhed); \n\ 
  <br />   } \n\
  <br /> }</pre><p> \n\
 <em>translate</em> henter m\u00e6rket for fanen og Y-aksen fra \
 <a href="ReportDemography.properties">ReportDemography.properties</a>.<br /> \n\
 <em>addFact</em> udf\u00f8res for hver enhed.<br /> \n\
 <em>Enheden</em> er en familie eller person.<br /> \n\
 <em>addAge</em> og dets varianter t\u00e6lle reelt noget.<br /> \n\
 <em>Personen</em> er enten et medlem af familien, \n\
 eller enheden, hvis det er en person, eller en n\u00e6r sl\u00e6gtning til enheden. \n\
 </p> \n\
 <p>Bem\u00e6rk at n\u00e5r et barns alder beregnes, ignoreres dets eventuelle d\u00f8d pt.</p> \n\
 <h2>Tilf\u00f8j endnu et diagram</h2> \n\
 <p>Kopier og juster en analyzer, der ligner det, du \u00f8nsker. \n\
 Brug den passende v\u00e6rkt\u00f8js-rapport til at compilere og genindl\u00e6se rapport-klasserne. \n\
 Den nye version er f\u00f8rst aktiv, n\u00e5r hele programmet er genstartet,  \n\
 eller brug knappen Genindl\u00e6s rapportklasser. \n\
 </p> \n\
 <p>Bem\u00e6rk at <em>pr\u00f8v...fang</em> springer over enheder eller begivenheder  \n\
 hvis de n\u00f8dvendige egenskaber eller datoer ikke er til r\u00e5dighed, ellers ville rapporten g\u00e5 ned. \n\
 Nogle gange er en stor catch nok. For at undg\u00e5 un\u00f8dige skips, \n\
 har du m\u00e5ske brug for flere catches: indeni og/eller efter hinanden.    \n\
 </p> \n\
 <p>Eksempel til at finde en anden type date:</p> \n\
 <pre>  PropertyDate date = (PropertyDate)indi.getProperty(new TagPath("INDI:NATU:DATE"));</pre> \n\
 <p>Se edit-visning i GedCom-modus for at f\u00e5 en TagPath.  \n\
 </p> \n\
 <p>Methoder til f\u00f8lgende forhold</p> \n\
 <pre>  Indi[] x = indi.getOlderSiblings();</pre> \n\
 <pre>  Indi[] x = indi.getYoungerSiblings();</pre> \n\
 <pre>  Indi[] x = indi.getBialogicalFather();</pre> \n\
 <pre>  Indi[] x = indi.getBialogicalMother();</pre> \n\
 <pre>  Indi[] x = indi.getSiblings(true); // medtag mig eller ej</pre> \n\
 <pre>  Indi[] x = fam.getChildren();</pre> \n\
 <pre>  Indi[] x = fam.getChildren(true); // sorteret eller ej</pre> \n\
 <pre>  Indi[] x = fam.getPartners();</pre> \n\
 <pre>  Indi   x = fam.getHusband();</pre> \n\
 <pre>  Indi   x = fam.getWife();</pre> \n\
 <pre>  Indi   x = fam.getOtherSpouse(indi); \n\
 <pre>  Fam[]  x = indi.getFamiliesWhereChild();</pre>  \n\
 <pre>  Fam[]  x = indi.getFamiliesWhereSpouse();</pre> \n\
 <pre>  Fam    x = indi.getFamilyWhereBiologicalChild();</pre> 


title = Alderspyramide for {0}
ageGroupSize = St\u00f8rrelse af aldersgruppe :
men      = M\u00e6nd
women    = Kvinder
fathers  = F\u00e6dre
mothers  = M\u00f8dre
ageAtChildsBirth  = alder ved et barns f\u00f8dsel
ageAtFirstMariage = alder ved f\u00f8rste vielse
ageAtParentsDeath = alder ved en for\u00e6ldres d\u00f8d
ageOfYoungestChildLeftBehind = yngste barns alder ved en for\u00e6ldres d\u00f8d
ageAtDivorce = alder ved skilsmisse
ageOfOldestWhenYoungestWasBorn = den \u00e6ldstes alder ved den yngstes f\u00f8dsel
ageOfYoungestOrphan = den yngstes alder ved den 2. for\u00e6ldres d\u00f8d
yearsSinceDeathOfSpouse = \u00e5r som en af partnerne lever l\u00e6ngere
