/*
 * Ancestris - http://www.ancestris.org
 * 
 * Copyright 2011 Ancestris
 * 
 * Author: Daniel Andre (daniel@ancestris.org).
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
package ancestris.modules.beans;

import java.util.ArrayList;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import javax.swing.JTextField;

public final class APlaceFormatBean extends JPanel {

    private String tag = "";
    private final JTextField JURIS[];
    private final JCheckBox SHOW_JURIS[];

    /**
     * Get the value of tag
     *
     * @return the value of tag
     */
    public String getTag() {
        return tag;
    }

    /**
     * Set the value of tag
     *
     * @param tag new value of tag
     */
    public void setTag(String tag) {
        this.tag = tag;
        repaint();
    }

    /** Creates new form NewGedcomVisualPanel2 */
    public APlaceFormatBean() {
        initComponents();
        JURIS = new JTextField[]{jtJuri1, jtJuri2, jtJuri3, jtJuri4, jtJuri5, jtJuri6, jtJuri7, jtJuri8};
        SHOW_JURIS = new JCheckBox[]{cbJuri1, cbJuri2, cbJuri3, cbJuri4, cbJuri5, cbJuri6, cbJuri7, cbJuri8};
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtJuri6 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtJuri5 = new javax.swing.JTextField();
        cbSpaces = new javax.swing.JCheckBox();
        jtJuri8 = new javax.swing.JTextField();
        cbJuri8 = new javax.swing.JCheckBox();
        jtJuri7 = new javax.swing.JTextField();
        jtJuri3 = new javax.swing.JTextField();
        cbJuri1 = new javax.swing.JCheckBox();
        jtJuri4 = new javax.swing.JTextField();
        cbJuri2 = new javax.swing.JCheckBox();
        jtJuri1 = new javax.swing.JTextField();
        cbJuri3 = new javax.swing.JCheckBox();
        jtJuri2 = new javax.swing.JTextField();
        cbJuri4 = new javax.swing.JCheckBox();
        cbJuri5 = new javax.swing.JCheckBox();
        cbJuri6 = new javax.swing.JCheckBox();
        cbJuri7 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtDisplayFormat = new javax.swing.JTextField();
        jtSortOrder = new javax.swing.JTextField();

        jtJuri6.setText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtJuri6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel12.text")); // NOI18N
        jLabel12.setToolTipText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel12.toolTipText")); // NOI18N

        jtJuri5.setText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtJuri5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbSpaces, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.cbSpaces.text")); // NOI18N
        cbSpaces.setToolTipText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.cbSpaces.toolTipText")); // NOI18N

        jtJuri8.setText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtJuri8.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbJuri8, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.cbJuri8.text")); // NOI18N

        jtJuri7.setText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtJuri7.text")); // NOI18N

        jtJuri3.setText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtJuri3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbJuri1, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.cbJuri1.text")); // NOI18N

        jtJuri4.setText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtJuri4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbJuri2, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.cbJuri2.text")); // NOI18N

        jtJuri1.setText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtJuri1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbJuri3, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.cbJuri3.text")); // NOI18N

        jtJuri2.setText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtJuri2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbJuri4, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.cbJuri4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbJuri5, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.cbJuri5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbJuri6, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.cbJuri6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbJuri7, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.cbJuri7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel1.text")); // NOI18N
        jLabel1.setToolTipText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel1.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel8.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel9.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jLabel10.text")); // NOI18N

        jtDisplayFormat.setText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtDisplayFormat.text")); // NOI18N
        jtDisplayFormat.setToolTipText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtDisplayFormat.toolTipText")); // NOI18N

        jtSortOrder.setText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtSortOrder.text")); // NOI18N
        jtSortOrder.setToolTipText(org.openide.util.NbBundle.getMessage(APlaceFormatBean.class, "APlaceFormatBean.jtSortOrder.toolTipText")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbSpaces, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtJuri1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtJuri3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtJuri2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtJuri6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtJuri7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtJuri5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtJuri8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtJuri4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbJuri8)
                            .addComponent(cbJuri2)
                            .addComponent(cbJuri1)
                            .addComponent(cbJuri3)
                            .addComponent(cbJuri4)
                            .addComponent(cbJuri5)
                            .addComponent(cbJuri6)
                            .addComponent(cbJuri7)
                            .addComponent(jLabel12)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtSortOrder, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(jtDisplayFormat, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbJuri1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtJuri1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtJuri2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(cbJuri2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtJuri3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(cbJuri3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtJuri4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(cbJuri4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtJuri5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(cbJuri5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbJuri6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtJuri6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtJuri7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(cbJuri7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtJuri8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbJuri8))
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(cbSpaces)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtSortOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jtDisplayFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbJuri1;
    private javax.swing.JCheckBox cbJuri2;
    private javax.swing.JCheckBox cbJuri3;
    private javax.swing.JCheckBox cbJuri4;
    private javax.swing.JCheckBox cbJuri5;
    private javax.swing.JCheckBox cbJuri6;
    private javax.swing.JCheckBox cbJuri7;
    private javax.swing.JCheckBox cbJuri8;
    private javax.swing.JCheckBox cbSpaces;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jtDisplayFormat;
    private javax.swing.JTextField jtJuri1;
    private javax.swing.JTextField jtJuri2;
    private javax.swing.JTextField jtJuri3;
    private javax.swing.JTextField jtJuri4;
    private javax.swing.JTextField jtJuri5;
    private javax.swing.JTextField jtJuri6;
    private javax.swing.JTextField jtJuri7;
    private javax.swing.JTextField jtJuri8;
    private javax.swing.JTextField jtSortOrder;
    // End of variables declaration//GEN-END:variables

    public String getJurisdictions() {
        StringBuilder sb = new StringBuilder();
        StringBuilder emptyJuri = new StringBuilder();
        final String SEP = cbSpaces.isSelected() ? ", " : ",";

        for (JTextField juri : JURIS) {
            if (juri.getText().trim().isEmpty()) {
                emptyJuri.append(SEP);
                continue;
            }
            if (emptyJuri.length() != 0) {
                sb.append(emptyJuri);
                emptyJuri = new StringBuilder();
            }
            if (sb.length() != 0) {
                sb.append(SEP);
            }
            sb.append(juri.getText().trim());
        }
        return sb.toString();
    }

    public void setJurisdictions(String format) {
        String juris[] = format.split(",");

        for (JTextField juri : JURIS) {
            juri.setText("");
        }
        for (int i = 0; i < Math.min(juris.length, JURIS.length); i++) {
            JURIS[i].setText(juris[i].trim());
        }

        for (int i = 0; i < JURIS.length; i++) {
            if (i < juris.length) {
                JURIS[i].setText(juris[i].trim());
                SHOW_JURIS[i].setSelected(juris[i].trim().length() == 0);
            } else {
                JURIS[i].setText("");
                SHOW_JURIS[i].setSelected(false);
            }
        }
    }

    public Boolean[] getShowJuridictions() {
        ArrayList<Boolean> showJuri = new ArrayList<Boolean>();

        for (int i = 0; i < JURIS.length; i++) {
            showJuri.add(SHOW_JURIS[i].isSelected());
        }
        return showJuri.toArray(new Boolean[0]);
    }

    /**
     * Note: must be called after setJurisdictions
     * @param show
     */
    public void setShowJuridcitions(Boolean show[]) {
        for (JCheckBox showJuri : SHOW_JURIS) {
            showJuri.setSelected(true);
        }

        for (int i = 0; i < SHOW_JURIS.length; i++) {
            if (show == null) {
                SHOW_JURIS[i].setSelected(true);
            } else if (i < show.length) {
                SHOW_JURIS[i].setSelected(show[i]);
            } else {
                SHOW_JURIS[i].setSelected(false);
            }
        }
        for (int i = JURIS.length - 1; i >= 0; i--) {
            if (JURIS[i].getText().length() == 0 && i < SHOW_JURIS.length) {
                SHOW_JURIS[i].setSelected(false);
                continue;
            }
            break;
        }
    }

    public String getDisplayFormat() {
        String displayFormat = jtDisplayFormat.getText();
        if (displayFormat.length() == 0) {
            return null;
        }
        return displayFormat;
    }

    public void setDisplayFormat(String format) {
        this.jtDisplayFormat.setText(format);
    }

    public String getSortOrder() {
        return jtSortOrder.getText();
    }

    public void setSortOrder(String order) {
        this.jtSortOrder.setText(order);
    }
}
