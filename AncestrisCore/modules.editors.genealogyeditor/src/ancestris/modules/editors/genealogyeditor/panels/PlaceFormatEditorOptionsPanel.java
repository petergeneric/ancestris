package ancestris.modules.editors.genealogyeditor.panels;

import javax.swing.JComponent;

/**
 *
 * @author dominique
 */
public class PlaceFormatEditorOptionsPanel extends javax.swing.JPanel {

    private final String[] mPlaceFormat;
    private final int mPlaceOrder[];

    /**
     * Creates new form PlaceFormatEditorOptionsPanel
     */
    public PlaceFormatEditorOptionsPanel(String placeFormat[], int placeOrder[]) {
        mPlaceOrder = placeOrder;
        mPlaceFormat = new String [Math.min(8, placeFormat.length) + 1];
        
        mPlaceFormat[0] = "";
        System.arraycopy(placeFormat, 0, mPlaceFormat, 1, placeFormat.length);

        initComponents();

        JComponent gedcomFields[] = {
            hamletComboBox,
            parishComboBox,
            cityComboBox,
            zipCodeComboBox,
            geoIDComboBox,
            countyComboBox,
            stateComboBox,
            countryComboBox
        };

        for (int index = 0; index < mPlaceOrder.length; index++) {
            if (mPlaceOrder[index] > -1 && mPlaceOrder[index] + 1 < mPlaceFormat.length) {
                ((javax.swing.JComboBox) gedcomFields[index]).setSelectedIndex(mPlaceOrder[index] + 1);
            } else {
                ((javax.swing.JComboBox) gedcomFields[index]).setSelectedIndex(0);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hamletLabel = new javax.swing.JLabel();
        parishLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        zipCodeLabel = new javax.swing.JLabel();
        geoIDLabel = new javax.swing.JLabel();
        countyLabel = new javax.swing.JLabel();
        stateLabel = new javax.swing.JLabel();
        countryLabel = new javax.swing.JLabel();
        hamletComboBox = new javax.swing.JComboBox<String>();
        cityComboBox = new javax.swing.JComboBox<String>();
        geoIDComboBox = new javax.swing.JComboBox<String>();
        stateComboBox = new javax.swing.JComboBox<String>();
        parishComboBox = new javax.swing.JComboBox<String>();
        zipCodeComboBox = new javax.swing.JComboBox<String>();
        countyComboBox = new javax.swing.JComboBox<String>();
        countryComboBox = new javax.swing.JComboBox<String>();

        hamletLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(hamletLabel, org.openide.util.NbBundle.getMessage(PlaceFormatEditorOptionsPanel.class, "PlaceFormatEditorOptionsPanel.hamletLabel.text")); // NOI18N

        parishLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(parishLabel, org.openide.util.NbBundle.getMessage(PlaceFormatEditorOptionsPanel.class, "PlaceFormatEditorOptionsPanel.parishLabel.text")); // NOI18N

        cityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(cityLabel, org.openide.util.NbBundle.getMessage(PlaceFormatEditorOptionsPanel.class, "PlaceFormatEditorOptionsPanel.cityLabel.text")); // NOI18N

        zipCodeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(zipCodeLabel, org.openide.util.NbBundle.getMessage(PlaceFormatEditorOptionsPanel.class, "PlaceFormatEditorOptionsPanel.zipCodeLabel.text")); // NOI18N

        geoIDLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(geoIDLabel, org.openide.util.NbBundle.getMessage(PlaceFormatEditorOptionsPanel.class, "PlaceFormatEditorOptionsPanel.geoIDLabel.text")); // NOI18N

        countyLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(countyLabel, org.openide.util.NbBundle.getMessage(PlaceFormatEditorOptionsPanel.class, "PlaceFormatEditorOptionsPanel.countyLabel.text")); // NOI18N

        stateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(stateLabel, org.openide.util.NbBundle.getMessage(PlaceFormatEditorOptionsPanel.class, "PlaceFormatEditorOptionsPanel.stateLabel.text")); // NOI18N

        countryLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(countryLabel, org.openide.util.NbBundle.getMessage(PlaceFormatEditorOptionsPanel.class, "PlaceFormatEditorOptionsPanel.countryLabel.text")); // NOI18N

        hamletComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(mPlaceFormat));

        cityComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(mPlaceFormat));

        geoIDComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(mPlaceFormat));

        stateComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(mPlaceFormat));

        parishComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(mPlaceFormat));

        zipCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(mPlaceFormat));

        countyComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(mPlaceFormat));

        countryComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(mPlaceFormat));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hamletLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(cityLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(countyLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stateComboBox, 0, 155, Short.MAX_VALUE)
                    .addComponent(countyComboBox, 0, 155, Short.MAX_VALUE)
                    .addComponent(cityComboBox, 0, 155, Short.MAX_VALUE)
                    .addComponent(hamletComboBox, 0, 155, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(zipCodeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(geoIDLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(countryLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(parishLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(geoIDComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(zipCodeComboBox, 0, 155, Short.MAX_VALUE)
                    .addComponent(parishComboBox, 0, 155, Short.MAX_VALUE)
                    .addComponent(countryComboBox, 0, 155, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hamletLabel)
                    .addComponent(parishLabel)
                    .addComponent(hamletComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parishComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLabel)
                    .addComponent(zipCodeLabel)
                    .addComponent(cityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countyLabel)
                    .addComponent(countyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(geoIDLabel)
                    .addComponent(geoIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateLabel)
                    .addComponent(countryLabel)
                    .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cityComboBox;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JComboBox<String> countryComboBox;
    private javax.swing.JLabel countryLabel;
    private javax.swing.JComboBox<String> countyComboBox;
    private javax.swing.JLabel countyLabel;
    private javax.swing.JComboBox<String> geoIDComboBox;
    private javax.swing.JLabel geoIDLabel;
    private javax.swing.JComboBox<String> hamletComboBox;
    private javax.swing.JLabel hamletLabel;
    private javax.swing.JComboBox<String> parishComboBox;
    private javax.swing.JLabel parishLabel;
    private javax.swing.JComboBox<String> stateComboBox;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JComboBox<String> zipCodeComboBox;
    private javax.swing.JLabel zipCodeLabel;
    // End of variables declaration//GEN-END:variables

    public int[] getPlaceOrder() {
        int placeOrder[] = {
            (Integer) hamletComboBox.getSelectedIndex() - 1,
            (Integer) parishComboBox.getSelectedIndex() - 1,
            (Integer) cityComboBox.getSelectedIndex() - 1,
            (Integer) zipCodeComboBox.getSelectedIndex() - 1,
            (Integer) geoIDComboBox.getSelectedIndex() - 1,
            (Integer) countyComboBox.getSelectedIndex() - 1,
            (Integer) stateComboBox.getSelectedIndex() - 1,
            (Integer) countryComboBox.getSelectedIndex() - 1
        };
        return placeOrder;
    }
}
