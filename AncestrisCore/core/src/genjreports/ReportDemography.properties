# GenJ - GenealogyJ
#
# Message strings for the Life Expectancy Report
#
# Languages supported :
#     - english (default)
#     - german
#     - french
#     - dutch
#


author   = Nils Meier
version  = 2.0
updated  = 14 Oct 2008 by Jo Pol (variants)
category = chart
name    = Demography
name.de = Demographie
name.fr = Pyramide des Ages
name.nl = Demografie

info    = <h1><center>Demographic Pyramids</center></h1>
 <p>Shows demographic charts for all the individuals in a Gedcom file.
 Each chart displays data for a different type of event.
 </p>
 <p>
 <center><img src="ReportDemographySample.gif"></center>
 </p>
 <h2>Remarks for some of the charts</h2>
 <ul>
   <li><strong>Age</strong>
   The age when individuals deceased.
   Normally that should be an inverted pyramid (aside from a 
   large base because of high infant mortality).</li>
   <li><strong>Age when parent died</strong>
   Usualy the pyramid is wider at the bottom for women because they died at birth
   or when giving birth to a younger brother or sister.</li>
 </ul>
 <h2>The mathematical details</h2>
 <p><a href="ReportDemography.java">ReportDemography.java</a>
 is the most reliable source to find out exactly what is counted.
 Per chart you will find something like:</p>
 <pre>  new ...Analyzer (..., ..., translate(...)) &#123;
  <br>    addFact (entity) &#123;
  <br>     ...
  <br>     addAge (individual, event);
  <br>   }
  <br> }</pre><p>
 <em>translate</em> gets the label for the tab and Y-axis from
 <a href="ReportDemography.properties">ReportDemography.properties</a>.<br>
 <em>addFact</em> is executed per entity.<br>
 The <em>entity</em> is a family or individual.<br>
 <em>addAge</em> and its variants actually count something.<br>
 The <em>individual</em> is either a member of the family,
 or the entity if it is an individual, or a close relative of the entity.
 </p><p>
 Note that when a child's age is computed, its eventual death is currently ignored.</p>
 <h2>Add another chart</h2><p>
 Just duplicate and adjust an analyzer that comes close to your wishes.
 Use the appropriate utility report to compile and reload the report classes.
 The new version will become active after restarting the whole application, 
 or use the button to reload report classes.
 </p><p> 
 Note that <em>try...catch</em> skips entities or events 
 in case required properties or dates are not available, otherwise the report would crash.
 Sometimes one big catch is enough. To avoid unnecessary skips,
 you might need more catches: nested and/or one after the other.   
 </p><p>Example to get another type of date:</p>
 <pre>  PropertyDate date = (PropertyDate)indi.getProperty(new TagPath("INDI:NATU:DATE"));</pre>
 <p>Examine the edit view in GedCom mode to assemble a TagPath. 
 </p><p>Methods to follow relations</p>
 <pre>  Indi[] x = indi.getOlderSiblings();</pre>
 <pre>  Indi[] x = indi.getYoungerSiblings();</pre>
 <pre>  Indi[] x = indi.getBialogicalFather();</pre>
 <pre>  Indi[] x = indi.getBialogicalMother();</pre>
 <pre>  Indi[] x = indi.getSiblings(true); // include me or not</pre>
 <pre>  Indi[] x = fam.getChildren();</pre>
 <pre>  Indi[] x = fam.getChildren(true); // sorted or not</pre>
 <pre>  Indi[] x = fam.getPartners();</pre>
 <pre>  Indi   x = fam.getHusband();</pre>
 <pre>  Indi   x = fam.getWife();</pre>
 <pre>  Indi   x = fam.getOtherSpouse(indi);
 <pre>  Fam[]  x = indi.getFamiliesWhereChild();</pre> 
 <pre>  Fam[]  x = indi.getFamiliesWhereSpouse();</pre>
 <pre>  Fam    x = indi.getFamilyWhereBiologicalChild();</pre>

info.de = <h1><center>Alterspyramide</center></h1>
 <p>Zeigt Demographien aller Individuen in einer Gedcom-Datei.
 Es gibt Diagramme für verschiedene ereignisse.
 </p>
 <center><img src="ReportDemographySample.gif"></center>
 <h2>Bemerkungen zur einige der Diagramme</h2>
 <ul>
   <dt>Alter</dt><dd>
   Normalerweise würde man eine umgekehrte Pyramide erwarten 
   (abgesehen von einer verbreiterten Basis wg. 
   Kindersterblichkeit).
   </dd><dt>Alter beim Sterben einer der Eltern</dt><dd>
   Normalerweise ist den basis am Frauenseite verbreited 
   wegen sterben beim Geburt des Kindes, oder beim Geburt jungere Geschwisterte. 
   </dd>
 </dl>
 <h2>Den genaue Berechnungen</h2>
 <p>Was genau gezählt wird, untersuchen Sie am besten in 
 <a href="ReportDemography.java">ReportDemography.java</a>.
 Dort finden Sie pro Diagramm etwas wie:</p>
 <pre>  new ...Analyzer (..., ..., translate(...)) &#123;
  <br>    addFact (entität) &#123;
  <br>     ...
  <br>     addAge (person, ereignis);
  <br>   }
  <br> }</pre><p>
 <em>translate</em> liest den Tekst für den tab und Y-axis aus
 <a href="ReportDemography.properties">ReportDemography.properties</a>.<br>
 <em>addFact</em> wird ausgefürt pro Entität in den GedCom-datei.<br>
 Den <em>entität</em> ist eine Familie oder Person.<br>
 <em>addAge</em> und seine Varianten zählen etwas zu das Diagramm.<br>
 Den <em>person</em> ist entweder ein Mitglied der Familie,
 oder den Entität indem es ein Person ist,
 oder eine nähe Verwannte von den Personsentität.
 </p><p>
 Bermerken Sie das beim berechnen von den Alter eines Kindes
 meistens ignoriert wird ob es bereits gestorben ist.</p>
 <h2>Neue Diagramme herstellen</h2><p>
 Es braucht nur eine Kopie von ein Analyzer dem Ihre Wünsche Ähnelt.
 Die neue Version lauft erst nach neu starten von das ganze Programm,
 oder benutze den Knopf 'reports neu einladen'. 
 </p><p>
 <em>try...catch</em> macht das eine Entität oder Ereigniss ignoriert werd
 fals etwas nicht bekannt ist. Sonnst wurde das ganze Raport nicht abstürzen.
 Manchmahl reicht eine Catch.
 Manchmahl braucht es mehrere Catches (nested und/oder nach einander)
 damit keine Ereignisse unnötig ignoriert werden. 
 </p><p> Beispiel fur andere Ereignisse:</p>
 <pre>  (PropertyDate)indi.getProperty(new TagPath("INDI:NATU:DATE"))</pre>
 Shauen sie den Bearbeitunsansicht im gedcom mode für andere Ereignisse.
 </p><p>Relationen volgen:</p>
 <pre>  Indi[] x = indi.getOlderSiblings();</pre>
 <pre>  Indi[] x = indi.getYoungerSiblings();</pre>
 <pre>  Indi[] x = indi.getBialogicalFather();</pre>
 <pre>  Indi[] x = indi.getBialogicalMother();</pre>
 <pre>  Indi[] x = indi.getSiblings(true); // include me or not</pre>
 <pre>  Indi[] x = fam.getChildren();</pre>
 <pre>  Indi[] x = fam.getChildren(true); // sorted or not</pre>
 <pre>  Indi[] x = fam.getPartners();</pre>
 <pre>  Indi   x = fam.getHusband();</pre>
 <pre>  Indi   x = fam.getWife();</pre>
 <pre>  Indi   x = fam.getOtherSpouse(indi);
 <pre>  Fam[]  x = indi.getFamiliesWhereChild();</pre> 
 <pre>  Fam[]  x = indi.getFamiliesWhereSpouse();</pre>
 <pre>  Fam    x = indi.getFamilyWhereBiologicalChild();</pre>
 
info.nl = <h1><center>Demografie</center></h1>
 <p>Toont de leeftijdsverdeling van alle personen in een Gedcom bestand. 
 Er worden grafieken getoond voor verschillende soorten gebeurtenissen.
 </p> 
 <center><img src="ReportDemographySample.gif"></center>
 <h2>Toelichtingen op enkele van de grafieken</h2>
 <ul>
   <li><strong>leeftijd</strong>
   De leeftijd waarop personen overleden. Normaal gesproken is dit een vlieger
   met een brede staart wegens hoge kindersterfte.<br>
   </li><li><strong>De leeftijd wanneer een ouder overleed</strong>
   De basis van de vlieger is doorgaans breder voor vrouwen. 
   Zij stierven vaak bij de geboorte van het kind, 
   of bij de geboorte van een jonger broetje of zusje.
   </li>
 </ul>
 <h2>De exacte details</h2>
 <p><a href="ReportDemography.java">ReportDemography.java</a>
 is de meest betrouwbare bron om te achterhalen wat er precies geteld wordt.
 Per grafiek staat er zoiets als:</p>
 <pre>  new ...Analyzer (..., ..., translate(...)) &#123;
  <br>    addFact (entiteit) &#123;
  <br>     ...
  <br>     addAge (persoon, gebeurtenis);
  <br>   }
  <br> }</pre><p>
 <em>translate</em> leest de tekst voor de tab en Y-as uit
 <a href="ReportDemography.properties">ReportDemography.properties</a>.<br>
 <em>addFact</em> wordt per entiteit uit het GedCom bestand aangeroepen.<br>
 De <em>entiteit</em> is een familie of persoon.<br>
 <em>addAge</em> en zijn varianten voegen daadwerkelijk iets toe aan een grafiek.<br>
 De <em>persoon</em> is òf een lid van de familie, òf de entiteit zelf als dit een persoon is,
 òf een naaste verwant van de pesoonsentiteit.<br>
 </p><p>
 Merk op dat bij het berekenen van de leeftijd van een kind
 veelal niet bekeken wordt of het al overleden is.</p>
 <h2>Grafieken toevoegen</h2>
 <p>U hoeft alleen een geschikt analyzer te kopieren en aan te passen.
 Compileren kan met een van de hulpraporten. De nieuwe versie wordt pas actief 
 na herstarten van het hele programma, of gebruik de knop om raport klassen opnieuw te laden. 
 </p><p><em>try...catch</em> zorgt ervoor dat de entiteit of gebeurtenissen 
 overgeslagen worden als benodige feiten ontbreken. Zonder dat zou het hele raport mislukken.
 Soms is een enekele grote catch afdoende. Soms zijn er meerdere nodig 
 (genest of na elkaar) opdat er geen gebeurtenissen onnodig overgeslagen worden.
 </p><p>Voorbeelden om andere data te pakken te krijgen:</p>
 <pre>  PropertyDate date = (PropertyDate)indi.getProperty(new TagPath("INDI:NATU:DATE"));</pre>
 <p>Bekijk het bewerkingsoverzicht in GedCom mode om een TagPath samen te stellen. 
 </p><p>Familieverbanden volgen:</p>
 <pre>  Indi[] x = indi.getOlderSiblings();</pre>
 <pre>  Indi[] x = indi.getYoungerSiblings();</pre>
 <pre>  Indi[] x = indi.getBialogicalFather();</pre>
 <pre>  Indi[] x = indi.getBialogicalMother();</pre>
 <pre>  Indi[] x = indi.getSiblings(true); // include me or not</pre>
 <pre>  Indi[] x = fam.getChildren();</pre>
 <pre>  Indi[] x = fam.getChildren(true); // sorted or not</pre>
 <pre>  Indi[] x = fam.getPartners();</pre>
 <pre>  Indi   x = fam.getHusband();</pre>
 <pre>  Indi   x = fam.getWife();</pre>
 <pre>  Indi   x = fam.getOtherSpouse(indi);
 <pre>  Fam[]  x = indi.getFamiliesWhereChild();</pre> 
 <pre>  Fam[]  x = indi.getFamiliesWhereSpouse();</pre>
 <pre>  Fam    x = indi.getFamilyWhereBiologicalChild();</pre>

info.fr = <h1><center>Pyramide des Ages</center></h1>
 <div style="margin-left: 5px; margin-right: 5px;">
 Ce rapport montre la pyramide des âges de toutes les personnes
 présentes dans le fichier Gedcom actuellement ouvert.<br>
 <center>
 <img src="ReportDemographySample.gif"><br>
 </center>
 <br>
 Logiquement la base devrait être moins large que la partie
 supérieure, mais du fait de la mortalité infantile
 trés forte, la base risque d'être plus importante que
 dans les temps modernes.<br>
 <h2>PARAMETRAGE</h2>
 Vous disposez d'une option :<br>
 <ul>
 <li>&nbsp;La tranche d'âge pour laquelle l'analyse doit 
 être faite. Ainsi si par exemple vous mettez "2" on examinera 
 le nombre de personnes qui sont décédées entre leur naissance 
 et leur deuxième anniversaire, puis entre leur deuxième 
 anniversaire et leur quatrième, puis entre leur quatrième 
 et leur sixième, et ainsi de suite. Si vous mettez "1", on 
 regardera le nombre de personnes qui sont décédées durant 
 leur première année de vie, puis durant leur deuxième 
 année, etc...</li>
 <li>En abscisse, vous avez le nombre de personnes, en rouge 
 les femmes, et en bleu les hommes, et en ordonnées les 
 tranches d'âge.</li>
 </ul>
 <h3>Astuce :</h3>
 Pour qu'un paramètre soit pris en compte, veillez à
 le valider en cliquant ensuite, après la saisie, sur un
 endroit quelconque de l'écran.<br>
 </div>
 <br>

title    = Demographic Pyramid for {0}
title.de = Alterspyramide für {0}
title.fr = Pyramide des âges pour {0}
title.nl = Diagram voor {0}

ageGroupSize    = Size of Age Groups :
ageGroupSize.de = Größe einer Altersgruppe :
ageGroupSize.fr = Analyse par tranches d'âge de xx années :
ageGroupSize.nl = Grootte van een leeftijdsgroep :

# legend on x-axis

men         = Men
men.de      = Männer
men.fr      = Hommes
men.nl      = Mannen

women       = Women
women.de    = Frauen
women.fr    = Femmes
women.nl    = Vrouwen

fathers     = Fathers
fathers.de  = Vater
fathers.fr  = Pères
fathers.nl  = Vaders

mothers     = Mothers
mothers.de  = Mutter
mothers.fr  = Mères
mothers.nl  = Moeders

# label both for y-axis and tab

ageAtChildsBirth     = age when a child was born
ageAtChildsBirth.de  = alter beim geburt eines Kindes
ageAtChildsBirth.fr  = Age à la naissance d'un enfant
ageAtChildsBirth.nl  = leeftijd bij de geboorte van een kind

ageAtFirstMariage    = age when married for the first time
ageAtFirstMariage.de = alter beim heiraten (den 1. mahl)
ageAtFirstMariage.fr = Age d'une personne lors de sa première union
ageAtFirstMariage.nl = leeftijd bij het eerste huwelijk

ageAtParentsDeath    = age when a parent died
ageAtParentsDeath.de = alter beim Sterben einer der Eltern
ageAtParentsDeath.fr = Age des personnes quand l'un de leurs 2 parents décède
ageAtParentsDeath.nl = leeftijd wanneer een ouder overleed

ageOfYoungestChildLeftBehind    = age of youngest child when a parent died
ageOfYoungestChildLeftBehind.de = alter des jungsten Kindes beim Sterben einer der Eltern
ageOfYoungestChildLeftBehind.fr = Age du plus jeune enfant laissé lors du décès d'un parent
ageOfYoungestChildLeftBehind.nl = leeftijd jonste bij overlijden van een ouder
 
ageAtDivorce    = age at divorce
ageAtDivorce.de = Alter beim Trennung
ageAtDivorce.fr = Age lors d'un divorce
ageAtDivorce.nl = leeftijd bij scheiding

ageOfOldestWhenYoungestWasBorn    = age of the oldest when the youngest was born
ageOfOldestWhenYoungestWasBorn.de = alter des Eldesten beim geburt des Jungsten
ageOfOldestWhenYoungestWasBorn.fr = Age de l'ainé lors de la naissance du dernier enfant
ageOfOldestWhenYoungestWasBorn.nl = leeftijd van oudste bij geboorte jongste

ageOfYoungestOrphan    = age of youngest when second parent died
ageOfYoungestOrphan.de = alter des Jungsten beim Sterben der 2. Elter
ageOfYoungestOrphan.fr = Age du plus jeune enfant lors du décès du 2ème parent
ageOfYoungestOrphan.nl = leeftijd jongste bij overlijden 2e ouder

yearsSinceDeathOfSpouse    = years that a spouse is outlived
yearsSinceDeathOfSpouse.de = Jahren das einer der Partner länger lebte
yearsSinceDeathOfSpouse.fr = Nombre d'années vécues depuis le décès du conjoint
yearsSinceDeathOfSpouse.nl = jaren dat een partner langer leefde

# End of File

