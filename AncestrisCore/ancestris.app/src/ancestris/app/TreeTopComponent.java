/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ancestris.app;

import ancestris.view.AncestrisDockModes;
import ancestris.view.AncestrisViewInterface;
import genj.gedcom.Context;
import genj.tree.TreeView;
import genj.tree.TreeViewFactory;
import genj.util.swing.Action2.Group;
import genj.view.ViewFactory;
import java.awt.Graphics;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.util.lookup.ServiceProvider;
import org.openide.windows.RetainLocation;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//ancestris.app//Tree//EN",
autostore = false)
@RetainLocation(AncestrisDockModes.OUTPUT)
@ServiceProvider(service = AncestrisViewInterface.class)
public final class TreeTopComponent extends GenjViewTopComponent {

    private static TreeTopComponent factory;
    private static ViewFactory viewfactory = new TreeViewFactory();
    private static final String PREFERRED_ID = "TreeTopComponent";

    public ViewFactory getViewFactory() {
        return viewfactory;
    }

    @Override
    public String getDefaultFactoryMode() {
        return AncestrisDockModes.OUTPUT;
    }

    /*
     * FIXME: GenjViewTopComponent (this class' base class) is an ActionProvider.
     * The enclosed TreeView is an ActionProvider too.
     * This result in these action being provided twice so we don't create them here
     * overiding createActions.
     * XXX/ This will be properly fixed when the TreeView
     * will be in it own AncestrisPlugin
     */
    @Override
    public void createActions(Context context, Purpose purpose, Group into) {
        return;
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    /**
     * Gets default instance. Do not use directly: reserved for *.settings files only,
     * i.e. deserialization routines; otherwise you could get a non-deserialized instance.
     * To obtain the singleton instance, use {@link #findInstance}.
     */
    public static synchronized TreeTopComponent getFactory() {
        if (factory == null) {
            factory = new TreeTopComponent();
        }
        return factory;
    }

    public void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        super.writeProperties(p);
    }

    public Object readProperties(java.util.Properties p) {
        super.readProperties(p);
        return this;
    }

    @Override
    public void viewContext() {
        super.viewContext();
            String root = getContext().getGedcom().getRegistry().get("tree.root", (String) null);
            TreeView v = (TreeView) getView();
            if (root != null) {
                v.setRoot(getContext().getGedcom().getEntity(root));
            }
            if (v.getRoot() == null){
                v.setRoot(getContext().getEntity());
            }
    }

    @Override
    public void runWhenSizeIsCorrect() {
        TreeView v = (TreeView) getView();
        v.setRoot(v.getRoot());
        v.show(v.getContext().getEntity(), true);
    }

    @Override
    protected String preferredID() {
        return PREFERRED_ID;
    }
}
