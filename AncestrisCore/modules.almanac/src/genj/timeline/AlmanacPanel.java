/*
 * Ancestris - http://www.ancestris.org
 * 
 * Copyright 2016 Ancestris
 * 
 * Author: Frédéric Lapeyre (frederic@ancestris.org).
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
package genj.timeline;

import genj.almanac.Almanac;
import genj.util.swing.ListSelectionWidget;
import java.util.Set;

/**
 *
 * @author frederic
 */
public class AlmanacPanel extends javax.swing.JPanel {

    private ListSelectionWidget<String> almanacsList, almanacCategories;
    
    /**
     * Creates new form almanacPanel
     */
    public AlmanacPanel(Almanac almanac, TimelineView view, TimelineViewSettings.Commit commit) {

        // List
        almanacsList = new ListSelectionWidget<String>() {
            protected String getText(String choice) {
                return "<html><body>" + choice + "</body></html>";
            }
        };
        almanacsList.setChoices(almanac.getAlmanacs());
        almanacsList.setCheckedChoices(view.getAlmanacList());
        almanacsList.addChangeListener(commit);
        
        // Categories
        almanacCategories = new ListSelectionWidget<String>() {
            protected String getText(String choice) {
                return "<html><body>" + choice + "</body></html>";
            }
        };
        almanacCategories.setChoices(almanac.getCategories());
        almanacCategories.setCheckedChoices(view.getAlmanacCategories());
        almanacCategories.addChangeListener(commit);

        initComponents();
        listScrollPane.setViewportView(almanacsList);
        catScrollPane.setViewportView(almanacCategories);
        
    }
    
    public Set<String> getCheckedAlmanacs() {
        return almanacsList.getCheckedChoices();
    }

    public Set<String> getCheckedCategories() {
        return almanacCategories.getCheckedChoices();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listLabel = new javax.swing.JLabel();
        listScrollPane = new javax.swing.JScrollPane();
        catLabel = new javax.swing.JLabel();
        catScrollPane = new javax.swing.JScrollPane();

        org.openide.awt.Mnemonics.setLocalizedText(listLabel, org.openide.util.NbBundle.getMessage(AlmanacPanel.class, "AlmanacPanel.listLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(catLabel, org.openide.util.NbBundle.getMessage(AlmanacPanel.class, "AlmanacPanel.catLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listLabel)
                    .addComponent(listScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(catLabel)
                        .addGap(0, 60, Short.MAX_VALUE))
                    .addComponent(catScrollPane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listLabel)
                    .addComponent(catLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(catScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                    .addComponent(listScrollPane))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel catLabel;
    private javax.swing.JScrollPane catScrollPane;
    private javax.swing.JLabel listLabel;
    private javax.swing.JScrollPane listScrollPane;
    // End of variables declaration//GEN-END:variables
}
