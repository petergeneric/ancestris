/*
 * Ancestris - http://www.ancestris.org
 * 
 * Copyright 2011 Ancestris
 * 
 * Author: Daniel Andre (daniel@ancestris.org).
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
package ancestris.modules.editors.standard;

import ancestris.api.editor.Editor;
import genj.edit.beans.PropertyBean;
import genj.gedcom.Context;
import genj.gedcom.Entity;
import genj.gedcom.GedcomException;
import genj.gedcom.Indi;
import genj.gedcom.TagPath;
import genj.view.ViewContext;
import java.util.Arrays;
import java.util.List;
import org.openide.util.Exceptions;

public final class IndiPanel extends Editor {

    private List<PropertyBean> childBeans;
    private Context context;

    public IndiPanel() {
        setOpaque(true);
        initComponents();
        childBeans = Arrays.asList(deathBean, birthBean, aSexBean1, aNameBean2, aSimpleBean1, aPlaceBean2);
    }
    private Indi indi;

    /**
     * Get the value of indi
     *
     * @return the value of indi
     */
    public Indi getIndi() {
        return indi;
    }

    /**
     * Set the value of indi
     *
     * @param entity new value of indi
     */
    @Override
    public void setContext(Context context) {
        this.context = context;
        if (context == null) {
            return;
        }

        Entity entity = context.getEntity();
        if (entity == null || !(entity instanceof Indi)) {
            return;
        }

        this.indi = (Indi) entity;
        deathBean.setContext(indi, null);
        birthBean.setContext(indi, null);
        aSexBean1.setContext(indi, null);
        aNameBean2.setContext(indi, null);
        aSimpleBean1.setContext(indi, TagPath.valueOf(".:OCCU"));
        aPlaceBean2.setContext(indi, TagPath.valueOf(".:RESI:PLAC"));
    }

    @Override
    public ViewContext getContext() {
        return new ViewContext(context);
    }

    /**
     * commit beans - transaction has to be running already
     */
    @Override
    public void commit() {
        try {
            for (PropertyBean bean : childBeans) {
                bean.commit();
            }
        } catch (GedcomException ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    @Override
    protected String getTitleImpl() {
        if (context == null || context.getEntity() == null) {
            return "";
        }
        return (new ViewContext(context.getEntity())).getText();
    }

//XXX: to be replaced    @Override
//    public boolean hasChanged() {
//        boolean changed = false;
//        for (PropertyBean bean:childBeans)
//            changed |= bean.hasChanged();
//        return changed;
//    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aNameBean2 = new ancestris.modules.beans.ANameBean();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        aPlaceBean2 = new ancestris.modules.beans.APlaceBean();
        jLabel5 = new javax.swing.JLabel();
        aSexBean1 = new ancestris.modules.beans.ASexBean();
        deathBean = new ancestris.modules.beans.AEventBean();
        birthBean = new ancestris.modules.beans.AEventBean();
        aSimpleBean1 = new ancestris.modules.beans.AChoiceBean();

        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(IndiPanel.class, "IndiPanel.jLabel4.text")); // NOI18N

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(IndiPanel.class, "IndiPanel.jLabel1.text")); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(76, 15));
        jLabel1.setMinimumSize(new java.awt.Dimension(76, 15));
        jLabel1.setPreferredSize(new java.awt.Dimension(76, 15));

        jLabel5.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(IndiPanel.class, "IndiPanel.jLabel5.text")); // NOI18N

        deathBean.setRequestFocusEnabled(false);
        deathBean.setShowKnown(true);
        deathBean.setTag("DEAT"); // NOI18N

        birthBean.setTag("BIRT"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(deathBean, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(birthBean, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(32, 32, 32)
                                .addComponent(aNameBean2, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(aSexBean1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aPlaceBean2, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aSimpleBean1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(aNameBean2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aSexBean1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(birthBean, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deathBean, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aPlaceBean2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(aSimpleBean1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ancestris.modules.beans.ANameBean aNameBean2;
    private ancestris.modules.beans.APlaceBean aPlaceBean2;
    private ancestris.modules.beans.ASexBean aSexBean1;
    private ancestris.modules.beans.AChoiceBean aSimpleBean1;
    private ancestris.modules.beans.AEventBean birthBean;
    private ancestris.modules.beans.AEventBean deathBean;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
