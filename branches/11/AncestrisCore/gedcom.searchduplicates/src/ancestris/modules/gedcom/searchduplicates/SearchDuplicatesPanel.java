/*
 * Ancestris - http://www.ancestris.org
 * 
 * Copyright 2017 Ancestris
 * 
 * Author: Frédéric Lapeyre (frederic@ancestris.org).
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
package ancestris.modules.gedcom.searchduplicates;

import ancestris.modules.gedcom.matchers.MatcherOptionsPanel;
import ancestris.modules.gedcom.matchers.MatcherOptions;
import ancestris.util.swing.DialogManager;
import genj.gedcom.Gedcom;
import genj.util.Registry;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import org.openide.util.NbBundle;

/**
 *
 * @author frederic
 */
public class SearchDuplicatesPanel extends javax.swing.JPanel {

    private Registry registry = null;
    private Gedcom gedcom = null;
    private JButton OKButton = null;
    
    private TreeMap<String, JCheckBox> entitiesChoices = new TreeMap<String, JCheckBox>();
    private TreeMap<String, JButton> entitiesButtons = new TreeMap<String, JButton>();
    private TreeMap<String, MatcherOptions> selectedOptions = new TreeMap<String, MatcherOptions>();
    
    /**
     * Creates new form SearchDuplicatesPanel
     */
    public SearchDuplicatesPanel(Gedcom gedcom, JButton OKButton) {
        this.gedcom = gedcom;
        this.OKButton = OKButton;
        registry = Registry.get(getClass());
        
        initComponents();
        
        //INDI, FAM, OBJE, NOTE, SOUR, SUBM, REPO
        entitiesChoices.put(Gedcom.INDI, jCheckBox1); 
        entitiesChoices.put(Gedcom.FAM, jCheckBox2);
        entitiesChoices.put(Gedcom.SUBM, jCheckBox3);
        entitiesChoices.put(Gedcom.REPO, jCheckBox4);
        entitiesChoices.put(Gedcom.SOUR, jCheckBox5);
        entitiesChoices.put(Gedcom.NOTE, jCheckBox6);
        entitiesChoices.put(Gedcom.OBJE, jCheckBox7);
        
        entitiesButtons.put(Gedcom.INDI, jButton1);
        entitiesButtons.put(Gedcom.FAM, jButton2);
        entitiesButtons.put(Gedcom.SUBM, jButton3);
        entitiesButtons.put(Gedcom.REPO, jButton4);
        entitiesButtons.put(Gedcom.SOUR, jButton5);
        entitiesButtons.put(Gedcom.NOTE, jButton6);
        entitiesButtons.put(Gedcom.OBJE, jButton7);
        
        for (String entityTag : entitiesChoices.keySet()) {
            JCheckBox cb = entitiesChoices.get(entityTag);
            int size = gedcom.getEntities(entityTag).size();
            cb.setText(Gedcom.getName(entityTag) + " (" + size + ")");
            cb.setEnabled(size > 0);
            cb.setSelected(size > 0 && registry.get("duplicateSelected."+entityTag, entityTag.equals(Gedcom.INDI)));
            JButton b = entitiesButtons.get(entityTag);
            b.setText(NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jButton.text"));
            b.setEnabled(size > 0);
            cb.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    setButton();
                }
            });
            b.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    openCriteria((JButton) e.getSource());
                }
            });
        }
        
        setButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabelText = new javax.swing.JLabel();
        jLabelSelect = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButton4 = new javax.swing.JButton();
        jCheckBox5 = new javax.swing.JCheckBox();
        jButton5 = new javax.swing.JButton();
        jCheckBox6 = new javax.swing.JCheckBox();
        jButton6 = new javax.swing.JButton();
        jCheckBox7 = new javax.swing.JCheckBox();
        jButton7 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(340, 359));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(346, 359));

        jPanel1.setPreferredSize(new java.awt.Dimension(330, 353));

        org.openide.awt.Mnemonics.setLocalizedText(jLabelText, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jLabelText.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelSelect, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jLabelSelect.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jCheckBox1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jButton1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox2, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jCheckBox2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jButton2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox3, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jCheckBox3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton3, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jButton3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox4, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jCheckBox4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton4, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jButton4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox5, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jCheckBox5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton5, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jButton5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox6, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jCheckBox6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton6, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jButton6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox7, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jCheckBox7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton7, org.openide.util.NbBundle.getMessage(SearchDuplicatesPanel.class, "SearchDuplicatesPanel.jButton7.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSelect)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox2)
                                    .addComponent(jCheckBox1)
                                    .addComponent(jCheckBox3)
                                    .addComponent(jCheckBox6)
                                    .addComponent(jCheckBox7)
                                    .addComponent(jCheckBox4)
                                    .addComponent(jCheckBox5))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3)
                                    .addComponent(jButton4)
                                    .addComponent(jButton5)
                                    .addComponent(jButton6)
                                    .addComponent(jButton7)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelText, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSelect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox4)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox5)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox6)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox7)
                    .addComponent(jButton7))
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
    }//GEN-LAST:event_formComponentResized


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JLabel jLabelSelect;
    private javax.swing.JLabel jLabelText;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables


    public List<String> getEntitiesToCheck() {
        List<String> ret = new ArrayList<String>();
        for (String entityTag : entitiesChoices.keySet()) {
            JCheckBox cb = entitiesChoices.get(entityTag);
            if (cb.isSelected()) {
                ret.add(entityTag);
            }
        }
        return ret;
    }

    public TreeMap<String, MatcherOptions> getSelectedOptions() {
        for (String entityTag : entitiesChoices.keySet()) {
            JCheckBox cb = entitiesChoices.get(entityTag);
            if (cb.isSelected()) {
                selectedOptions.put(entityTag, new MatcherOptionsPanel(entityTag).getMatcherOptions());
            }
        }
        return selectedOptions;
    }

    private void setButton() {
        boolean activated = false;
        for (String entityTag : entitiesChoices.keySet()) {
            JCheckBox cb = entitiesChoices.get(entityTag);
            activated |= cb.isSelected();
            registry.put("duplicateSelected."+entityTag, cb.isSelected());
        }
        OKButton.setEnabled(activated);
    }

    private void openCriteria(JButton b) {
        for (String entityTag : entitiesButtons.keySet()) {
            JButton readB = entitiesButtons.get(entityTag);
            if (b.equals(readB)) {
                MatcherOptionsPanel panel = new MatcherOptionsPanel(entityTag);
                Object o = DialogManager.create(NbBundle.getMessage(MatcherOptionsPanel.class, "CTL_MatcherOptionsTitle"), panel)
                        .setMessageType(DialogManager.PLAIN_MESSAGE)
                        .setOptions(new Object[]{DialogManager.OK_OPTION, DialogManager.CANCEL_OPTION})
                        .show();
                if (o != DialogManager.OK_OPTION) {
                    return;
                }
                selectedOptions.put(entityTag, panel.getMatcherOptions());
            }
        }
    }

}
