/*
 * Ancestris - http://www.ancestris.org
 * 
 * Copyright 2018 Ancestris
 * 
 * Author: Frédéric Lapeyre (frederic@ancestris.org).
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
package ancestris.core.actions;

import genj.gedcom.Entity;
import genj.gedcom.Property;
import javax.swing.BorderFactory;
import javax.swing.UIManager;
import org.openide.util.NbBundle;

/**
 *
 * @author frederic
 */
public class TitleContextMenuPanel extends javax.swing.JPanel {

    private String actionsMenutext;

    /**
     * Creates new form TitleActionPanel
     */
    public TitleContextMenuPanel(Property property) {
        
        if (property != null) {
            actionsMenutext = NbBundle.getMessage(TitleContextMenuPanel.class, "TitleActionPanel.actionsMenuLabel.text", property.getPropertyName().toUpperCase(property.getGedcom().getLocale()));
        } else {
            actionsMenutext = NbBundle.getMessage(TitleContextMenuPanel.class, "TitleActionPanel.actionsMenuLabel.multiple");
        }
        
        initComponents();
        setBackground(UIManager.getColor("MenuItem.selectionBackground"));
        setForeground(UIManager.getColor("MenuItem.selectionForeground"));

        if (property != null) {
            propertyIconLabel.setIcon(property.getImage());
            propertyTitle.setText(property != null ? property.getDisplayTitle() : "multiple selection");
        } else {
            actionsMenuLabel.setBorder(BorderFactory.createEmptyBorder(0, 0, 6, 0));
            propertyIconLabel.setBorder(BorderFactory.createEmptyBorder(0, 0, 6, 0));
            propertyTitle.setVisible(false);
            jSeparator.setVisible(false);
            
        }
        
        String label = NbBundle.getMessage(TitleContextMenuPanel.class, "TitleActionPanel.propertyDescription.label");
        String desc = property != null ? property.getDisplayDescription(80) : null;
        if (desc == null || desc.isEmpty()) {
            propertyShortDescription.setVisible(false);
            propertyShortDescription.setText(" ");
        } else {
            propertyShortDescription.setVisible(true);
            propertyShortDescription.setText("<html><body width=\"400\"><center>" + label + ": " + desc + "</center></html>");
        }
        
        if (property != null) {
            desc = property.getDisplayValue();
            if (property instanceof Entity) {
                desc = ((Entity) property).toString(true);
            }
            if (desc == null || desc.isEmpty()) {
                setToolTipText(null);
            } else {
                String width = "";
                if (desc.length() > 80) {
                    width = "<body width=550>";
                }
                setToolTipText(new StringBuilder("<html>" + width)
                        .append(desc.replaceAll("\\n", "<br/>"))
                        .append("</body></html>")
                        .toString());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        actionsMenuLabel = new javax.swing.JLabel();
        propertyIconLabel = new javax.swing.JLabel();
        jSeparator = new javax.swing.JSeparator();
        propertyTitle = new javax.swing.JLabel();
        propertyShortDescription = new javax.swing.JLabel();

        actionsMenuLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        actionsMenuLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/core/resources/images/Menu.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(actionsMenuLabel, actionsMenutext);
        actionsMenuLabel.setIconTextGap(8);

        propertyIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ancestris/core/resources/images/Gedcom.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(propertyIconLabel, org.openide.util.NbBundle.getMessage(TitleContextMenuPanel.class, "TitleContextMenuPanel.propertyIconLabel.text")); // NOI18N

        propertyTitle.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        propertyTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(propertyTitle, org.openide.util.NbBundle.getMessage(TitleContextMenuPanel.class, "TitleContextMenuPanel.propertyTitle.text")); // NOI18N
        propertyTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        propertyShortDescription.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(propertyShortDescription, org.openide.util.NbBundle.getMessage(TitleContextMenuPanel.class, "TitleContextMenuPanel.propertyShortDescription.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(actionsMenuLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(propertyIconLabel))
                    .addComponent(propertyTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(propertyShortDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(propertyIconLabel)
                    .addComponent(actionsMenuLabel))
                .addGap(2, 2, 2)
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(propertyTitle)
                .addGap(2, 2, 2)
                .addComponent(propertyShortDescription)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel actionsMenuLabel;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JLabel propertyIconLabel;
    private javax.swing.JLabel propertyShortDescription;
    private javax.swing.JLabel propertyTitle;
    // End of variables declaration//GEN-END:variables
}
