/*
 * Ancestris - http://www.ancestris.org
 * 
 * Copyright 2020 Ancestris
 * 
 * Author: Zurga (zurga@ancestris.org).
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
package ancestris.modules.editors.genealogyeditor.utilities;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

/**
 * Filter toolbar for Ari√®s.
 *
 * @author Zurga
 */
public class FilterToolBar extends javax.swing.JPanel {

    private ComboBoxModel<String> cbm;

    private AriesFilterPanel myAfp = null;

    /**
     * Creates new form FilterToolBar
     */
    public FilterToolBar() {
        this(new DefaultComboBoxModel<>(new String[] {"Column1", "Column2"}));
    }

    public FilterToolBar(AriesFilterPanel afp) {
        this(afp.getComboBoxModel());
        myAfp = afp;
    }
    
    private FilterToolBar(ComboBoxModel newCbm){
        cbm = newCbm;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jLabelFilter = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTFFilter = new javax.swing.JTextField();
        jBFilter = new javax.swing.JButton();
        jBClear = new javax.swing.JButton();

        jToolBar1.setBorder(null);
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setMinimumSize(new java.awt.Dimension(500, 25));
        jToolBar1.setPreferredSize(new java.awt.Dimension(450, 29));

        org.openide.awt.Mnemonics.setLocalizedText(jLabelFilter, org.openide.util.NbBundle.getMessage(FilterToolBar.class, "FilterToolBar.jLabelFilter.text")); // NOI18N
        jToolBar1.add(jLabelFilter);

        jComboBox1.setModel(cbm);
        jComboBox1.setMinimumSize(new java.awt.Dimension(75, 22));
        jComboBox1.setPreferredSize(new java.awt.Dimension(150, 22));
        jToolBar1.add(jComboBox1);

        jTFFilter.setText(org.openide.util.NbBundle.getMessage(FilterToolBar.class, "FilterToolBar.jTFFilter.text")); // NOI18N
        jTFFilter.setMinimumSize(new java.awt.Dimension(150, 22));
        jTFFilter.setPreferredSize(new java.awt.Dimension(150, 22));
        jTFFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFFilterKeyTyped(evt);
            }
        });
        jToolBar1.add(jTFFilter);

        org.openide.awt.Mnemonics.setLocalizedText(jBFilter, org.openide.util.NbBundle.getMessage(FilterToolBar.class, "FilterToolBar.jBFilter.text")); // NOI18N
        jBFilter.setFocusable(false);
        jBFilter.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBFilter.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFilterActionPerformed(evt);
            }
        });
        jToolBar1.add(jBFilter);

        org.openide.awt.Mnemonics.setLocalizedText(jBClear, org.openide.util.NbBundle.getMessage(FilterToolBar.class, "FilterToolBar.jBClear.text")); // NOI18N
        jBClear.setFocusable(false);
        jBClear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBClear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBClearActionPerformed(evt);
            }
        });
        jToolBar1.add(jBClear);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFilterActionPerformed
        doFilter();
    }//GEN-LAST:event_jBFilterActionPerformed

    private void jBClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBClearActionPerformed
        jTFFilter.setText("");
        doFilter();
    }//GEN-LAST:event_jBClearActionPerformed

    private void jTFFilterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFFilterKeyTyped
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            doFilter();
        }
    }//GEN-LAST:event_jTFFilterKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBClear;
    private javax.swing.JButton jBFilter;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabelFilter;
    private javax.swing.JTextField jTFFilter;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    private void doFilter() {
        myAfp.filter(jComboBox1.getSelectedIndex(), jTFFilter.getText());
    }

}
